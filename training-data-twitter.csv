instruction,input,output
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I am neo4j. Excluding common stop words in English, find the most used words in my tweets that have at least 1 favourite.","MATCH (n:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 1
UNWIND split(replace(replace(replace(t.text, ""."", """"), "","", """"), ""!"", """"), "" "") AS word
WITH toLower(word) AS lowerWord, t.favorites AS Favorites
WHERE NOT lowerWord IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'i', '–', 'via', '?',
  '-', '—', '.', ',', '!', '?', ':', ';', '""', ""'"", ""’"", ""”"", ""“"", ""#"", ""@"", ""("", "")"", ""["", ""]"", ""{"", ""}"", ""&"", ""*"", ""%"", ""+"", ""="", ""/"", ""|"", ""\\"", ""<"", "">"", ""^"", ""$"", ""`"", ""~""
] AND lowerWord <> """"
GROUP BY lowerWord
RETURN lowerWord AS Word, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I am neo4j. What are the most common words in my highly favorited tweets, excluding English stop words?","MATCH (n:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 1
UNWIND split(replace(replace(replace(t.text, ""."", """"), "","", """"), ""!"", """"), "" "") AS word
WITH toLower(word) AS lowerWord, t.favorites AS Favorites
WHERE NOT lowerWord IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'i', '–', 'via', '?',
  '-', '—', '.', ',', '!', '?', ':', ';', '""', ""'"", ""’"", ""”"", ""“"", ""#"", ""@"", ""("", "")"", ""["", ""]"", ""{"", ""}"", ""&"", ""*"", ""%"", ""+"", ""="", ""/"", ""|"", ""\\"", ""<"", "">"", ""^"", ""$"", ""`"", ""~""
] AND lowerWord <> """"
GROUP BY lowerWord
RETURN lowerWord AS Word, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I am neo4j. Identify frequently used words in my tweets with multiple favorites, ignoring common stop words.","MATCH (n:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 1
UNWIND split(replace(replace(replace(t.text, ""."", """"), "","", """"), ""!"", """"), "" "") AS word
WITH toLower(word) AS lowerWord, t.favorites AS Favorites
WHERE NOT lowerWord IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'i', '–', 'via', '?',
  '-', '—', '.', ',', '!', '?', ':', ';', '""', ""'"", ""’"", ""”"", ""“"", ""#"", ""@"", ""("", "")"", ""["", ""]"", ""{"", ""}"", ""&"", ""*"", ""%"", ""+"", ""="", ""/"", ""|"", ""\\"", ""<"", "">"", ""^"", ""$"", ""`"", ""~""
] AND lowerWord <> """"
GROUP BY lowerWord
RETURN lowerWord AS Word, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I am neo4j. Show the top words from my favorited tweets, removing usual English stop words.","MATCH (n:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 1
UNWIND split(replace(replace(replace(t.text, ""."", """"), "","", """"), ""!"", """"), "" "") AS word
WITH toLower(word) AS lowerWord, t.favorites AS Favorites
WHERE NOT lowerWord IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'i', '–', 'via', '?',
  '-', '—', '.', ',', '!', '?', ':', ';', '""', ""'"", ""’"", ""”"", ""“"", ""#"", ""@"", ""("", "")"", ""["", ""]"", ""{"", ""}"", ""&"", ""*"", ""%"", ""+"", ""="", ""/"", ""|"", ""\\"", ""<"", "">"", ""^"", ""$"", ""`"", ""~""
] AND lowerWord <> """"
GROUP BY lowerWord
RETURN lowerWord AS Word, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I am neo4j. List the significant words in tweets I've posted that received many favorites, excluding trivial words.","MATCH (n:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 1
UNWIND split(replace(replace(replace(t.text, ""."", """"), "","", """"), ""!"", """"), "" "") AS word
WITH toLower(word) AS lowerWord, t.favorites AS Favorites
WHERE NOT lowerWord IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'i', '–', 'via', '?',
  '-', '—', '.', ',', '!', '?', ':', ';', '""', ""'"", ""’"", ""”"", ""“"", ""#"", ""@"", ""("", "")"", ""["", ""]"", ""{"", ""}"", ""&"", ""*"", ""%"", ""+"", ""="", ""/"", ""|"", ""\\"", ""<"", "">"", ""^"", ""$"", ""`"", ""~""
] AND lowerWord <> """"
GROUP BY lowerWord
RETURN lowerWord AS Word, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I am neo4j. Find the predominant words in my tweets that have been favorited more than once, avoiding stop words.","MATCH (n:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 1
UNWIND split(replace(replace(replace(t.text, ""."", """"), "","", """"), ""!"", """"), "" "") AS word
WITH toLower(word) AS lowerWord, t.favorites AS Favorites
WHERE NOT lowerWord IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'i', '–', 'via', '?',
  '-', '—', '.', ',', '!', '?', ':', ';', '""', ""'"", ""’"", ""”"", ""“"", ""#"", ""@"", ""("", "")"", ""["", ""]"", ""{"", ""}"", ""&"", ""*"", ""%"", ""+"", ""="", ""/"", ""|"", ""\\"", ""<"", "">"", ""^"", ""$"", ""`"", ""~""
] AND lowerWord <> """"
GROUP BY lowerWord
RETURN lowerWord AS Word, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I am neo4j. Reveal the most used words in my tweets with a high number of favorites, not counting stop words.","MATCH (n:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 1
UNWIND split(replace(replace(replace(t.text, ""."", """"), "","", """"), ""!"", """"), "" "") AS word
WITH toLower(word) AS lowerWord, t.favorites AS Favorites
WHERE NOT lowerWord IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'i', '–', 'via', '?',
  '-', '—', '.', ',', '!', '?', ':', ';', '""', ""'"", ""’"", ""”"", ""“"", ""#"", ""@"", ""("", "")"", ""["", ""]"", ""{"", ""}"", ""&"", ""*"", ""%"", ""+"", ""="", ""/"", ""|"", ""\\"", ""<"", "">"", ""^"", ""$"", ""`"", ""~""
] AND lowerWord <> """"
GROUP BY lowerWord
RETURN lowerWord AS Word, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I am neo4j. What words appear most often in my well-favorited tweets after removing stop words?,"MATCH (n:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 1
UNWIND split(replace(replace(replace(t.text, ""."", """"), "","", """"), ""!"", """"), "" "") AS word
WITH toLower(word) AS lowerWord, t.favorites AS Favorites
WHERE NOT lowerWord IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'i', '–', 'via', '?',
  '-', '—', '.', ',', '!', '?', ':', ';', '""', ""'"", ""’"", ""”"", ""“"", ""#"", ""@"", ""("", "")"", ""["", ""]"", ""{"", ""}"", ""&"", ""*"", ""%"", ""+"", ""="", ""/"", ""|"", ""\\"", ""<"", "">"", ""^"", ""$"", ""`"", ""~""
] AND lowerWord <> """"
GROUP BY lowerWord
RETURN lowerWord AS Word, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I am neo4j. Determine the common words in my favorited tweets, excluding stop words and punctuation.","MATCH (n:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 1
UNWIND split(replace(replace(replace(t.text, ""."", """"), "","", """"), ""!"", """"), "" "") AS word
WITH toLower(word) AS lowerWord, t.favorites AS Favorites
WHERE NOT lowerWord IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'i', '–', 'via', '?',
  '-', '—', '.', ',', '!', '?', ':', ';', '""', ""'"", ""’"", ""”"", ""“"", ""#"", ""@"", ""("", "")"", ""["", ""]"", ""{"", ""}"", ""&"", ""*"", ""%"", ""+"", ""="", ""/"", ""|"", ""\\"", ""<"", "">"", ""^"", ""$"", ""`"", ""~""
] AND lowerWord <> """"
GROUP BY lowerWord
RETURN lowerWord AS Word, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I am neo4j. Analyze my tweets for frequently occurring words in those with multiple favorites, excluding stop words.","MATCH (n:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 1
UNWIND split(replace(replace(replace(t.text, ""."", """"), "","", """"), ""!"", """"), "" "") AS word
WITH toLower(word) AS lowerWord, t.favorites AS Favorites
WHERE NOT lowerWord IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'i', '–', 'via', '?',
  '-', '—', '.', ',', '!', '?', ':', ';', '""', ""'"", ""’"", ""”"", ""“"", ""#"", ""@"", ""("", "")"", ""["", ""]"", ""{"", ""}"", ""&"", ""*"", ""%"", ""+"", ""="", ""/"", ""|"", ""\\"", ""<"", "">"", ""^"", ""$"", ""`"", ""~""
] AND lowerWord <> """"
GROUP BY lowerWord
RETURN lowerWord AS Word, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I am neo4j. Uncover the most repeated words in my tweets that got several favorites, minus the stop words.","MATCH (n:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 1
UNWIND split(replace(replace(replace(t.text, ""."", """"), "","", """"), ""!"", """"), "" "") AS word
WITH toLower(word) AS lowerWord, t.favorites AS Favorites
WHERE NOT lowerWord IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'i', '–', 'via', '?',
  '-', '—', '.', ',', '!', '?', ':', ';', '""', ""'"", ""’"", ""”"", ""“"", ""#"", ""@"", ""("", "")"", ""["", ""]"", ""{"", ""}"", ""&"", ""*"", ""%"", ""+"", ""="", ""/"", ""|"", ""\\"", ""<"", "">"", ""^"", ""$"", ""`"", ""~""
] AND lowerWord <> """"
GROUP BY lowerWord
RETURN lowerWord AS Word, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I am neo4j. Explore the key words in my tweets with more than one favorite, excluding common English stop words.","MATCH (n:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 1
UNWIND split(replace(replace(replace(t.text, ""."", """"), "","", """"), ""!"", """"), "" "") AS word
WITH toLower(word) AS lowerWord, t.favorites AS Favorites
WHERE NOT lowerWord IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'i', '–', 'via', '?',
  '-', '—', '.', ',', '!', '?', ':', ';', '""', ""'"", ""’"", ""”"", ""“"", ""#"", ""@"", ""("", "")"", ""["", ""]"", ""{"", ""}"", ""&"", ""*"", ""%"", ""+"", ""="", ""/"", ""|"", ""\\"", ""<"", "">"", ""^"", ""$"", ""`"", ""~""
] AND lowerWord <> """"
GROUP BY lowerWord
RETURN lowerWord AS Word, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I am neo4j. Which words are most frequent in my highly favorited tweets when stop words are excluded?,"MATCH (n:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 1
UNWIND split(replace(replace(replace(t.text, ""."", """"), "","", """"), ""!"", """"), "" "") AS word
WITH toLower(word) AS lowerWord, t.favorites AS Favorites
WHERE NOT lowerWord IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'i', '–', 'via', '?',
  '-', '—', '.', ',', '!', '?', ':', ';', '""', ""'"", ""’"", ""”"", ""“"", ""#"", ""@"", ""("", "")"", ""["", ""]"", ""{"", ""}"", ""&"", ""*"", ""%"", ""+"", ""="", ""/"", ""|"", ""\\"", ""<"", "">"", ""^"", ""$"", ""`"", ""~""
] AND lowerWord <> """"
GROUP BY lowerWord
RETURN lowerWord AS Word, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I am neo4j. Provide a list of common words in my favorited tweets, cutting out the English language stop words.","MATCH (n:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 1
UNWIND split(replace(replace(replace(t.text, ""."", """"), "","", """"), ""!"", """"), "" "") AS word
WITH toLower(word) AS lowerWord, t.favorites AS Favorites
WHERE NOT lowerWord IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'i', '–', 'via', '?',
  '-', '—', '.', ',', '!', '?', ':', ';', '""', ""'"", ""’"", ""”"", ""“"", ""#"", ""@"", ""("", "")"", ""["", ""]"", ""{"", ""}"", ""&"", ""*"", ""%"", ""+"", ""="", ""/"", ""|"", ""\\"", ""<"", "">"", ""^"", ""$"", ""`"", ""~""
] AND lowerWord <> """"
GROUP BY lowerWord
RETURN lowerWord AS Word, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I am neo4j. Examine my tweets for words that often appear in those with numerous favorites, removing stop words.","MATCH (n:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 1
UNWIND split(replace(replace(replace(t.text, ""."", """"), "","", """"), ""!"", """"), "" "") AS word
WITH toLower(word) AS lowerWord, t.favorites AS Favorites
WHERE NOT lowerWord IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'i', '–', 'via', '?',
  '-', '—', '.', ',', '!', '?', ':', ';', '""', ""'"", ""’"", ""”"", ""“"", ""#"", ""@"", ""("", "")"", ""["", ""]"", ""{"", ""}"", ""&"", ""*"", ""%"", ""+"", ""="", ""/"", ""|"", ""\\"", ""<"", "">"", ""^"", ""$"", ""`"", ""~""
] AND lowerWord <> """"
GROUP BY lowerWord
RETURN lowerWord AS Word, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I am neo4j. Identify standout words in my tweets that have been favorited multiple times, excluding English stop words.","MATCH (n:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 1
UNWIND split(replace(replace(replace(t.text, ""."", """"), "","", """"), ""!"", """"), "" "") AS word
WITH toLower(word) AS lowerWord, t.favorites AS Favorites
WHERE NOT lowerWord IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'i', '–', 'via', '?',
  '-', '—', '.', ',', '!', '?', ':', ';', '""', ""'"", ""’"", ""”"", ""“"", ""#"", ""@"", ""("", "")"", ""["", ""]"", ""{"", ""}"", ""&"", ""*"", ""%"", ""+"", ""="", ""/"", ""|"", ""\\"", ""<"", "">"", ""^"", ""$"", ""`"", ""~""
] AND lowerWord <> """"
GROUP BY lowerWord
RETURN lowerWord AS Word, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I am neo4j. Find the hashtags used in my tweets that have the most favourites.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, t.favorites AS Favorites
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show the most favorited hashtags in tweets posted by 'neo4j'.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, t.favorites AS Favorites
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top hashtags in my 'neo4j' tweets based on favorites?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, t.favorites AS Favorites
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","List hashtags from 'neo4j's tweets, sorted by number of favorites.","MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, t.favorites AS Favorites
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the hashtags from 'neo4j's most favorited tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, t.favorites AS Favorites
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you find which hashtags in my tweets got the most favorites?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, t.favorites AS Favorites
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display the hashtags used in my most popular tweets as 'neo4j'.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, t.favorites AS Favorites
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What hashtags appear in 'neo4j's tweets with the highest favorites?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, t.favorites AS Favorites
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Rank the hashtags in 'neo4j's tweets by their favorite counts.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, t.favorites AS Favorites
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which hashtags from my 'neo4j' account are most favored by followers?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, t.favorites AS Favorites
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the hashtags from my tweets that have garnered the most likes.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, t.favorites AS Favorites
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the most loved hashtags in tweets by 'neo4j'.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, t.favorites AS Favorites
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List out 'neo4j's hashtags in tweets with top favorite numbers.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, t.favorites AS Favorites
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find out the most popular hashtags used in 'neo4j's tweeted content.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, t.favorites AS Favorites
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the leading hashtags in 'neo4j's tweets by favorite counts.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, t.favorites AS Favorites
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal 'neo4j's frequently favorited hashtags in tweeted messages.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, t.favorites AS Favorites
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I am neo4j. Which of my tweets have the most favourites? ,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text, t.favorites AS Favorites
ORDER BY t.favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show the top 10 most favorited tweets posted by 'neo4j'.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text, t.favorites AS Favorites
ORDER BY t.favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List 'neo4j's tweets that received the highest number of favorites.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text, t.favorites AS Favorites
ORDER BY t.favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you find the tweets from 'neo4j' with the most favorites?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text, t.favorites AS Favorites
ORDER BY t.favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify 'neo4j's tweets that have garnered the most favorites.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text, t.favorites AS Favorites
ORDER BY t.favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Display the most popular tweets by 'neo4j', ranked by favorites.","MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text, t.favorites AS Favorites
ORDER BY t.favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top favorited tweets made by the user 'neo4j'?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text, t.favorites AS Favorites
ORDER BY t.favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Rank 'neo4j's tweets by the number of favorites they've received.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text, t.favorites AS Favorites
ORDER BY t.favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Retrieve the 10 tweets from 'neo4j' with the highest favorites count.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text, t.favorites AS Favorites
ORDER BY t.favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which tweets by 'neo4j' are the most favorited?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text, t.favorites AS Favorites
ORDER BY t.favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I want to see 'neo4j's most loved tweets, sorted by favorites.","MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text, t.favorites AS Favorites
ORDER BY t.favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find 'neo4j's tweets that are the most favored by users.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text, t.favorites AS Favorites
ORDER BY t.favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me 'neo4j's tweets that have the highest engagement in terms of favorites.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text, t.favorites AS Favorites
ORDER BY t.favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List down the tweets of 'neo4j' that top the favorites chart.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text, t.favorites AS Favorites
ORDER BY t.favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are 'neo4j's most acclaimed tweets based on the count of favorites?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text, t.favorites AS Favorites
ORDER BY t.favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Give me the tweets from 'neo4j' that have been favorited the most times.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text, t.favorites AS Favorites
ORDER BY t.favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who do I, as neo4j, mention most frequently in my tweets?","MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
WITH mentioned.screen_name AS MentionedScreenName, COUNT(*) AS MentionsCount
ORDER BY MentionsCount DESC
RETURN MentionedScreenName, MentionsCount
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the users that 'neo4j' mentions the most in their tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
WITH mentioned.screen_name AS MentionedScreenName, COUNT(*) AS MentionsCount
ORDER BY MentionsCount DESC
RETURN MentionedScreenName, MentionsCount
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the top users mentioned by 'neo4j' on Twitter.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
WITH mentioned.screen_name AS MentionedScreenName, COUNT(*) AS MentionsCount
ORDER BY MentionsCount DESC
RETURN MentionedScreenName, MentionsCount
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you find out which users are most frequently mentioned by 'neo4j'?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
WITH mentioned.screen_name AS MentionedScreenName, COUNT(*) AS MentionsCount
ORDER BY MentionsCount DESC
RETURN MentionedScreenName, MentionsCount
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify who 'neo4j' tags most often in their tweet posts.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
WITH mentioned.screen_name AS MentionedScreenName, COUNT(*) AS MentionsCount
ORDER BY MentionsCount DESC
RETURN MentionedScreenName, MentionsCount
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display the most mentioned users by 'neo4j' in tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
WITH mentioned.screen_name AS MentionedScreenName, COUNT(*) AS MentionsCount
ORDER BY MentionsCount DESC
RETURN MentionedScreenName, MentionsCount
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the rankings of users based on how often 'neo4j' mentions them?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
WITH mentioned.screen_name AS MentionedScreenName, COUNT(*) AS MentionsCount
ORDER BY MentionsCount DESC
RETURN MentionedScreenName, MentionsCount
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Rank 'neo4j's mentions from most to least frequent.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
WITH mentioned.screen_name AS MentionedScreenName, COUNT(*) AS MentionsCount
ORDER BY MentionsCount DESC
RETURN MentionedScreenName, MentionsCount
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Retrieve the users that have been tagged the most by 'neo4j' in tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
WITH mentioned.screen_name AS MentionedScreenName, COUNT(*) AS MentionsCount
ORDER BY MentionsCount DESC
RETURN MentionedScreenName, MentionsCount
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who gets mentioned the most by 'neo4j' in their Twitter posts?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
WITH mentioned.screen_name AS MentionedScreenName, COUNT(*) AS MentionsCount
ORDER BY MentionsCount DESC
RETURN MentionedScreenName, MentionsCount
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I'm curious, who does 'neo4j' mention the most on Twitter?","MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
WITH mentioned.screen_name AS MentionedScreenName, COUNT(*) AS MentionsCount
ORDER BY MentionsCount DESC
RETURN MentionedScreenName, MentionsCount
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find out the top mentions by 'neo4j' in their tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
WITH mentioned.screen_name AS MentionedScreenName, COUNT(*) AS MentionsCount
ORDER BY MentionsCount DESC
RETURN MentionedScreenName, MentionsCount
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show the frequency of mentions by 'neo4j' towards other users.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
WITH mentioned.screen_name AS MentionedScreenName, COUNT(*) AS MentionsCount
ORDER BY MentionsCount DESC
RETURN MentionedScreenName, MentionsCount
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List down 'neo4j's most frequent mentions in their tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
WITH mentioned.screen_name AS MentionedScreenName, COUNT(*) AS MentionsCount
ORDER BY MentionsCount DESC
RETURN MentionedScreenName, MentionsCount
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What users are most commonly tagged in 'neo4j's tweets?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
WITH mentioned.screen_name AS MentionedScreenName, COUNT(*) AS MentionsCount
ORDER BY MentionsCount DESC
RETURN MentionedScreenName, MentionsCount
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the most frequently mentioned accounts by 'neo4j'.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
WITH mentioned.screen_name AS MentionedScreenName, COUNT(*) AS MentionsCount
ORDER BY MentionsCount DESC
RETURN MentionedScreenName, MentionsCount
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Find me tweets and sort them by the ratio or favourites on replies to replies, descending","MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WHERE r.favorites IS NOT NULL AND t.favorites IS NOT NULL
WITH t, COUNT(r) AS numReplies, t.favorites AS numFavorites
WHERE numReplies > 0 AND numFavorites > 0
RETURN t.id AS tweetID, numReplies, numFavorites, (toFloat(numFavorites) / numReplies) AS ratio
ORDER BY ratio DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me tweets ranked by their favorites-to-replies ratio.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WHERE r.favorites IS NOT NULL AND t.favorites IS NOT NULL
WITH t, COUNT(r) AS numReplies, t.favorites AS numFavorites
WHERE numReplies > 0 AND numFavorites > 0
RETURN t.id AS tweetID, numReplies, numFavorites, (toFloat(numFavorites) / numReplies) AS ratio
ORDER BY ratio DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List tweets with the highest ratio of favorites compared to replies.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WHERE r.favorites IS NOT NULL AND t.favorites IS NOT NULL
WITH t, COUNT(r) AS numReplies, t.favorites AS numFavorites
WHERE numReplies > 0 AND numFavorites > 0
RETURN t.id AS tweetID, numReplies, numFavorites, (toFloat(numFavorites) / numReplies) AS ratio
ORDER BY ratio DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which tweets have the best engagement, measured by favorites per reply?","MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WHERE r.favorites IS NOT NULL AND t.favorites IS NOT NULL
WITH t, COUNT(r) AS numReplies, t.favorites AS numFavorites
WHERE numReplies > 0 AND numFavorites > 0
RETURN t.id AS tweetID, numReplies, numFavorites, (toFloat(numFavorites) / numReplies) AS ratio
ORDER BY ratio DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find tweets that are most favored relative to the number of replies they receive.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WHERE r.favorites IS NOT NULL AND t.favorites IS NOT NULL
WITH t, COUNT(r) AS numReplies, t.favorites AS numFavorites
WHERE numReplies > 0 AND numFavorites > 0
RETURN t.id AS tweetID, numReplies, numFavorites, (toFloat(numFavorites) / numReplies) AS ratio
ORDER BY ratio DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display tweets sorted by the effectiveness of favorites in relation to replies.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WHERE r.favorites IS NOT NULL AND t.favorites IS NOT NULL
WITH t, COUNT(r) AS numReplies, t.favorites AS numFavorites
WHERE numReplies > 0 AND numFavorites > 0
RETURN t.id AS tweetID, numReplies, numFavorites, (toFloat(numFavorites) / numReplies) AS ratio
ORDER BY ratio DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify top tweets based on their favorites-to-replies ratio.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WHERE r.favorites IS NOT NULL AND t.favorites IS NOT NULL
WITH t, COUNT(r) AS numReplies, t.favorites AS numFavorites
WHERE numReplies > 0 AND numFavorites > 0
RETURN t.id AS tweetID, numReplies, numFavorites, (toFloat(numFavorites) / numReplies) AS ratio
ORDER BY ratio DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you sort tweets by how many favorites they get for each reply?,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WHERE r.favorites IS NOT NULL AND t.favorites IS NOT NULL
WITH t, COUNT(r) AS numReplies, t.favorites AS numFavorites
WHERE numReplies > 0 AND numFavorites > 0
RETURN t.id AS tweetID, numReplies, numFavorites, (toFloat(numFavorites) / numReplies) AS ratio
ORDER BY ratio DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Rank tweets by the proportion of favorites to the number of replies.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WHERE r.favorites IS NOT NULL AND t.favorites IS NOT NULL
WITH t, COUNT(r) AS numReplies, t.favorites AS numFavorites
WHERE numReplies > 0 AND numFavorites > 0
RETURN t.id AS tweetID, numReplies, numFavorites, (toFloat(numFavorites) / numReplies) AS ratio
ORDER BY ratio DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'm interested in seeing tweets with the highest favorites per reply rate.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WHERE r.favorites IS NOT NULL AND t.favorites IS NOT NULL
WITH t, COUNT(r) AS numReplies, t.favorites AS numFavorites
WHERE numReplies > 0 AND numFavorites > 0
RETURN t.id AS tweetID, numReplies, numFavorites, (toFloat(numFavorites) / numReplies) AS ratio
ORDER BY ratio DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How do tweets compare when looking at favorites versus replies?,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WHERE r.favorites IS NOT NULL AND t.favorites IS NOT NULL
WITH t, COUNT(r) AS numReplies, t.favorites AS numFavorites
WHERE numReplies > 0 AND numFavorites > 0
RETURN t.id AS tweetID, numReplies, numFavorites, (toFloat(numFavorites) / numReplies) AS ratio
ORDER BY ratio DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover tweets that excel in receiving favorites over replies.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WHERE r.favorites IS NOT NULL AND t.favorites IS NOT NULL
WITH t, COUNT(r) AS numReplies, t.favorites AS numFavorites
WHERE numReplies > 0 AND numFavorites > 0
RETURN t.id AS tweetID, numReplies, numFavorites, (toFloat(numFavorites) / numReplies) AS ratio
ORDER BY ratio DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the tweets that stand out for their number of favorites per reply.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WHERE r.favorites IS NOT NULL AND t.favorites IS NOT NULL
WITH t, COUNT(r) AS numReplies, t.favorites AS numFavorites
WHERE numReplies > 0 AND numFavorites > 0
RETURN t.id AS tweetID, numReplies, numFavorites, (toFloat(numFavorites) / numReplies) AS ratio
ORDER BY ratio DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show the efficiency of tweets in getting favorites for every reply they have.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WHERE r.favorites IS NOT NULL AND t.favorites IS NOT NULL
WITH t, COUNT(r) AS numReplies, t.favorites AS numFavorites
WHERE numReplies > 0 AND numFavorites > 0
RETURN t.id AS tweetID, numReplies, numFavorites, (toFloat(numFavorites) / numReplies) AS ratio
ORDER BY ratio DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Rank the engagement of tweets by the ratio of favorites they receive against replies.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WHERE r.favorites IS NOT NULL AND t.favorites IS NOT NULL
WITH t, COUNT(r) AS numReplies, t.favorites AS numFavorites
WHERE numReplies > 0 AND numFavorites > 0
RETURN t.id AS tweetID, numReplies, numFavorites, (toFloat(numFavorites) / numReplies) AS ratio
ORDER BY ratio DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine which tweets perform best in terms of favorites received for each reply.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WHERE r.favorites IS NOT NULL AND t.favorites IS NOT NULL
WITH t, COUNT(r) AS numReplies, t.favorites AS numFavorites
WHERE numReplies > 0 AND numFavorites > 0
RETURN t.id AS tweetID, numReplies, numFavorites, (toFloat(numFavorites) / numReplies) AS ratio
ORDER BY ratio DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find me tweets and sort them by the number of replies they have ,"MATCH (t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
WITH t, COUNT(reply) AS numReplies
RETURN t.id AS TweetID, t.text AS Text, numReplies
ORDER BY numReplies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show tweets ranked by how many replies they received.,"MATCH (t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
WITH t, COUNT(reply) AS numReplies
RETURN t.id AS TweetID, t.text AS Text, numReplies
ORDER BY numReplies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which tweets got the most replies? List them.,"MATCH (t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
WITH t, COUNT(reply) AS numReplies
RETURN t.id AS TweetID, t.text AS Text, numReplies
ORDER BY numReplies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you list tweets in descending order of their reply counts?,"MATCH (t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
WITH t, COUNT(reply) AS numReplies
RETURN t.id AS TweetID, t.text AS Text, numReplies
ORDER BY numReplies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like to see tweets with the highest number of replies at the top.,"MATCH (t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
WITH t, COUNT(reply) AS numReplies
RETURN t.id AS TweetID, t.text AS Text, numReplies
ORDER BY numReplies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display all tweets sorted from most to least replied to.,"MATCH (t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
WITH t, COUNT(reply) AS numReplies
RETURN t.id AS TweetID, t.text AS Text, numReplies
ORDER BY numReplies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Rank tweets based on the volume of replies they've attracted.,"MATCH (t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
WITH t, COUNT(reply) AS numReplies
RETURN t.id AS TweetID, t.text AS Text, numReplies
ORDER BY numReplies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How can I find out which tweets are the most replied to?,"MATCH (t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
WITH t, COUNT(reply) AS numReplies
RETURN t.id AS TweetID, t.text AS Text, numReplies
ORDER BY numReplies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify tweets that have garnered the most replies.,"MATCH (t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
WITH t, COUNT(reply) AS numReplies
RETURN t.id AS TweetID, t.text AS Text, numReplies
ORDER BY numReplies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Provide a list of tweets, sorted by reply count in descending order.","MATCH (t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
WITH t, COUNT(reply) AS numReplies
RETURN t.id AS TweetID, t.text AS Text, numReplies
ORDER BY numReplies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top tweets when sorted by number of replies?,"MATCH (t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
WITH t, COUNT(reply) AS numReplies
RETURN t.id AS TweetID, t.text AS Text, numReplies
ORDER BY numReplies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'm interested in seeing which tweets sparked the most conversations.,"MATCH (t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
WITH t, COUNT(reply) AS numReplies
RETURN t.id AS TweetID, t.text AS Text, numReplies
ORDER BY numReplies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Sort tweets by their popularity, measured in replies.","MATCH (t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
WITH t, COUNT(reply) AS numReplies
RETURN t.id AS TweetID, t.text AS Text, numReplies
ORDER BY numReplies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Show me the tweets that engaged the community the most, based on replies.","MATCH (t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
WITH t, COUNT(reply) AS numReplies
RETURN t.id AS TweetID, t.text AS Text, numReplies
ORDER BY numReplies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you rank tweets based on how many times they've been replied to?,"MATCH (t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
WITH t, COUNT(reply) AS numReplies
RETURN t.id AS TweetID, t.text AS Text, numReplies
ORDER BY numReplies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List tweets in order of descending reply count to see which are the most engaging.,"MATCH (t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
WITH t, COUNT(reply) AS numReplies
RETURN t.id AS TweetID, t.text AS Text, numReplies
ORDER BY numReplies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Find me tweets where the replies have hashtags, and list how often each hashtag is listed in descending.","MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS hashtag, COUNT(*) AS frequency
ORDER BY frequency DESC
RETURN hashtag, frequency
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show tweets replied with hashtags ranked by hashtag frequency.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS hashtag, COUNT(*) AS frequency
ORDER BY frequency DESC
RETURN hashtag, frequency
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most common hashtags in tweet replies?,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS hashtag, COUNT(*) AS frequency
ORDER BY frequency DESC
RETURN hashtag, frequency
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you list hashtags found in replies, ordered by their occurrence?","MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS hashtag, COUNT(*) AS frequency
ORDER BY frequency DESC
RETURN hashtag, frequency
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify hashtags in tweet replies and their frequencies.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS hashtag, COUNT(*) AS frequency
ORDER BY frequency DESC
RETURN hashtag, frequency
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Display hashtags used in replies, sorting them by popularity.","MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS hashtag, COUNT(*) AS frequency
ORDER BY frequency DESC
RETURN hashtag, frequency
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How often do hashtags appear in tweet replies? Rank them.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS hashtag, COUNT(*) AS frequency
ORDER BY frequency DESC
RETURN hashtag, frequency
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which hashtags are most frequently mentioned in tweet replies?,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS hashtag, COUNT(*) AS frequency
ORDER BY frequency DESC
RETURN hashtag, frequency
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find out the frequency of hashtags in replies and order them descending.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS hashtag, COUNT(*) AS frequency
ORDER BY frequency DESC
RETURN hashtag, frequency
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the top hashtags used in replies to tweets.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS hashtag, COUNT(*) AS frequency
ORDER BY frequency DESC
RETURN hashtag, frequency
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the prevailing hashtags in tweet replies, by count?","MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS hashtag, COUNT(*) AS frequency
ORDER BY frequency DESC
RETURN hashtag, frequency
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show the ranking of hashtags based on their presence in tweet replies.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS hashtag, COUNT(*) AS frequency
ORDER BY frequency DESC
RETURN hashtag, frequency
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you determine the most used hashtags in replies and list them?,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS hashtag, COUNT(*) AS frequency
ORDER BY frequency DESC
RETURN hashtag, frequency
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I need a breakdown of hashtag usage in replies, focusing on the most common.","MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS hashtag, COUNT(*) AS frequency
ORDER BY frequency DESC
RETURN hashtag, frequency
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find me tweets where the replies have hashtags,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WHERE EXISTS((r)-[:TAGS]->(:Hashtag))
RETURN t, r, h
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me tweets that have replies containing hashtags.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WHERE EXISTS((r)-[:TAGS]->(:Hashtag))
RETURN t, r, h
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you list tweets and their replies that include hashtags?,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WHERE EXISTS((r)-[:TAGS]->(:Hashtag))
RETURN t, r, h
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which tweets have been replied to with messages that contain hashtags?,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WHERE EXISTS((r)-[:TAGS]->(:Hashtag))
RETURN t, r, h
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify tweets that received replies with hashtags.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WHERE EXISTS((r)-[:TAGS]->(:Hashtag))
RETURN t, r, h
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display all tweets for which there are hashtag-inclusive replies.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WHERE EXISTS((r)-[:TAGS]->(:Hashtag))
RETURN t, r, h
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How can I find tweets that are replied to with hashtags included?,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WHERE EXISTS((r)-[:TAGS]->(:Hashtag))
RETURN t, r, h
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List tweets and the replies that use hashtags.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WHERE EXISTS((r)-[:TAGS]->(:Hashtag))
RETURN t, r, h
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What tweets have replies with hashtags, and what are those hashtags?","MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WHERE EXISTS((r)-[:TAGS]->(:Hashtag))
RETURN t, r, h
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover tweets that are responded to with hashtag-bearing replies.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WHERE EXISTS((r)-[:TAGS]->(:Hashtag))
RETURN t, r, h
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find tweets that have received replies mentioning hashtags.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)-[:TAGS]->(h:Hashtag)
WHERE EXISTS((r)-[:TAGS]->(:Hashtag))
RETURN t, r, h
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find me tweets that have more than 4 replies and more than 4 favorites,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WITH t, COUNT(r) AS replyCount
WHERE replyCount > 4 AND t.favorites > 4
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show tweets with over 4 replies and more than 4 favorites.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WITH t, COUNT(r) AS replyCount
WHERE replyCount > 4 AND t.favorites > 4
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List all tweets that have received at least 5 replies and 5 favorites.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WITH t, COUNT(r) AS replyCount
WHERE replyCount > 4 AND t.favorites > 4
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you find tweets that are both highly replied to and favorited?,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WITH t, COUNT(r) AS replyCount
WHERE replyCount > 4 AND t.favorites > 4
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify tweets with more than four replies and favorites.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WITH t, COUNT(r) AS replyCount
WHERE replyCount > 4 AND t.favorites > 4
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display tweets that have achieved more than 4 replies and favorites each.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WITH t, COUNT(r) AS replyCount
WHERE replyCount > 4 AND t.favorites > 4
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the tweets that have gathered more than 4 replies and favorites?,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WITH t, COUNT(r) AS replyCount
WHERE replyCount > 4 AND t.favorites > 4
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Retrieve tweets that are popular in terms of both replies and favorites.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WITH t, COUNT(r) AS replyCount
WHERE replyCount > 4 AND t.favorites > 4
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'm looking for tweets that exceeded 4 in both replies and favorites count.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WITH t, COUNT(r) AS replyCount
WHERE replyCount > 4 AND t.favorites > 4
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which tweets have both a high number of replies and favorites?,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WITH t, COUNT(r) AS replyCount
WHERE replyCount > 4 AND t.favorites > 4
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find tweets that stand out by having over 4 replies and favorites.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WITH t, COUNT(r) AS replyCount
WHERE replyCount > 4 AND t.favorites > 4
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover tweets that have crossed the threshold of 4 replies and favorites.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WITH t, COUNT(r) AS replyCount
WHERE replyCount > 4 AND t.favorites > 4
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me tweets that are engaging with over 4 replies and also loved with over 4 favorites.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WITH t, COUNT(r) AS replyCount
WHERE replyCount > 4 AND t.favorites > 4
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List tweets that have sparked conversation and affection with over 4 replies and favorites.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WITH t, COUNT(r) AS replyCount
WHERE replyCount > 4 AND t.favorites > 4
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine which tweets have been both actively discussed and liked more than 4 times.,"MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WITH t, COUNT(r) AS replyCount
WHERE replyCount > 4 AND t.favorites > 4
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you list the tweets that hit the mark of 4+ replies and favorites, indicating high engagement?","MATCH (t:Tweet)-[:REPLY_TO]->(r:Tweet)
WITH t, COUNT(r) AS replyCount
WHERE replyCount > 4 AND t.favorites > 4
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find all tweets that have a reply and at least one favourite ,"MATCH (t:Tweet)-[:REPLY_TO]->()
WHERE t.favorites > 0
RETURN t
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show tweets that have been replied to and favorited at least once.,"MATCH (t:Tweet)-[:REPLY_TO]->()
WHERE t.favorites > 0
RETURN t
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List all tweets with at least one reply and one favorite.,"MATCH (t:Tweet)-[:REPLY_TO]->()
WHERE t.favorites > 0
RETURN t
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you find tweets that both have replies and a minimum of one favorite?,"MATCH (t:Tweet)-[:REPLY_TO]->()
WHERE t.favorites > 0
RETURN t
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify tweets that are replied to and also have favorites.,"MATCH (t:Tweet)-[:REPLY_TO]->()
WHERE t.favorites > 0
RETURN t
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display tweets that have received replies and at least one favorite.,"MATCH (t:Tweet)-[:REPLY_TO]->()
WHERE t.favorites > 0
RETURN t
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the tweets that have been engaged with through replies and favorites?,"MATCH (t:Tweet)-[:REPLY_TO]->()
WHERE t.favorites > 0
RETURN t
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Find tweets with engagement, indicated by replies and favorites.","MATCH (t:Tweet)-[:REPLY_TO]->()
WHERE t.favorites > 0
RETURN t
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Retrieve tweets that have been interacted with, having at least one reply and favorite.","MATCH (t:Tweet)-[:REPLY_TO]->()
WHERE t.favorites > 0
RETURN t
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me tweets that have not only been replied to but also favorited.,"MATCH (t:Tweet)-[:REPLY_TO]->()
WHERE t.favorites > 0
RETURN t
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I need to see tweets that have attracted both replies and favorites.,"MATCH (t:Tweet)-[:REPLY_TO]->()
WHERE t.favorites > 0
RETURN t
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you list the tweets that have managed to get both replies and at least one favorite?,"MATCH (t:Tweet)-[:REPLY_TO]->()
WHERE t.favorites > 0
RETURN t
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide a list of tweets that have been acknowledged with replies and favoriting.,"MATCH (t:Tweet)-[:REPLY_TO]->()
WHERE t.favorites > 0
RETURN t
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover tweets that have garnered attention through replies and favorites.,"MATCH (t:Tweet)-[:REPLY_TO]->()
WHERE t.favorites > 0
RETURN t
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Extract tweets that have been both responded to and liked.,"MATCH (t:Tweet)-[:REPLY_TO]->()
WHERE t.favorites > 0
RETURN t
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Find tweets with interaction, having replies and at least one favorite, ordered by favorites.","MATCH (t:Tweet)-[:REPLY_TO]->()
WHERE t.favorites > 0
RETURN t
ORDER BY t.favorites DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find all tweets that have replies,"MATCH (t:Tweet)-[:REPLY_TO]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me tweets that received replies.,"MATCH (t:Tweet)-[:REPLY_TO]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List tweets that have been responded to.,"MATCH (t:Tweet)-[:REPLY_TO]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you find tweets that people replied to?,"MATCH (t:Tweet)-[:REPLY_TO]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify tweets that garnered replies.,"MATCH (t:Tweet)-[:REPLY_TO]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display all tweets with at least one reply.,"MATCH (t:Tweet)-[:REPLY_TO]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the tweets that have interactions in the form of replies?,"MATCH (t:Tweet)-[:REPLY_TO]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Retrieve tweets that others have replied to.,"MATCH (t:Tweet)-[:REPLY_TO]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'm interested in seeing tweets that prompted replies.,"MATCH (t:Tweet)-[:REPLY_TO]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show tweets that have sparked conversations through replies.,"MATCH (t:Tweet)-[:REPLY_TO]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide a list of tweets that have been acknowledged by replies.,"MATCH (t:Tweet)-[:REPLY_TO]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover tweets that led to responses from others.,"MATCH (t:Tweet)-[:REPLY_TO]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Extract tweets that have received feedback in the form of replies.,"MATCH (t:Tweet)-[:REPLY_TO]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find tweets that have been actively engaged with replies.,"MATCH (t:Tweet)-[:REPLY_TO]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight tweets that were compelling enough to receive replies.,"MATCH (t:Tweet)-[:REPLY_TO]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Gather all tweets that have not gone unnoticed and have replies.,"MATCH (t:Tweet)-[:REPLY_TO]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find all posts mentioning jimwebber.,"MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'jimwebber'})
RETURN t.id"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me tweets that mention jimwebber.,"MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'jimwebber'})
RETURN t.id"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List all tweets where jimwebber is mentioned.,"MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'jimwebber'})
RETURN t.id"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you find posts tagging jimwebber?,"MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'jimwebber'})
RETURN t.id"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify tweets mentioning the user jimwebber.,"MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'jimwebber'})
RETURN t.id"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display tweets that have mentioned jimwebber.,"MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'jimwebber'})
RETURN t.id"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the tweets mentioning jimwebber?,"MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'jimwebber'})
RETURN t.id"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Retrieve all tweets where jimwebber is mentioned.,"MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'jimwebber'})
RETURN t.id"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'm looking for tweets that include mentions of jimwebber.,"MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'jimwebber'})
RETURN t.id"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show tweets that tag the user jimwebber.,"MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'jimwebber'})
RETURN t.id"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide a list of tweets mentioning jimwebber by ID.,"MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'jimwebber'})
RETURN t.id"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover all tweets with mentions of jimwebber.,"MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'jimwebber'})
RETURN t.id"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Extract tweets that have tagged jimwebber.,"MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'jimwebber'})
RETURN t.id"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find tweets where jimwebber is a mentioned user.,"MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'jimwebber'})
RETURN t.id"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight all posts that mention jimwebber.,"MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'jimwebber'})
RETURN t.id"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Gather tweets mentioning jimwebber and return their IDs.,"MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'jimwebber'})
RETURN t.id"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I am neo4j. Which tweets did nsmith_piano reply to? ,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I am neo4j. How many of my tweets did 'nsmith_piano' reply to?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the list of my tweets that 'nsmith_piano' has replied to.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify which of my posts 'nsmith_piano' responded to?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the tweets I made that received replies from 'nsmith_piano'?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How often has 'nsmith_piano' replied to my tweets?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which of my tweets have been replied to by 'nsmith_piano'?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like to see the tweets of mine that 'nsmith_piano' commented on.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you find the instances where 'nsmith_piano' replied to my posts?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How many replies from 'nsmith_piano' have my tweets gotten?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show the interactions between my tweets and 'nsmith_piano' through replies.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the tweets of mine to which 'nsmith_piano' has made replies.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display all my tweets that 'nsmith_piano' has engaged with.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Track the replies I've received from 'nsmith_piano' on my tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the specific tweets of mine that 'nsmith_piano' replied to?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the conversations initiated by 'nsmith_piano' on my tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User {screen_name: 'nsmith_piano'})
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","As neo4j, who replied to my tweets?","MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User)
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the users who have replied to my tweets as 'neo4j'.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User)
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you list the screen names of people replying to 'neo4j's tweets?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User)
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify who has responded to tweets posted by 'neo4j'.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User)
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like to see the repliers to my 'neo4j' tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User)
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display the users who have replied to tweets from 'neo4j'.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User)
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the names of users replying to 'neo4j's tweets?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User)
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find out who interacted with 'neo4j' by replying to their tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User)
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Retrieve a list of users who replied to 'neo4j's tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User)
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who has engaged with 'neo4j' by replying to their tweets?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User)
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the repliers to 'neo4j's tweets and their replies.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User)
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide details of users replying to tweets by 'neo4j'.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User)
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List everyone who replied to tweets from the 'neo4j' account.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User)
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show all repliers to 'neo4j's tweets along with the tweet texts.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User)
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine who has taken the time to reply to 'neo4j's tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User)
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the users replying to tweets posted by the 'neo4j' account?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(myTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)<-[:POSTS]-(replier:User)
RETURN myTweet.id AS MyTweetID, myTweet.text AS MyTweetText, replier.screen_name AS ReplierScreenName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which tweets have the hashtag 'graphcast'?

","MATCH (h:Hashtag {name: 'graphcast'})-[:TAGS]->(t:Tweet) RETURN t.id AS TweetID, t.text AS TweetText"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you list all tweets that use the hashtag 'graphcast'?,"MATCH (h:Hashtag {name: 'graphcast'})-[:TAGS]->(t:Tweet) RETURN t.id AS TweetID, t.text AS TweetText"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find tweets containing the 'graphcast' hashtag.,"MATCH (h:Hashtag {name: 'graphcast'})-[:TAGS]->(t:Tweet) RETURN t.id AS TweetID, t.text AS TweetText"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display all tweets associated with the hashtag 'graphcast'.,"MATCH (h:Hashtag {name: 'graphcast'})-[:TAGS]->(t:Tweet) RETURN t.id AS TweetID, t.text AS TweetText"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How can I see tweets tagged with 'graphcast'?,"MATCH (h:Hashtag {name: 'graphcast'})-[:TAGS]->(t:Tweet) RETURN t.id AS TweetID, t.text AS TweetText"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Retrieve tweets using the hashtag 'graphcast'.,"MATCH (h:Hashtag {name: 'graphcast'})-[:TAGS]->(t:Tweet) RETURN t.id AS TweetID, t.text AS TweetText"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which posts include the hashtag 'graphcast'?,"MATCH (h:Hashtag {name: 'graphcast'})-[:TAGS]->(t:Tweet) RETURN t.id AS TweetID, t.text AS TweetText"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify all tweets that mention #graphcast.,"MATCH (h:Hashtag {name: 'graphcast'})-[:TAGS]->(t:Tweet) RETURN t.id AS TweetID, t.text AS TweetText"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I’d like to view tweets with the 'graphcast' tag.,"MATCH (h:Hashtag {name: 'graphcast'})-[:TAGS]->(t:Tweet) RETURN t.id AS TweetID, t.text AS TweetText"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show tweets where 'graphcast' is a hashtag.,"MATCH (h:Hashtag {name: 'graphcast'})-[:TAGS]->(t:Tweet) RETURN t.id AS TweetID, t.text AS TweetText"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the content of tweets that have the 'graphcast' hashtag.,"MATCH (h:Hashtag {name: 'graphcast'})-[:TAGS]->(t:Tweet) RETURN t.id AS TweetID, t.text AS TweetText"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the tweets that feature the hashtag 'graphcast'?,"MATCH (h:Hashtag {name: 'graphcast'})-[:TAGS]->(t:Tweet) RETURN t.id AS TweetID, t.text AS TweetText"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Gather all tweets that are marked with the hashtag 'graphcast'.,"MATCH (h:Hashtag {name: 'graphcast'})-[:TAGS]->(t:Tweet) RETURN t.id AS TweetID, t.text AS TweetText"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who do I, as 'neo4j', follow on Twitter?","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User) RETURN u.screen_name AS ScreenName, u.name AS Name"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the list of users followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User) RETURN u.screen_name AS ScreenName, u.name AS Name"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you list all the Twitter accounts that 'neo4j' follows?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User) RETURN u.screen_name AS ScreenName, u.name AS Name"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find out who is being followed by the 'neo4j' account.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User) RETURN u.screen_name AS ScreenName, u.name AS Name"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify all the users followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User) RETURN u.screen_name AS ScreenName, u.name AS Name"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I’d like to view who 'neo4j' has chosen to follow on Twitter.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User) RETURN u.screen_name AS ScreenName, u.name AS Name"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the accounts that fall under 'neo4j's following.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User) RETURN u.screen_name AS ScreenName, u.name AS Name"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide a comprehensive list of 'neo4j's followed users.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User) RETURN u.screen_name AS ScreenName, u.name AS Name"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the Twitter handles followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User) RETURN u.screen_name AS ScreenName, u.name AS Name"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How many followers in total do I, as  'neo4j', have?","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)
RETURN sum(u.followers) AS TotalFollowers
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How many followers in total do I have on my 'neo4j' account?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)
RETURN sum(u.followers) AS TotalFollowers
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you calculate the total number of followers for 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)
RETURN sum(u.followers) AS TotalFollowers
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What is the aggregate follower count for the 'neo4j' account?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)
RETURN sum(u.followers) AS TotalFollowers
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the sum of followers from all users 'neo4j' follows.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)
RETURN sum(u.followers) AS TotalFollowers
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the total follower base of 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)
RETURN sum(u.followers) AS TotalFollowers
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What's the combined follower count for accounts followed by 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)
RETURN sum(u.followers) AS TotalFollowers
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Total up the followers for the 'neo4j' Twitter account.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)
RETURN sum(u.followers) AS TotalFollowers
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How large is 'neo4j's follower network?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)
RETURN sum(u.followers) AS TotalFollowers
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Calculate the overall number of followers for 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)
RETURN sum(u.followers) AS TotalFollowers
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List all tweets and their corresponding replies.,"MATCH (t:Tweet)-[:REPLY_TO]->(original:Tweet)
RETURN original.id AS OriginalTweetID, original.text AS OriginalText, t.id AS ReplyTweetID, t.text AS ReplyText
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show me every tweet alongside the replies it received?,"MATCH (t:Tweet)-[:REPLY_TO]->(original:Tweet)
RETURN original.id AS OriginalTweetID, original.text AS OriginalText, t.id AS ReplyTweetID, t.text AS ReplyText
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like to see a list of original tweets with their direct replies.,"MATCH (t:Tweet)-[:REPLY_TO]->(original:Tweet)
RETURN original.id AS OriginalTweetID, original.text AS OriginalText, t.id AS ReplyTweetID, t.text AS ReplyText
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How can I view all tweets and the replies they've gotten?,"MATCH (t:Tweet)-[:REPLY_TO]->(original:Tweet)
RETURN original.id AS OriginalTweetID, original.text AS OriginalText, t.id AS ReplyTweetID, t.text AS ReplyText
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display the tweets and the corresponding responses to them.,"MATCH (t:Tweet)-[:REPLY_TO]->(original:Tweet)
RETURN original.id AS OriginalTweetID, original.text AS OriginalText, t.id AS ReplyTweetID, t.text AS ReplyText
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the original tweets and the replies each one has.,"MATCH (t:Tweet)-[:REPLY_TO]->(original:Tweet)
RETURN original.id AS OriginalTweetID, original.text AS OriginalText, t.id AS ReplyTweetID, t.text AS ReplyText
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide a catalog of tweets paired with their replies.,"MATCH (t:Tweet)-[:REPLY_TO]->(original:Tweet)
RETURN original.id AS OriginalTweetID, original.text AS OriginalText, t.id AS ReplyTweetID, t.text AS ReplyText
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'm interested in seeing all tweets and their subsequent replies.,"MATCH (t:Tweet)-[:REPLY_TO]->(original:Tweet)
RETURN original.id AS OriginalTweetID, original.text AS OriginalText, t.id AS ReplyTweetID, t.text AS ReplyText
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Could you list out tweets and match them with their replies?,"MATCH (t:Tweet)-[:REPLY_TO]->(original:Tweet)
RETURN original.id AS OriginalTweetID, original.text AS OriginalText, t.id AS ReplyTweetID, t.text AS ReplyText
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Retrieve all original tweets and the replies made to them.,"MATCH (t:Tweet)-[:REPLY_TO]->(original:Tweet)
RETURN original.id AS OriginalTweetID, original.text AS OriginalText, t.id AS ReplyTweetID, t.text AS ReplyText
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Present a breakdown of tweets and their respective replies.,"MATCH (t:Tweet)-[:REPLY_TO]->(original:Tweet)
RETURN original.id AS OriginalTweetID, original.text AS OriginalText, t.id AS ReplyTweetID, t.text AS ReplyText
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which tweets were posted using 'Twitter for Mac'?,"MATCH (s:Source {name: ""Twitter for Mac""})-[:USING]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me tweets made with the 'Twitter for Mac' app.,"MATCH (s:Source {name: ""Twitter for Mac""})-[:USING]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you find tweets posted from 'Twitter for Mac'?,"MATCH (s:Source {name: ""Twitter for Mac""})-[:USING]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List tweets that originated from 'Twitter for Mac'.,"MATCH (s:Source {name: ""Twitter for Mac""})-[:USING]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify tweets published using 'Twitter for Mac'.,"MATCH (s:Source {name: ""Twitter for Mac""})-[:USING]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display all tweets sent out via 'Twitter for Mac'.,"MATCH (s:Source {name: ""Twitter for Mac""})-[:USING]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the tweets posted through 'Twitter for Mac'?,"MATCH (s:Source {name: ""Twitter for Mac""})-[:USING]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Retrieve the content of tweets from 'Twitter for Mac'.,"MATCH (s:Source {name: ""Twitter for Mac""})-[:USING]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like to see tweets that were shared using 'Twitter for Mac'.,"MATCH (s:Source {name: ""Twitter for Mac""})-[:USING]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find all tweets composed with 'Twitter for Mac'.,"MATCH (s:Source {name: ""Twitter for Mac""})-[:USING]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Gather tweets that were posted using 'Twitter for Mac'.,"MATCH (s:Source {name: ""Twitter for Mac""})-[:USING]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the replies to tweet with ID '12345'?,"MATCH (t:Tweet {id: '12345'})<-[:REPLY_TO]-(r:Tweet)
RETURN r.id AS 'ReplyTweetID', r.text AS 'ReplyText'
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the replies for the tweet with ID '12345'.,"MATCH (t:Tweet {id: '12345'})<-[:REPLY_TO]-(r:Tweet)
RETURN r.id AS 'ReplyTweetID', r.text AS 'ReplyText'
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you find all responses to the tweet identified by ID '12345'?,"MATCH (t:Tweet {id: '12345'})<-[:REPLY_TO]-(r:Tweet)
RETURN r.id AS 'ReplyTweetID', r.text AS 'ReplyText'
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List every reply made to the tweet with the ID '12345'.,"MATCH (t:Tweet {id: '12345'})<-[:REPLY_TO]-(r:Tweet)
RETURN r.id AS 'ReplyTweetID', r.text AS 'ReplyText'
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Retrieve the text of all replies to tweet ID '12345'.,"MATCH (t:Tweet {id: '12345'})<-[:REPLY_TO]-(r:Tweet)
RETURN r.id AS 'ReplyTweetID', r.text AS 'ReplyText'
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display replies associated with the original tweet ID '12345'.,"MATCH (t:Tweet {id: '12345'})<-[:REPLY_TO]-(r:Tweet)
RETURN r.id AS 'ReplyTweetID', r.text AS 'ReplyText'
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What tweets have replied directly to tweet ID '12345'?,"MATCH (t:Tweet {id: '12345'})<-[:REPLY_TO]-(r:Tweet)
RETURN r.id AS 'ReplyTweetID', r.text AS 'ReplyText'
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify all tweets that are responses to the tweet with ID '12345'.,"MATCH (t:Tweet {id: '12345'})<-[:REPLY_TO]-(r:Tweet)
RETURN r.id AS 'ReplyTweetID', r.text AS 'ReplyText'
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like to see all the reply tweets for the tweet ID '12345'.,"MATCH (t:Tweet {id: '12345'})<-[:REPLY_TO]-(r:Tweet)
RETURN r.id AS 'ReplyTweetID', r.text AS 'ReplyText'
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide details of tweets that replied to the one with ID '12345'.,"MATCH (t:Tweet {id: '12345'})<-[:REPLY_TO]-(r:Tweet)
RETURN r.id AS 'ReplyTweetID', r.text AS 'ReplyText'
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How many and which replies does the tweet with ID '12345' have?,"MATCH (t:Tweet {id: '12345'})<-[:REPLY_TO]-(r:Tweet)
RETURN r.id AS 'ReplyTweetID', r.text AS 'ReplyText'
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which tweets were posted using 'Buffer'?,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Buffer'})
RETURN t.id AS TweetID, t.text AS Text"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me tweets that were published through Buffer.,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Buffer'})
RETURN t.id AS TweetID, t.text AS Text"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you list all tweets sent out using Buffer?,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Buffer'})
RETURN t.id AS TweetID, t.text AS Text"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find and display tweets posted via the Buffer platform.,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Buffer'})
RETURN t.id AS TweetID, t.text AS Text"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify tweets that have been shared using Buffer.,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Buffer'})
RETURN t.id AS TweetID, t.text AS Text"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Retrieve all tweets made using Buffer and their content.,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Buffer'})
RETURN t.id AS TweetID, t.text AS Text"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most popular hashtags?,"MATCH (h:Hashtag)<-[:TAGS]-(t:Tweet)
RETURN h.name AS HASHTAG, COUNT(t) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show the hashtags used most frequently in tweets?,"MATCH (h:Hashtag)<-[:TAGS]-(t:Tweet)
RETURN h.name AS HASHTAG, COUNT(t) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the top hashtags based on their appearance in tweets.,"MATCH (h:Hashtag)<-[:TAGS]-(t:Tweet)
RETURN h.name AS HASHTAG, COUNT(t) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which hashtags are the most used across all tweets?,"MATCH (h:Hashtag)<-[:TAGS]-(t:Tweet)
RETURN h.name AS HASHTAG, COUNT(t) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most commonly tagged hashtags in tweet posts.,"MATCH (h:Hashtag)<-[:TAGS]-(t:Tweet)
RETURN h.name AS HASHTAG, COUNT(t) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display the ranking of hashtags by their usage frequency in tweets.,"MATCH (h:Hashtag)<-[:TAGS]-(t:Tweet)
RETURN h.name AS HASHTAG, COUNT(t) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the trending hashtags based on tweet counts?,"MATCH (h:Hashtag)<-[:TAGS]-(t:Tweet)
RETURN h.name AS HASHTAG, COUNT(t) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the most popular hashtags according to tweet tagging.,"MATCH (h:Hashtag)<-[:TAGS]-(t:Tweet)
RETURN h.name AS HASHTAG, COUNT(t) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the leading hashtags in popularity based on tweet mentions.,"MATCH (h:Hashtag)<-[:TAGS]-(t:Tweet)
RETURN h.name AS HASHTAG, COUNT(t) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who have I, 'neo4j', mentioned in tweets?","MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(u:User)
RETURN t.id AS Tweet, u.screen_name AS MentionedScreenName, u.name AS MentionedName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the users mentioned by 'neo4j' in tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(u:User)
RETURN t.id AS Tweet, u.screen_name AS MentionedScreenName, u.name AS MentionedName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the mentions 'neo4j' has made in their tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(u:User)
RETURN t.id AS Tweet, u.screen_name AS MentionedScreenName, u.name AS MentionedName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which users has 'neo4j' mentioned in their tweets?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(u:User)
RETURN t.id AS Tweet, u.screen_name AS MentionedScreenName, u.name AS MentionedName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you find the people 'neo4j' tagged in tweets?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(u:User)
RETURN t.id AS Tweet, u.screen_name AS MentionedScreenName, u.name AS MentionedName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify all users 'neo4j' has mentioned in tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(u:User)
RETURN t.id AS Tweet, u.screen_name AS MentionedScreenName, u.name AS MentionedName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display the screen names and names of users mentioned by 'neo4j' in tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(u:User)
RETURN t.id AS Tweet, u.screen_name AS MentionedScreenName, u.name AS MentionedName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How can I see who 'neo4j' mentioned in their tweets?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(u:User)
RETURN t.id AS Tweet, u.screen_name AS MentionedScreenName, u.name AS MentionedName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Search for users that have been mentioned by 'neo4j' in tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(u:User)
RETURN t.id AS Tweet, u.screen_name AS MentionedScreenName, u.name AS MentionedName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'm looking for the mentions made by 'neo4j' in tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(u:User)
RETURN t.id AS Tweet, u.screen_name AS MentionedScreenName, u.name AS MentionedName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Extract mentions by 'neo4j' in tweets and list the mentioned users.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(u:User)
RETURN t.id AS Tweet, u.screen_name AS MentionedScreenName, u.name AS MentionedName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find me the users that 'neo4j' has mentioned across their tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(u:User)
RETURN t.id AS Tweet, u.screen_name AS MentionedScreenName, u.name AS MentionedName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Locate all mentions made by 'neo4j' in their tweet posts.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(u:User)
RETURN t.id AS Tweet, u.screen_name AS MentionedScreenName, u.name AS MentionedName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Retrieve the list of users mentioned in 'neo4j's tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(u:User)
RETURN t.id AS Tweet, u.screen_name AS MentionedScreenName, u.name AS MentionedName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the mentions 'neo4j' has made in tweets, and who are they?","MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(u:User)
RETURN t.id AS Tweet, u.screen_name AS MentionedScreenName, u.name AS MentionedName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the users that have been mentioned by 'neo4j' in their tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(u:User)
RETURN t.id AS Tweet, u.screen_name AS MentionedScreenName, u.name AS MentionedName
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which tweets contain links? ,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List all tweets that include a link and their corresponding URLs.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me tweets with embedded links and the links themselves.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which tweets contain links, and what are those links?","MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you find tweets that have links and display the URLs?,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify tweets with links and return their URLs.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display the tweet IDs and the URLs of links they contain.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How can I see tweets that include links along with the link URLs?,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Search for tweets that embed links, and list the URLs.","MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'm looking for tweets that contain links. Show me the tweet IDs and URLs.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Extract all tweets that have links and show me the links.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find me the tweets that include links and their URLs.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Locate tweets with embedded URLs and list the tweet IDs and URLs.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Retrieve the IDs of tweets that contain links and the links' URLs.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the tweet IDs that have embedded links, and what are those links?","MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover tweets that feature links and provide the tweet IDs and URLs.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who does 'plotmath' follow?,"MATCH (u:User {screen_name: 'plotmath'})-[:FOLLOWS]->(fu:User)
RETURN fu.screen_name AS ScreenName, fu.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the users followed by 'plotmath'.,"MATCH (u:User {screen_name: 'plotmath'})-[:FOLLOWS]->(fu:User)
RETURN fu.screen_name AS ScreenName, fu.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you list the people 'plotmath' is following?,"MATCH (u:User {screen_name: 'plotmath'})-[:FOLLOWS]->(fu:User)
RETURN fu.screen_name AS ScreenName, fu.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the users in 'plotmath's following list?,"MATCH (u:User {screen_name: 'plotmath'})-[:FOLLOWS]->(fu:User)
RETURN fu.screen_name AS ScreenName, fu.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find out who 'plotmath' follows on the platform.,"MATCH (u:User {screen_name: 'plotmath'})-[:FOLLOWS]->(fu:User)
RETURN fu.screen_name AS ScreenName, fu.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'm interested in seeing who 'plotmath' follows.,"MATCH (u:User {screen_name: 'plotmath'})-[:FOLLOWS]->(fu:User)
RETURN fu.screen_name AS ScreenName, fu.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify all users followed by 'plotmath'.,"MATCH (u:User {screen_name: 'plotmath'})-[:FOLLOWS]->(fu:User)
RETURN fu.screen_name AS ScreenName, fu.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display the list of users that 'plotmath' follows.,"MATCH (u:User {screen_name: 'plotmath'})-[:FOLLOWS]->(fu:User)
RETURN fu.screen_name AS ScreenName, fu.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How can I find the users that 'plotmath' is following?,"MATCH (u:User {screen_name: 'plotmath'})-[:FOLLOWS]->(fu:User)
RETURN fu.screen_name AS ScreenName, fu.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Retrieve the following list of 'plotmath'.,"MATCH (u:User {screen_name: 'plotmath'})-[:FOLLOWS]->(fu:User)
RETURN fu.screen_name AS ScreenName, fu.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who has been followed by 'plotmath'?,"MATCH (u:User {screen_name: 'plotmath'})-[:FOLLOWS]->(fu:User)
RETURN fu.screen_name AS ScreenName, fu.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List everyone 'plotmath' is keeping an eye on.,"MATCH (u:User {screen_name: 'plotmath'})-[:FOLLOWS]->(fu:User)
RETURN fu.screen_name AS ScreenName, fu.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which users are on 'plotmath's follow list?,"MATCH (u:User {screen_name: 'plotmath'})-[:FOLLOWS]->(fu:User)
RETURN fu.screen_name AS ScreenName, fu.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover who 'plotmath' follows.,"MATCH (u:User {screen_name: 'plotmath'})-[:FOLLOWS]->(fu:User)
RETURN fu.screen_name AS ScreenName, fu.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show the following network of 'plotmath'.,"MATCH (u:User {screen_name: 'plotmath'})-[:FOLLOWS]->(fu:User)
RETURN fu.screen_name AS ScreenName, fu.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who makes up the network 'plotmath' follows?,"MATCH (u:User {screen_name: 'plotmath'})-[:FOLLOWS]->(fu:User)
RETURN fu.screen_name AS ScreenName, fu.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which tweets have I, as 'neo4j', retweeted?","MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the list of tweets retweeted by the 'neo4j' account.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the tweets that 'neo4j' has retweeted?,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you find the tweets I've retweeted from my 'neo4j' profile?,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the tweets 'neo4j' has shared through retweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify all tweets that the 'neo4j' user retweeted.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display tweets that were retweeted by the 'neo4j' screen name.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How can I see the tweets 'neo4j' retweeted?,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Search for tweets that 'neo4j' has passed on through retweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'm looking for the tweets 'neo4j' decided to retweet.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Extract all tweets retweeted by the user 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find me the tweets that 'neo4j' has amplified by retweeting.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Locate all the tweets that have been retweeted by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Retrieve the list of tweets 'neo4j' found worth retweeting.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What tweets have made it into 'neo4j's retweet list?,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover tweets that got a retweet from the 'neo4j' account.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find tweets that mention 'graph database',"MATCH (t:Tweet)
WHERE t.text CONTAINS 'graph database'
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List all tweets that talk about 'graph database'.,"MATCH (t:Tweet)
WHERE t.text CONTAINS 'graph database'
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me tweets mentioning 'graph database'.,"MATCH (t:Tweet)
WHERE t.text CONTAINS 'graph database'
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which tweets include the phrase 'graph database'?,"MATCH (t:Tweet)
WHERE t.text CONTAINS 'graph database'
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you find tweets with references to 'graph database'?,"MATCH (t:Tweet)
WHERE t.text CONTAINS 'graph database'
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify tweets that contain 'graph database' in their text.,"MATCH (t:Tweet)
WHERE t.text CONTAINS 'graph database'
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display tweets that discuss 'graph database'.,"MATCH (t:Tweet)
WHERE t.text CONTAINS 'graph database'
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How can I see tweets that mention a 'graph database'?,"MATCH (t:Tweet)
WHERE t.text CONTAINS 'graph database'
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Search for tweets that have 'graph database' mentioned.,"MATCH (t:Tweet)
WHERE t.text CONTAINS 'graph database'
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'm looking for tweets that specifically mention 'graph database'.,"MATCH (t:Tweet)
WHERE t.text CONTAINS 'graph database'
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Extract all tweets where 'graph database' is mentioned.,"MATCH (t:Tweet)
WHERE t.text CONTAINS 'graph database'
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find me the tweets that talk about 'graph database'.,"MATCH (t:Tweet)
WHERE t.text CONTAINS 'graph database'
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Locate tweets mentioning 'graph database'.,"MATCH (t:Tweet)
WHERE t.text CONTAINS 'graph database'
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Retrieve tweets that include the term 'graph database'.,"MATCH (t:Tweet)
WHERE t.text CONTAINS 'graph database'
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What tweets have 'graph database' in their content?,"MATCH (t:Tweet)
WHERE t.text CONTAINS 'graph database'
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover all tweets that specifically talk about 'graph database'.,"MATCH (t:Tweet)
WHERE t.text CONTAINS 'graph database'
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which tweets contain links and who posted them?,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, t.text AS Text, u.screen_name AS ScreenName, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me tweets with URLs and the users who shared them.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, t.text AS Text, u.screen_name AS ScreenName, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you find tweets that include hyperlinks and identify the posters?,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, t.text AS Text, u.screen_name AS ScreenName, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List all tweets that have embedded links along with the authors.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, t.text AS Text, u.screen_name AS ScreenName, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'm interested in seeing which users have tweeted links. Can you list them?,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, t.text AS Text, u.screen_name AS ScreenName, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify tweets that contain web links and the screen names of those who posted.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, t.text AS Text, u.screen_name AS ScreenName, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide a list of tweets with external links and the usernames of the posters.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, t.text AS Text, u.screen_name AS ScreenName, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How can I find out which users posted tweets with links in them?,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, t.text AS Text, u.screen_name AS ScreenName, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Display all tweets that have links in their content, including who posted them.","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, t.text AS Text, u.screen_name AS ScreenName, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show tweets that incorporate links and detail the users who shared these tweets?,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, t.text AS Text, u.screen_name AS ScreenName, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I need a list of tweets that feature URLs and the individuals who posted those tweets.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, t.text AS Text, u.screen_name AS ScreenName, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Extract tweets that contain any URLs and list the user screen names who posted such tweets.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, t.text AS Text, u.screen_name AS ScreenName, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find and list tweets that are linked to external sites along with the users who tweeted them.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, t.text AS Text, u.screen_name AS ScreenName, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Query for tweets that embed links, and identify the users who posted them.","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, t.text AS Text, u.screen_name AS ScreenName, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who has posted tweets with links, and what are those tweets?","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, t.text AS Text, u.screen_name AS ScreenName, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover tweets that include link URLs and the entities that have shared them.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, t.text AS Text, u.screen_name AS ScreenName, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which users have not posted any tweets?,"MATCH (u:User)
WHERE NOT (u)-[:POSTS]->()
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you list all users without any tweets?,"MATCH (u:User)
WHERE NOT (u)-[:POSTS]->()
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who in our network has never tweeted?,"MATCH (u:User)
WHERE NOT (u)-[:POSTS]->()
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'm looking for users who are yet to share a tweet. Could you identify them?,"MATCH (u:User)
WHERE NOT (u)-[:POSTS]->()
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which accounts have zero tweets posted?,"MATCH (u:User)
WHERE NOT (u)-[:POSTS]->()
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find users who haven't contributed tweets.,"MATCH (u:User)
WHERE NOT (u)-[:POSTS]->()
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify all members who are silent on our platform, with no tweets to their name.","MATCH (u:User)
WHERE NOT (u)-[:POSTS]->()
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the users with no tweeting activity?,"MATCH (u:User)
WHERE NOT (u)-[:POSTS]->()
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the list of users who are present but have not posted any content.,"MATCH (u:User)
WHERE NOT (u)-[:POSTS]->()
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you find out which users are yet to make their first tweet?,"MATCH (u:User)
WHERE NOT (u)-[:POSTS]->()
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I need to know who hasn't started tweeting yet.,"MATCH (u:User)
WHERE NOT (u)-[:POSTS]->()
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the screen names and names of users who don't have any posts.,"MATCH (u:User)
WHERE NOT (u)-[:POSTS]->()
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Are there any users who have an account but haven't posted tweets?,"MATCH (u:User)
WHERE NOT (u)-[:POSTS]->()
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How can I find users on our platform without any tweet posts?,"MATCH (u:User)
WHERE NOT (u)-[:POSTS]->()
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'm curious about which users have stayed silent by not posting tweets.,"MATCH (u:User)
WHERE NOT (u)-[:POSTS]->()
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who in the database has an empty tweet history?,"MATCH (u:User)
WHERE NOT (u)-[:POSTS]->()
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which tweets mention 'neo4j'?,"MATCH (t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify tweets that mention 'neo4j'.,"MATCH (t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List all tweets where 'neo4j' is mentioned.,"MATCH (t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover tweets in which 'neo4j' is tagged.,"MATCH (t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which tweets include a mention of 'neo4j'?,"MATCH (t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find tweets that reference 'neo4j'.,"MATCH (t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show tweets where 'neo4j' is a mentioned user.,"MATCH (t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore tweets mentioning me as 'neo4j'.,"MATCH (t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight all tweets tagging 'neo4j'.,"MATCH (t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal tweets that specifically mention 'neo4j'.,"MATCH (t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog tweets where 'neo4j' is mentioned by users.,"MATCH (t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover tweets that tag 'neo4j' in their content.,"MATCH (t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the content of tweets mentioning 'neo4j'.,"MATCH (t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What tweets contain mentions of me as 'neo4j'?,"MATCH (t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate tweets where 'neo4j' is referenced.,"MATCH (t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint tweets directly mentioning 'neo4j'.,"MATCH (t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What hashtags has 'plotmath' used?,"MATCH (u:User {screen_name: 'plotmath'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the hashtags utilized by 'plotmath' in their tweets.,"MATCH (u:User {screen_name: 'plotmath'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the hashtags that 'plotmath' includes in tweets.,"MATCH (u:User {screen_name: 'plotmath'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the hashtags frequently used by 'plotmath'.,"MATCH (u:User {screen_name: 'plotmath'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the common hashtags in 'plotmath's Twitter posts.,"MATCH (u:User {screen_name: 'plotmath'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which hashtags are characteristic of 'plotmath's tweets?,"MATCH (u:User {screen_name: 'plotmath'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the hashtags found in tweets by 'plotmath'.,"MATCH (u:User {screen_name: 'plotmath'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the hashtags 'plotmath' tweets with.,"MATCH (u:User {screen_name: 'plotmath'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the unique hashtags 'plotmath' employs in their tweets.,"MATCH (u:User {screen_name: 'plotmath'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the hashtags often tagged by 'plotmath'.,"MATCH (u:User {screen_name: 'plotmath'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the recurring hashtags in 'plotmath's tweets?,"MATCH (u:User {screen_name: 'plotmath'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the hashtags that 'plotmath' prefers to use.,"MATCH (u:User {screen_name: 'plotmath'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the hashtags frequently mentioned by 'plotmath'.,"MATCH (u:User {screen_name: 'plotmath'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the hashtags 'plotmath' uses in their social media posts.,"MATCH (u:User {screen_name: 'plotmath'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the hashtags most associated with 'plotmath's tweets.,"MATCH (u:User {screen_name: 'plotmath'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the specific hashtags utilized by 'plotmath' on Twitter.,"MATCH (u:User {screen_name: 'plotmath'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who do I, as 'neo4j', follow and what is their most recent tweet?","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.id AS TweetID, t.text AS Text
ORDER BY t.created_at DESC LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the latest tweet from someone I follow as 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.id AS TweetID, t.text AS Text
ORDER BY t.created_at DESC LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which recent tweet was posted by a user that 'neo4j' follows?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.id AS TweetID, t.text AS Text
ORDER BY t.created_at DESC LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show the most recent tweet of any user followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.id AS TweetID, t.text AS Text
ORDER BY t.created_at DESC LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What is the latest message from a user in 'neo4j's follow list?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.id AS TweetID, t.text AS Text
ORDER BY t.created_at DESC LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who among my follows has tweeted last, and what did they say?","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.id AS TweetID, t.text AS Text
ORDER BY t.created_at DESC LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you display the newest tweet from those I follow as 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.id AS TweetID, t.text AS Text
ORDER BY t.created_at DESC LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What’s the latest content shared by someone followed by 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.id AS TweetID, t.text AS Text
ORDER BY t.created_at DESC LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who has 'neo4j' followed, and what's their most recent tweet about?","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.id AS TweetID, t.text AS Text
ORDER BY t.created_at DESC LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find the last tweet posted by a user that is followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.id AS TweetID, t.text AS Text
ORDER BY t.created_at DESC LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","As 'neo4j', who is the most recent user I follow to post a tweet, and what was it?","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.id AS TweetID, t.text AS Text
ORDER BY t.created_at DESC LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who retweeted the tweet with ID '1371778287970705408'?,"MATCH (u:User)-[:RETWEETS]->(t:Tweet {id: '1371778287970705408'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the users who retweeted the specific tweet with ID '1371778287970705408'.,"MATCH (u:User)-[:RETWEETS]->(t:Tweet {id: '1371778287970705408'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the Twitter handles and names of users who retweeted the tweet identified by ID '1371778287970705408'.,"MATCH (u:User)-[:RETWEETS]->(t:Tweet {id: '1371778287970705408'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine which users have retweeted the tweet with the unique ID '1371778287970705408'.,"MATCH (u:User)-[:RETWEETS]->(t:Tweet {id: '1371778287970705408'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who has shared the tweet again by retweeting it, specifically the one with ID '1371778287970705408'?","MATCH (u:User)-[:RETWEETS]->(t:Tweet {id: '1371778287970705408'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find out the accounts that retweeted the tweet tagged with ID '1371778287970705408'.,"MATCH (u:User)-[:RETWEETS]->(t:Tweet {id: '1371778287970705408'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show the screen names and full names of individuals who retweeted '1371778287970705408'?,"MATCH (u:User)-[:RETWEETS]->(t:Tweet {id: '1371778287970705408'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Reveal the profiles that engaged with the tweet through retweeting, particularly the one with ID '1371778287970705408'.","MATCH (u:User)-[:RETWEETS]->(t:Tweet {id: '1371778287970705408'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the Twitter users who participated in spreading the tweet by ID '1371778287970705408' through retweets.,"MATCH (u:User)-[:RETWEETS]->(t:Tweet {id: '1371778287970705408'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the screen names and real names of people who retweeted the tweet carrying the ID '1371778287970705408'?,"MATCH (u:User)-[:RETWEETS]->(t:Tweet {id: '1371778287970705408'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the community members who boosted the reach of the tweet with ID '1371778287970705408' by retweeting it.,"MATCH (u:User)-[:RETWEETS]->(t:Tweet {id: '1371778287970705408'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who do I, as 'neo4j', follow?","MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify who I, 'neo4j', am following on Twitter.","MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the screen names and real names of users I follow.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Discover the accounts I, 'neo4j', have chosen to follow.","MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the names of individuals I am following.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Explore the profiles of users I, 'neo4j', follow.","MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight key accounts I follow with their screen names and names.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Analyze my, 'neo4j's, following list on Twitter.","MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the identities of users I follow.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Investigate the variety of users I, 'neo4j', follow on Twitter.","MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint notable personalities I am following.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Catalog the Twitter users in my, 'neo4j's, following list.","MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the diversity of accounts I follow.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Uncover the detailed list of users I, 'neo4j', am following, including their names and screen names.","MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Detail the accounts that make up my, 'neo4j's, Twitter circle.","MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Profile the accounts I follow, showcasing their Twitter handles and real names.","MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","As 'neo4j', who are my followers?","MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the users who follow 'neo4j' on Twitter.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the screen names and real names of 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover who has chosen to follow 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the names of individuals following 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the profiles of users who are followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight key followers of 'neo4j' with their screen names and names.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the community of Twitter users following 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the identities of users who follow 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the variety of 'neo4j's followers on Twitter.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint notable personalities who are followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the Twitter users who have 'neo4j' in their following list.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the diversity of 'neo4j's follower base.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Uncover the detailed list of 'neo4j's followers, including their names and screen names.","MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Detail the accounts that are part of 'neo4j's Twitter circle.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Profile the followers of 'neo4j', showcasing their Twitter handles and real names.","MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which tweets contain links?
","MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the tweets that include links and list their URLs.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the specific tweets that contain links, along with their URLs?","MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the tweet IDs that have embedded links and provide the link URLs.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover which tweets have links and detail the URLs contained within.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the tweet IDs and their corresponding link URLs.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Explore the tweets that feature links, highlighting their URLs.","MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Highlight the tweets containing links, noting the URLs for each.","MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the tweets with links and compile the URLs included.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal which tweets incorporate links and list their URLs.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Investigate the tweets that contain links, specifying the URLs.","MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the tweets that include links and their direct URLs.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Catalog the tweets featuring links, along with the URLs they contain.","MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Examine the variety of tweets that contain links, providing URLs.","MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the tweets with embedded links and list their corresponding URLs.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Detail the tweet IDs that contain links and specify the URLs embedded within.,"MATCH (t:Tweet)-[:CONTAINS]->(l:Link)
RETURN t.id AS TweetID, l.url AS LinkURL
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which tweets were posted using 'Twitter for iPhone'?,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Twitter for iPhone'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the tweets posted via 'Twitter for iPhone'.,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Twitter for iPhone'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the specific tweets shared using 'Twitter for iPhone'?,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Twitter for iPhone'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the tweet IDs and their content that were posted from 'Twitter for iPhone'.,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Twitter for iPhone'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the range of tweets sent out through 'Twitter for iPhone'.,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Twitter for iPhone'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the content of tweets originating from 'Twitter for iPhone'.,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Twitter for iPhone'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore various tweets that were published using 'Twitter for iPhone'.,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Twitter for iPhone'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight notable tweets that were sent using 'Twitter for iPhone'.,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Twitter for iPhone'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the messages tweeted from 'Twitter for iPhone'.,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Twitter for iPhone'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the tweets composed and posted via 'Twitter for iPhone'.,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Twitter for iPhone'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the variety of tweets shared through 'Twitter for iPhone'.,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Twitter for iPhone'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the specific tweets dispatched from 'Twitter for iPhone'.,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Twitter for iPhone'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog tweets that were made using 'Twitter for iPhone'.,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Twitter for iPhone'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the diversity of tweets posted with 'Twitter for iPhone'.,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Twitter for iPhone'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the detailed texts of tweets sent from 'Twitter for iPhone'.,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Twitter for iPhone'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Detail the tweets and their IDs that utilized 'Twitter for iPhone' for posting.,"MATCH (t:Tweet)-[:USING]->(s:Source {name: 'Twitter for iPhone'})
RETURN t.id AS TweetID, t.text AS Text
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which users does 'neo4j' retweet the most?,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS Retweets
ORDER BY Retweets DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the users most frequently retweeted by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS Retweets
ORDER BY Retweets DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the top users that 'neo4j' retweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS Retweets
ORDER BY Retweets DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover which Twitter accounts 'neo4j' retweets the most.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS Retweets
ORDER BY Retweets DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the users 'neo4j' retweets most often.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS Retweets
ORDER BY Retweets DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the accounts most retweeted by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS Retweets
ORDER BY Retweets DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore who 'neo4j' commonly retweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS Retweets
ORDER BY Retweets DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the most retweeted users by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS Retweets
ORDER BY Retweets DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the users that 'neo4j' prioritizes in retweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS Retweets
ORDER BY Retweets DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the top accounts 'neo4j' retweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS Retweets
ORDER BY Retweets DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the Twitter users frequently retweeted by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS Retweets
ORDER BY Retweets DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the primary users 'neo4j' chooses to retweet.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS Retweets
ORDER BY Retweets DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the most retweeted users by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS Retweets
ORDER BY Retweets DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the users 'neo4j' most frequently shares through retweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS Retweets
ORDER BY Retweets DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the leading accounts retweeted by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS Retweets
ORDER BY Retweets DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Detail the Twitter users 'neo4j' most actively retweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS Retweets
ORDER BY Retweets DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What hashtags does 'neo4j' use most frequently in their tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the top hashtags frequently used by 'neo4j' in tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most common hashtags 'neo4j' includes in their tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the primary hashtags that 'neo4j' tweets with most often.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the hashtags that appear most frequently in 'neo4j's tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the hashtags 'neo4j' relies on heavily in their Twitter posts.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the most used hashtags in 'neo4j's Twitter feed.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the key hashtags featured in 'neo4j's tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the most frequent hashtags tweeted out by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the top hashtags that 'neo4j' consistently uses in tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the hashtags 'neo4j' prefers to use in their social media strategy.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the most popular hashtags utilized by 'neo4j' on Twitter.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the recurring hashtags in 'neo4j's tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the hashtags 'neo4j' selects most for their tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the leading hashtags 'neo4j' publishes in their Twitter communications.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Detail the most prominent hashtags used by 'neo4j' in their tweeting activities.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify which tweeting platforms I, 'neo4j', use most frequently for posting tweets.","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What tweeting tools do I primarily rely on for my tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the main sources I use to share my thoughts on Twitter.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the top platforms and tools I prefer for tweeting.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine my most frequented platforms for sending out tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the most common tools I employ for my Twitter activities.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the key services and applications I use for tweeting.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the platforms that I depend on the most for my tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal my go-to sources for publishing tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate which tweeting services I utilize regularly.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the tweeting platforms that are my favorites.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the sources from which I post my tweets most often.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the variety of tools I choose for my tweeting needs.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the preferred methods and platforms I use for Twitter.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the software and services that are my staples for tweeting.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Detail the platforms and tools that I, 'neo4j', select most for my Twitter engagements.","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","As 'neo4j', who mentions me the most in their tweets?","MATCH (me:Me {screen_name: 'neo4j'})-[:MENTIONS]->(u:User)
RETURN u.screen_name AS MentionedScreenName, count(*) AS Mentions
ORDER BY Mentions DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who mentions me, 'neo4j', the most in their tweets?","MATCH (me:Me {screen_name: 'neo4j'})-[:MENTIONS]->(u:User)
RETURN u.screen_name AS MentionedScreenName, count(*) AS Mentions
ORDER BY Mentions DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the users who frequently mention me in the Twitter ecosystem.,"MATCH (me:Me {screen_name: 'neo4j'})-[:MENTIONS]->(u:User)
RETURN u.screen_name AS MentionedScreenName, count(*) AS Mentions
ORDER BY Mentions DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Discover which Twitter accounts mention me, 'neo4j', most often.","MATCH (me:Me {screen_name: 'neo4j'})-[:MENTIONS]->(u:User)
RETURN u.screen_name AS MentionedScreenName, count(*) AS Mentions
ORDER BY Mentions DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the top Twitter users who have mentioned me the most.,"MATCH (me:Me {screen_name: 'neo4j'})-[:MENTIONS]->(u:User)
RETURN u.screen_name AS MentionedScreenName, count(*) AS Mentions
ORDER BY Mentions DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","As 'neo4j', find out who mentions me the most in their social media conversations.","MATCH (me:Me {screen_name: 'neo4j'})-[:MENTIONS]->(u:User)
RETURN u.screen_name AS MentionedScreenName, count(*) AS Mentions
ORDER BY Mentions DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who has tagged me, 'neo4j', in their tweets more than anyone else?","MATCH (me:Me {screen_name: 'neo4j'})-[:MENTIONS]->(u:User)
RETURN u.screen_name AS MentionedScreenName, count(*) AS Mentions
ORDER BY Mentions DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the Twitter profiles that frequently bring me up in their tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:MENTIONS]->(u:User)
RETURN u.screen_name AS MentionedScreenName, count(*) AS Mentions
ORDER BY Mentions DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the top mentioners of me on Twitter.,"MATCH (me:Me {screen_name: 'neo4j'})-[:MENTIONS]->(u:User)
RETURN u.screen_name AS MentionedScreenName, count(*) AS Mentions
ORDER BY Mentions DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Reveal the users who consistently mention me, 'neo4j', in their Twitter dialogue.","MATCH (me:Me {screen_name: 'neo4j'})-[:MENTIONS]->(u:User)
RETURN u.screen_name AS MentionedScreenName, count(*) AS Mentions
ORDER BY Mentions DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Explore the accounts that have me, 'neo4j', frequently in their tweet mentions.","MATCH (me:Me {screen_name: 'neo4j'})-[:MENTIONS]->(u:User)
RETURN u.screen_name AS MentionedScreenName, count(*) AS Mentions
ORDER BY Mentions DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the Twitter users who engage with me through mentions the most.,"MATCH (me:Me {screen_name: 'neo4j'})-[:MENTIONS]->(u:User)
RETURN u.screen_name AS MentionedScreenName, count(*) AS Mentions
ORDER BY Mentions DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Analyze the list of Twitter users who have me, 'neo4j', as a common mention.","MATCH (me:Me {screen_name: 'neo4j'})-[:MENTIONS]->(u:User)
RETURN u.screen_name AS MentionedScreenName, count(*) AS Mentions
ORDER BY Mentions DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","As 'neo4j', who are the individuals that refer to me most frequently on Twitter?","MATCH (me:Me {screen_name: 'neo4j'})-[:MENTIONS]->(u:User)
RETURN u.screen_name AS MentionedScreenName, count(*) AS Mentions
ORDER BY Mentions DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the Twitter accounts that direct their tweets at me most regularly.,"MATCH (me:Me {screen_name: 'neo4j'})-[:MENTIONS]->(u:User)
RETURN u.screen_name AS MentionedScreenName, count(*) AS Mentions
ORDER BY Mentions DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Catalog the users making the most mentions of me, 'neo4j', in their Twitter activity.","MATCH (me:Me {screen_name: 'neo4j'})-[:MENTIONS]->(u:User)
RETURN u.screen_name AS MentionedScreenName, count(*) AS Mentions
ORDER BY Mentions DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","As 'neo4j', who replies most frequently to my tweets?","MATCH (t:Tweet)<-[:POSTS]-(me:Me {screen_name: 'neo4j'}), (reply:Tweet)-[:REPLY_TO]->(t), (u:User)-[:POSTS]->(reply)
RETURN u.screen_name AS ReplierScreenName, count(*) AS Replies
ORDER BY Replies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the user who replies the most to 'neo4j's tweets.,"MATCH (t:Tweet)<-[:POSTS]-(me:Me {screen_name: 'neo4j'}), (reply:Tweet)-[:REPLY_TO]->(t), (u:User)-[:POSTS]->(reply)
RETURN u.screen_name AS ReplierScreenName, count(*) AS Replies
ORDER BY Replies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the top repliers to 'neo4j' on Twitter?,"MATCH (t:Tweet)<-[:POSTS]-(me:Me {screen_name: 'neo4j'}), (reply:Tweet)-[:REPLY_TO]->(t), (u:User)-[:POSTS]->(reply)
RETURN u.screen_name AS ReplierScreenName, count(*) AS Replies
ORDER BY Replies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover which Twitter user frequently responds to 'neo4j'.,"MATCH (t:Tweet)<-[:POSTS]-(me:Me {screen_name: 'neo4j'}), (reply:Tweet)-[:REPLY_TO]->(t), (u:User)-[:POSTS]->(reply)
RETURN u.screen_name AS ReplierScreenName, count(*) AS Replies
ORDER BY Replies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the users with the highest reply count to 'neo4j's tweets.,"MATCH (t:Tweet)<-[:POSTS]-(me:Me {screen_name: 'neo4j'}), (reply:Tweet)-[:REPLY_TO]->(t), (u:User)-[:POSTS]->(reply)
RETURN u.screen_name AS ReplierScreenName, count(*) AS Replies
ORDER BY Replies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine who interacts with 'neo4j' the most through replies.,"MATCH (t:Tweet)<-[:POSTS]-(me:Me {screen_name: 'neo4j'}), (reply:Tweet)-[:REPLY_TO]->(t), (u:User)-[:POSTS]->(reply)
RETURN u.screen_name AS ReplierScreenName, count(*) AS Replies
ORDER BY Replies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the top Twitter accounts replying to 'neo4j'.,"MATCH (t:Tweet)<-[:POSTS]-(me:Me {screen_name: 'neo4j'}), (reply:Tweet)-[:REPLY_TO]->(t), (u:User)-[:POSTS]->(reply)
RETURN u.screen_name AS ReplierScreenName, count(*) AS Replies
ORDER BY Replies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the most active users in replying to 'neo4j'.,"MATCH (t:Tweet)<-[:POSTS]-(me:Me {screen_name: 'neo4j'}), (reply:Tweet)-[:REPLY_TO]->(t), (u:User)-[:POSTS]->(reply)
RETURN u.screen_name AS ReplierScreenName, count(*) AS Replies
ORDER BY Replies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the users who frequently engage with 'neo4j' via replies.,"MATCH (t:Tweet)<-[:POSTS]-(me:Me {screen_name: 'neo4j'}), (reply:Tweet)-[:REPLY_TO]->(t), (u:User)-[:POSTS]->(reply)
RETURN u.screen_name AS ReplierScreenName, count(*) AS Replies
ORDER BY Replies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the Twitter user most engaged with 'neo4j' through replies.,"MATCH (t:Tweet)<-[:POSTS]-(me:Me {screen_name: 'neo4j'}), (reply:Tweet)-[:REPLY_TO]->(t), (u:User)-[:POSTS]->(reply)
RETURN u.screen_name AS ReplierScreenName, count(*) AS Replies
ORDER BY Replies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the most frequent repliers to tweets by 'neo4j'.,"MATCH (t:Tweet)<-[:POSTS]-(me:Me {screen_name: 'neo4j'}), (reply:Tweet)-[:REPLY_TO]->(t), (u:User)-[:POSTS]->(reply)
RETURN u.screen_name AS ReplierScreenName, count(*) AS Replies
ORDER BY Replies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the users who reply most often to 'neo4j'.,"MATCH (t:Tweet)<-[:POSTS]-(me:Me {screen_name: 'neo4j'}), (reply:Tweet)-[:REPLY_TO]->(t), (u:User)-[:POSTS]->(reply)
RETURN u.screen_name AS ReplierScreenName, count(*) AS Replies
ORDER BY Replies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the Twitter accounts that actively respond to 'neo4j'.,"MATCH (t:Tweet)<-[:POSTS]-(me:Me {screen_name: 'neo4j'}), (reply:Tweet)-[:REPLY_TO]->(t), (u:User)-[:POSTS]->(reply)
RETURN u.screen_name AS ReplierScreenName, count(*) AS Replies
ORDER BY Replies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the main users engaging with 'neo4j' through tweet replies.,"MATCH (t:Tweet)<-[:POSTS]-(me:Me {screen_name: 'neo4j'}), (reply:Tweet)-[:REPLY_TO]->(t), (u:User)-[:POSTS]->(reply)
RETURN u.screen_name AS ReplierScreenName, count(*) AS Replies
ORDER BY Replies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the top repliers to 'neo4j's Twitter posts.,"MATCH (t:Tweet)<-[:POSTS]-(me:Me {screen_name: 'neo4j'}), (reply:Tweet)-[:REPLY_TO]->(t), (u:User)-[:POSTS]->(reply)
RETURN u.screen_name AS ReplierScreenName, count(*) AS Replies
ORDER BY Replies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover who among 'neo4j's followers is the most responsive in tweets.,"MATCH (t:Tweet)<-[:POSTS]-(me:Me {screen_name: 'neo4j'}), (reply:Tweet)-[:REPLY_TO]->(t), (u:User)-[:POSTS]->(reply)
RETURN u.screen_name AS ReplierScreenName, count(*) AS Replies
ORDER BY Replies DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What links have I, as 'neo4j', shared the most in their tweets?","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS LinkURL, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most frequently shared links by 'neo4j' in tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS LinkURL, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top URLs 'neo4j' shares in their Twitter posts?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS LinkURL, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the links most commonly tweeted by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS LinkURL, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the URLs 'neo4j' repeats most often in their tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS LinkURL, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the most shared web resources by 'neo4j' on Twitter.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS LinkURL, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the favorite links 'neo4j' distributes through tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS LinkURL, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the most recurrent links shared by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS LinkURL, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the links 'neo4j' frequently includes in their tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS LinkURL, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the primary web pages 'neo4j' promotes on Twitter.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS LinkURL, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the most posted links by 'neo4j' in their tweet history.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS LinkURL, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the URLs 'neo4j' shares repeatedly with their followers.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS LinkURL, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the top links that appear in 'neo4j's tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS LinkURL, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the main web links 'neo4j' circulates on Twitter.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS LinkURL, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the links 'neo4j' prioritizes in their social media strategy.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS LinkURL, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the leading URLs that 'neo4j' endorses through tweeting.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS LinkURL, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","As 'neo4j', which of my tweets received the most replies?
","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
RETURN t.id AS TweetID, count(reply) AS RepliesCount
ORDER BY RepliesCount DESC
LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the tweet by 'neo4j' that garnered the most replies.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
RETURN t.id AS TweetID, count(reply) AS RepliesCount
ORDER BY RepliesCount DESC
LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which tweet from 'neo4j' has received the highest number of replies?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
RETURN t.id AS TweetID, count(reply) AS RepliesCount
ORDER BY RepliesCount DESC
LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the most interacted with tweet by 'neo4j' based on replies.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
RETURN t.id AS TweetID, count(reply) AS RepliesCount
ORDER BY RepliesCount DESC
LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List 'neo4j's tweet that attracted the most engagement through replies.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
RETURN t.id AS TweetID, count(reply) AS RepliesCount
ORDER BY RepliesCount DESC
LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the single most replied-to tweet by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
RETURN t.id AS TweetID, count(reply) AS RepliesCount
ORDER BY RepliesCount DESC
LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore which of 'neo4j's tweets sparked the most conversation.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
RETURN t.id AS TweetID, count(reply) AS RepliesCount
ORDER BY RepliesCount DESC
LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight 'neo4j's tweet with the highest reply count.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
RETURN t.id AS TweetID, count(reply) AS RepliesCount
ORDER BY RepliesCount DESC
LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the 'neo4j' tweet that led to the most user interactions.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
RETURN t.id AS TweetID, count(reply) AS RepliesCount
ORDER BY RepliesCount DESC
LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal 'neo4j's most popular tweet in terms of replies received.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
RETURN t.id AS TweetID, count(reply) AS RepliesCount
ORDER BY RepliesCount DESC
LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the 'neo4j' tweet that captured the audience's attention the most.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
RETURN t.id AS TweetID, count(reply) AS RepliesCount
ORDER BY RepliesCount DESC
LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the tweet by 'neo4j' that stands out for its number of replies.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
RETURN t.id AS TweetID, count(reply) AS RepliesCount
ORDER BY RepliesCount DESC
LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the 'neo4j' tweet that emerged as the most engaging.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
RETURN t.id AS TweetID, count(reply) AS RepliesCount
ORDER BY RepliesCount DESC
LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the peak of 'neo4j's Twitter engagement through reply volume.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
RETURN t.id AS TweetID, count(reply) AS RepliesCount
ORDER BY RepliesCount DESC
LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine which tweet from 'neo4j' resonated the most with the audience.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
RETURN t.id AS TweetID, count(reply) AS RepliesCount
ORDER BY RepliesCount DESC
LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the 'neo4j' tweet that became a focal point for replies.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(reply:Tweet)
RETURN t.id AS TweetID, count(reply) AS RepliesCount
ORDER BY RepliesCount DESC
LIMIT 1
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What common interests do I, as 'neo4j', and 'plotmath' share based on hashtags in their tweets?","MATCH (neo:Me {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:TAGS]->(h:Hashtag), (plot:User {screen_name: 'plotmath'})-[:POSTS]->(t2:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, count(h) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the hashtags commonly used by both 'neo4j' and 'plotmath'.,"MATCH (neo:Me {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:TAGS]->(h:Hashtag), (plot:User {screen_name: 'plotmath'})-[:POSTS]->(t2:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, count(h) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What hashtags reveal shared interests between 'neo4j' and 'plotmath'?,"MATCH (neo:Me {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:TAGS]->(h:Hashtag), (plot:User {screen_name: 'plotmath'})-[:POSTS]->(t2:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, count(h) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the overlapping hashtags between 'neo4j' and 'plotmath'.,"MATCH (neo:Me {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:TAGS]->(h:Hashtag), (plot:User {screen_name: 'plotmath'})-[:POSTS]->(t2:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, count(h) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the hashtags that 'neo4j' and 'plotmath' both frequently tweet about.,"MATCH (neo:Me {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:TAGS]->(h:Hashtag), (plot:User {screen_name: 'plotmath'})-[:POSTS]->(t2:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, count(h) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the common topics of interest between 'neo4j' and 'plotmath' through hashtags.,"MATCH (neo:Me {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:TAGS]->(h:Hashtag), (plot:User {screen_name: 'plotmath'})-[:POSTS]->(t2:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, count(h) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the shared hashtags indicative of mutual interests between 'neo4j' and 'plotmath'.,"MATCH (neo:Me {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:TAGS]->(h:Hashtag), (plot:User {screen_name: 'plotmath'})-[:POSTS]->(t2:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, count(h) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the top hashtags used by both 'neo4j' and 'plotmath'.,"MATCH (neo:Me {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:TAGS]->(h:Hashtag), (plot:User {screen_name: 'plotmath'})-[:POSTS]->(t2:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, count(h) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the hashtags that connect 'neo4j' and 'plotmath' in terms of interests.,"MATCH (neo:Me {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:TAGS]->(h:Hashtag), (plot:User {screen_name: 'plotmath'})-[:POSTS]->(t2:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, count(h) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the primary hashtags indicating shared interests between 'neo4j' and 'plotmath'.,"MATCH (neo:Me {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:TAGS]->(h:Hashtag), (plot:User {screen_name: 'plotmath'})-[:POSTS]->(t2:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, count(h) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the mutual hashtags tweeted by 'neo4j' and 'plotmath'.,"MATCH (neo:Me {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:TAGS]->(h:Hashtag), (plot:User {screen_name: 'plotmath'})-[:POSTS]->(t2:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, count(h) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the most notable common hashtags between 'neo4j' and 'plotmath'.,"MATCH (neo:Me {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:TAGS]->(h:Hashtag), (plot:User {screen_name: 'plotmath'})-[:POSTS]->(t2:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, count(h) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the recurring hashtags demonstrating shared interests between 'neo4j' and 'plotmath'.,"MATCH (neo:Me {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:TAGS]->(h:Hashtag), (plot:User {screen_name: 'plotmath'})-[:POSTS]->(t2:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, count(h) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the main hashtags that link 'neo4j' and 'plotmath' in shared topics.,"MATCH (neo:Me {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:TAGS]->(h:Hashtag), (plot:User {screen_name: 'plotmath'})-[:POSTS]->(t2:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, count(h) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the hashtags that show overlapping interests between 'neo4j' and 'plotmath'.,"MATCH (neo:Me {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:TAGS]->(h:Hashtag), (plot:User {screen_name: 'plotmath'})-[:POSTS]->(t2:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, count(h) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Uncover the leading hashtags that 'neo4j' and 'plotmath' both use, highlighting their shared interests.","MATCH (neo:Me {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:TAGS]->(h:Hashtag), (plot:User {screen_name: 'plotmath'})-[:POSTS]->(t2:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, count(h) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What topics does 'neo4j' tweet about the most?,"MATCH (u:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the top hashtags used by 'neo4j' in their tweets.,"MATCH (u:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most common topics 'neo4j' tweets about?,"MATCH (u:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the prevalent hashtags in 'neo4j's tweets.,"MATCH (u:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the primary hashtags associated with 'neo4j's tweets.,"MATCH (u:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the key subjects 'neo4j' focuses on in their Twitter feed.,"MATCH (u:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the main topics of discussion in 'neo4j's tweets.,"MATCH (u:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the most frequently used hashtags by 'neo4j'.,"MATCH (u:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the most common themes in 'neo4j's tweets through hashtags.,"MATCH (u:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the top hashtags that appear in 'neo4j's Twitter posts.,"MATCH (u:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the common hashtags used in 'neo4j's tweets.,"MATCH (u:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the most notable topics discussed by 'neo4j' on Twitter.,"MATCH (u:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the recurring hashtags found in 'neo4j's tweets.,"MATCH (u:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify the major themes 'neo4j' tweets about, based on hashtag usage.","MATCH (u:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the most popular hashtags used in 'neo4j's Twitter communications.,"MATCH (u:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the key hashtags indicating 'neo4j's primary tweeting interests.,"MATCH (u:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which users does 'neo4j' retweet the most?,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS RetweetCount
ORDER BY RetweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the top users 'neo4j' retweets frequently.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS RetweetCount
ORDER BY RetweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the most retweeted users by 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS RetweetCount
ORDER BY RetweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the users 'neo4j' retweets the most.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS RetweetCount
ORDER BY RetweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the top accounts that 'neo4j' often retweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS RetweetCount
ORDER BY RetweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the users most commonly retweeted by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS RetweetCount
ORDER BY RetweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the accounts 'neo4j' prioritizes in retweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS RetweetCount
ORDER BY RetweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the most retweeted users by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS RetweetCount
ORDER BY RetweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the user accounts 'neo4j' retweets frequently.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS RetweetCount
ORDER BY RetweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the primary accounts retweeted by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS RetweetCount
ORDER BY RetweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the favorite users 'neo4j' chooses to retweet.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS RetweetCount
ORDER BY RetweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the top accounts retweeted by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS RetweetCount
ORDER BY RetweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the users most often retweeted by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS RetweetCount
ORDER BY RetweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the main users 'neo4j' supports through retweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS RetweetCount
ORDER BY RetweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the users 'neo4j' retweets the most.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS RetweetCount
ORDER BY RetweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the leading accounts that receive retweets from 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)<-[:POSTS]-(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS RetweetCount
ORDER BY RetweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who mentions me, as 'neo4j', the most in their tweets?","MATCH (u:User)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, count(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you list the top 50 users who mention me, 'neo4j', the most in their Twitter posts?","MATCH (u:User)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, count(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the most frequent users mentioning 'neo4j' in their tweets?,"MATCH (u:User)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, count(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the 50 users mentioning 'neo4j' most frequently in their tweets.,"MATCH (u:User)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, count(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Show me the users who have mentioned me, as 'neo4j', the most in their tweets.","MATCH (u:User)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, count(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the screen names of the top 50 users who frequently mention 'neo4j'?,"MATCH (u:User)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, count(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Could you tell me which users mention me, going by 'neo4j', the most on Twitter?","MATCH (u:User)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, count(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like to find out the 50 users who most often mention 'neo4j' in their tweets.,"MATCH (u:User)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, count(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Rank the top 50 users by how often they mention 'neo4j' in their tweets.,"MATCH (u:User)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, count(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you provide a list of users who most commonly mention me, 'neo4j', in their tweet activities?","MATCH (u:User)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, count(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who mentions 'neo4j' the most in their tweets? I need the top 50 users listed by frequency.,"MATCH (u:User)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, count(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the users who reference 'neo4j' most often in their Twitter postings.,"MATCH (u:User)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, count(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I would appreciate a list of the 50 most mentioning users of 'neo4j' in their tweets.,"MATCH (u:User)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, count(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the top users that frequently include 'neo4j' in their tweet mentions?,"MATCH (u:User)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, count(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Unveil the top 50 Twitter accounts that most frequently mention 'neo4j'.,"MATCH (u:User)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, count(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which users refer to 'neo4j' the most in their Twitter conversations, and could you list the top 50?","MATCH (u:User)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, count(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which hashtags do I, as 'neo4j',
 use the most?","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS UsageCount
ORDER BY UsageCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","As 'neo4j', which hashtags do I use the most in my tweets?","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS UsageCount
ORDER BY UsageCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you show the top 50 hashtags that I, 'neo4j', use most frequently when tweeting?","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS UsageCount
ORDER BY UsageCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the most common 50 hashtags that 'neo4j', or I, use in my tweets?","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS UsageCount
ORDER BY UsageCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","As 'neo4j', what are the 50 hashtags that I use the most in my tweets?","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS UsageCount
ORDER BY UsageCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Could you list the 50 most used hashtags when I, 'neo4j', am tweeting?","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS UsageCount
ORDER BY UsageCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the 50 most frequent hashtags that I, as 'neo4j', use in my tweets?","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS UsageCount
ORDER BY UsageCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","As 'neo4j', what are my 50 most frequently used hashtags in my tweets?","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS UsageCount
ORDER BY UsageCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which hashtags do I, 'neo4j', use most frequently in my posts?","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS UsageCount
ORDER BY UsageCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Show the 50 most frequent hashtags that I, as 'neo4j', use in my tweets.","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS UsageCount
ORDER BY UsageCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you find the hashtags I, identified as 'neo4j', use the most when tweeting?","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS UsageCount
ORDER BY UsageCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I, as 'neo4j', use which hashtags the most in my tweets?","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS UsageCount
ORDER BY UsageCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","As 'neo4j', can you tell me what hashtags I use the most in my tweets?","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS UsageCount
ORDER BY UsageCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Could you indicate the top 50 hashtags that I, known as 'neo4j', use in my tweets?","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS UsageCount
ORDER BY UsageCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","As 'neo4j', list the top frequent 50 hashtags I use when tweeting.","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS UsageCount
ORDER BY UsageCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which are the hashtags that I, who am known as 'neo4j', most frequently use in my tweets?","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS UsageCount
ORDER BY UsageCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What sources do I, as 'neo4j', use to post tweets?","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you tell me what sources 'neo4j' mostly uses to post tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which sources does 'neo4j' typically use for tweeting?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the main sources from which 'neo4j' posts its tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you list the sources that I, as 'neo4j', often use to post tweets?","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Could you provide the sources most commonly used by 'neo4j' for tweeting?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the popular sources that 'neo4j' uses to send tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What sources does 'neo4j' frequently use to post its tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I am interested in the platforms that 'neo4j' commonly uses for tweeting.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Could you indicate the primary sources that 'neo4j' uses for its tweeting activity?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which platforms does 'neo4j' frequently use to post tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which sources does 'neo4j' use the most to post tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I would like to know the common sources used by 'neo4j' to send the tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the main sources that 'neo4j' uses to post tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most utilized sources by 'neo4j' for posting tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show the most frequent sources that 'neo4j' uses to tweet.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, count(*) AS Count
ORDER BY Count DESC
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who do I, as 'neo4j', interact with the most through mentions and retweets?","MATCH (me:Me {screen_name: 'neo4j'})-[r:MENTIONS|RETWEETS]->(t:Tweet)-[:POSTS]->(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS InteractionCount
ORDER BY InteractionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who are the top 50 users that I, as 'neo4j', interact with the most through mentions and retweets?","MATCH (me:Me {screen_name: 'neo4j'})-[r:MENTIONS|RETWEETS]->(t:Tweet)-[:POSTS]->(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS InteractionCount
ORDER BY InteractionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you provide a list of the 50 users 'neo4j' interacts with most frequently through mentions and retweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[r:MENTIONS|RETWEETS]->(t:Tweet)-[:POSTS]->(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS InteractionCount
ORDER BY InteractionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the 50 users that 'neo4j' mentions or retweets the most.,"MATCH (me:Me {screen_name: 'neo4j'})-[r:MENTIONS|RETWEETS]->(t:Tweet)-[:POSTS]->(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS InteractionCount
ORDER BY InteractionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the users that 'neo4j' frequently interacts with via mentioning or retweeting?,"MATCH (me:Me {screen_name: 'neo4j'})-[r:MENTIONS|RETWEETS]->(t:Tweet)-[:POSTS]->(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS InteractionCount
ORDER BY InteractionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the top 50 users that 'neo4j' frequently mentions or retweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[r:MENTIONS|RETWEETS]->(t:Tweet)-[:POSTS]->(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS InteractionCount
ORDER BY InteractionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the most common 50 users that 'neo4j' interacts with through mentions and retweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[r:MENTIONS|RETWEETS]->(t:Tweet)-[:POSTS]->(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS InteractionCount
ORDER BY InteractionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the 50 most interacted with user accounts by 'neo4j' via mentions and retweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[r:MENTIONS|RETWEETS]->(t:Tweet)-[:POSTS]->(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS InteractionCount
ORDER BY InteractionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I need the top 50 users who have the most mentions and retweets by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[r:MENTIONS|RETWEETS]->(t:Tweet)-[:POSTS]->(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS InteractionCount
ORDER BY InteractionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show the fifty most-interacted users by 'neo4j' through mentions and retweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[r:MENTIONS|RETWEETS]->(t:Tweet)-[:POSTS]->(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS InteractionCount
ORDER BY InteractionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the top 50 user names that 'neo4j' interacts the most with through mentioning or retweeting?,"MATCH (me:Me {screen_name: 'neo4j'})-[r:MENTIONS|RETWEETS]->(t:Tweet)-[:POSTS]->(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS InteractionCount
ORDER BY InteractionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Could you display the 50 most mentioned or retweeted users by 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[r:MENTIONS|RETWEETS]->(t:Tweet)-[:POSTS]->(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS InteractionCount
ORDER BY InteractionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the screen names of the 50 most interacted-with users by 'neo4j' through mentions and retweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[r:MENTIONS|RETWEETS]->(t:Tweet)-[:POSTS]->(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS InteractionCount
ORDER BY InteractionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which users does 'neo4j' interact with the most through mentions and retweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[r:MENTIONS|RETWEETS]->(t:Tweet)-[:POSTS]->(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS InteractionCount
ORDER BY InteractionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the 50 users that 'neo4j' engages with frequently through retweets and mentions.,"MATCH (me:Me {screen_name: 'neo4j'})-[r:MENTIONS|RETWEETS]->(t:Tweet)-[:POSTS]->(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS InteractionCount
ORDER BY InteractionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show the top fifty users whom 'neo4j' mentions and retweets most frequently.,"MATCH (me:Me {screen_name: 'neo4j'})-[r:MENTIONS|RETWEETS]->(t:Tweet)-[:POSTS]->(u:User)
RETURN u.screen_name AS ScreenName, count(*) AS InteractionCount
ORDER BY InteractionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What links do I (neo4j) share in tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which are the 50 most recurring links that I, as 'neo4j', share in my tweets?","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you provide the top 50 linked URLs used in the tweets posted by 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the frequent links that 'neo4j' shares in its tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the 50 most commonly shared URLs in 'neo4j's tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the URLs that 'neo4j' links to most often in its tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Could you list the 50 links that 'neo4j' most frequently shares in its tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I want to see the top 50 URLs that 'neo4j' shares in its tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most popular links that 'neo4j' shares in its twitter posts?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you display the top 50 links that 'neo4j' tweets about?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the commonly shared links by 'neo4j' in its tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Tell me the top 50 URLs included in the tweets by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I am interested in the links that 'neo4j' frequently uses in its tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you find the 50 most tweeted links by 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most used links in 'neo4j's tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Could you provide the 50 most popular URLs that 'neo4j' includes in its tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What topics do users I follow tweet about?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show me the top 50 topics that the users I follow mainly tweet about?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the preferred hashtags or topics of the users I follow on their tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the primary themes that the users I follow express in their tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Could you list the most popular hashtags used by people I follow in their tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the top 50 most frequent hashtags used by the users I follow in their tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the 50 primary subjects that the users I follow tweet about?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you name the top 50 topics that the users I am following commonly talk about on their tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I want to know the popular hashtags or themes that people I follow use in their tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the dominant topics mentioned by the users I am following in their tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide a list of top 50 popular hashtags that users I follow use in their tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Could you indicate the main hashtags or topics the users I follow tweet about?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which are the most-used topics by the people I follow in their tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display the most trending 50 topics that people I follow discuss in their tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show the 50 most-tweeted topics by the users I follow?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the most common 50 topics that users I follow are tweeting about.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, count(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the main topics of interest among people that I follow?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you show me the top 50 topics of interest, evidenced by hashtag usage, among the people I follow?","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the main hashtags or topics used by the people I follow?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the popular topics or hashtags used by the users I follow?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I would like to know the top 50 themes or hashtags frequently used by the people I am following.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the top topics or hashtags posted by the people I follow.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you list the popular hashtags among the users I follow, indicating their main interests?","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Provide me the most common hashtags used by the people I follow, revealing their favorite topics.","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the 50 most commonly used hashtags by people I follow?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you find the top 50 hashtags, indicating the subjects of interest, used by the individuals I follow?","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most favored hashtags by the people that I follow indicating their preferred topics?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Could you illustrate the main topics of interest among the people I follow using the most common hashtags?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which hashtags are most used by the users I am following, indicating their interests?","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reflect the top 50 topics followed by the people I follow via their most-used hashtags.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I need information on the popular subjects or hashtags among the users I am following.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Show me the dominant hashtags used by the people I follow, telling their areas of interest.","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which sources are most commonly used by people fthat I follow to post tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you tell me the top 50 most commonly used sources for posting tweets by people I follow?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most frequently used sources by the people I follow when they post tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top sources that the ones I am following use for their tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide the 50 most used sources by the accounts I follow for their tweet posts.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which sources are most popular among the people I am following for posting their tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the top 50 sources used by the people I follow for tweeting.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you list out the sources used by the accounts I follow to post their tweets, starting from most to least used?","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most common sources used by the people that I follow for their tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I would like to know the 50 most used platforms by the people I am following for sending out their tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide me the most frequently utilized sources by those I follow when they are tweeting.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top 50 most popular sources used for tweeting by those I follow?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the most common tweet sources used by the users I follow.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'm interested to know the sources most preferred by the people I follow for tweeting.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show the top 50 platforms used by the people I follow to post their tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What platforms do the people I follow commonly use to send their tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who follows me that 'neo4j' also follows?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User), (u)-[:FOLLOWS]->(me)
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the users whom 'neo4j' and I both follow?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User), (u)-[:FOLLOWS]->(me)
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the users that both 'neo4j' and I are following?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User), (u)-[:FOLLOWS]->(me)
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide the names of users that are followed by me and 'neo4j' both.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User), (u)-[:FOLLOWS]->(me)
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I want to see the list of users being followed by both myself and 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User), (u)-[:FOLLOWS]->(me)
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which users are followed by both me and 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User), (u)-[:FOLLOWS]->(me)
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Could you show me the users whom both I and 'neo4j' follow?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User), (u)-[:FOLLOWS]->(me)
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Tell me the users that are followed by both, myself and 'neo4j'.","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User), (u)-[:FOLLOWS]->(me)
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the users that both 'neo4j' and I are following.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User), (u)-[:FOLLOWS]->(me)
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you provide the names of users that are being followed by both me and 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User), (u)-[:FOLLOWS]->(me)
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which users are followed by both, me and 'neo4j'?","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User), (u)-[:FOLLOWS]->(me)
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the people who are followed by both myself and 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User), (u)-[:FOLLOWS]->(me)
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the individuals that both I and 'neo4j' follow?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User), (u)-[:FOLLOWS]->(me)
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Could you list down the users followed by both 'neo4j' and me?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User), (u)-[:FOLLOWS]->(me)
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the names of users that both 'neo4j' and I follow?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User), (u)-[:FOLLOWS]->(me)
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you tell me who is being followed by both me and 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User), (u)-[:FOLLOWS]->(me)
RETURN u.screen_name AS ScreenName, u.name AS Name
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the most mentioned users by those 'neo4j' follows?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS MentionedScreenName, COUNT(*) AS Mentions
ORDER BY Mentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the top 50 users mentioned the most by the users followed by 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS MentionedScreenName, COUNT(*) AS Mentions
ORDER BY Mentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the 50 most frequently mentioned users by the users that 'neo4j' follows?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS MentionedScreenName, COUNT(*) AS Mentions
ORDER BY Mentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which users are most mentioned by the users that 'neo4j' follows?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS MentionedScreenName, COUNT(*) AS Mentions
ORDER BY Mentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Could you list the top 50 users that are mentioned most often by those followed by 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS MentionedScreenName, COUNT(*) AS Mentions
ORDER BY Mentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show the fifty most mentioned users by the accounts that 'neo4j' follows.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS MentionedScreenName, COUNT(*) AS Mentions
ORDER BY Mentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you name the top 50 users who are mentioned most frequently by those who are followed by 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS MentionedScreenName, COUNT(*) AS Mentions
ORDER BY Mentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the 50 users who are most often mentioned by those whom 'neo4j' follows.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS MentionedScreenName, COUNT(*) AS Mentions
ORDER BY Mentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",To whom do users followed by 'neo4j' most frequently refer?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS MentionedScreenName, COUNT(*) AS Mentions
ORDER BY Mentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the fifty most mentioned screen names by those accounts that are followed by 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS MentionedScreenName, COUNT(*) AS Mentions
ORDER BY Mentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide the names of the top fifty users talked about by users followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS MentionedScreenName, COUNT(*) AS Mentions
ORDER BY Mentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I want to see the 50 users that are mentioned the most by those who 'neo4j' follows.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS MentionedScreenName, COUNT(*) AS Mentions
ORDER BY Mentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me who the users being followed by 'neo4j' mention the most.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS MentionedScreenName, COUNT(*) AS Mentions
ORDER BY Mentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Could you indicate the 50 users most often referred to by those followed by 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS MentionedScreenName, COUNT(*) AS Mentions
ORDER BY Mentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the users that those followed by 'neo4j' mention most frequently?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS MentionedScreenName, COUNT(*) AS Mentions
ORDER BY Mentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which users are referred to most by those that 'neo4j' follows?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS MentionedScreenName, COUNT(*) AS Mentions
ORDER BY Mentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most popular hashtags among 'neo4j's followers?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show the 50 most frequently used hashtags by 'neo4j' followers?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top 50 hashtags preferred by the followers of 'neo4j'?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which hashtags are most frequently used by the users following 'neo4j'?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Could you show the 50 most popular hashtags among those who follow 'neo4j'?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the fifty most common hashtags used by 'neo4j's followers?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you fetch the data for the top fifty hashtags used by the followers of 'neo4j'?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which 50 hashtags are most commonly used by the followers of 'neo4j'?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you list the top 50 hashtags that 'neo4j's followers use?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Could you provide the fifty most frequently used hashtags by 'neo4j's followers?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most used hashtags among the followers of 'neo4j'?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the top 50 hashtags favoured by 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide the fifty most commonly used hashtags by 'neo4j' followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I am looking for the 50 most popular hashtags used by 'neo4j' followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you indicate the fifty hashtags most loved by the supporters of 'neo4j'?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the heavily utilized hashtags among the followers of 'neo4j'?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the most active followers of 'neo4j' based on the number of tweets?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, SIZE([(u)-[:POSTS]->(t:Tweet) | t]) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the followers of 'neo4j' with the highest number of tweets.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, SIZE([(u)-[:POSTS]->(t:Tweet) | t]) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are 'neo4j's top tweeting followers?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, SIZE([(u)-[:POSTS]->(t:Tweet) | t]) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the most active Twitter users following 'neo4j' by tweet volume.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, SIZE([(u)-[:POSTS]->(t:Tweet) | t]) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the 'neo4j' followers who tweet the most.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, SIZE([(u)-[:POSTS]->(t:Tweet) | t]) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the followers of 'neo4j' with the greatest tweet counts.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, SIZE([(u)-[:POSTS]->(t:Tweet) | t]) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the most prolific tweeters among 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, SIZE([(u)-[:POSTS]->(t:Tweet) | t]) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the 'neo4j' followers who are most active on Twitter.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, SIZE([(u)-[:POSTS]->(t:Tweet) | t]) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the tweet frequency of 'neo4j's followers to find the most active.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, SIZE([(u)-[:POSTS]->(t:Tweet) | t]) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the top active users following 'neo4j' based on their tweets.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, SIZE([(u)-[:POSTS]->(t:Tweet) | t]) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate who tweets the most among 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, SIZE([(u)-[:POSTS]->(t:Tweet) | t]) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the 'neo4j' followers with the largest number of tweets.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, SIZE([(u)-[:POSTS]->(t:Tweet) | t]) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the most tweeting followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, SIZE([(u)-[:POSTS]->(t:Tweet) | t]) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the 'neo4j' followers leading in tweet activity.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, SIZE([(u)-[:POSTS]->(t:Tweet) | t]) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the tweet counts of 'neo4j's followers to find the most active.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, SIZE([(u)-[:POSTS]->(t:Tweet) | t]) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the followers of 'neo4j' with the highest tweeting activity.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS ScreenName, SIZE([(u)-[:POSTS]->(t:Tweet) | t]) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What types of links are most commonly shared by users 'neo4j' follows?
","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most frequently shared link types by users followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top categories of links shared by 'neo4j's followings?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the most common URLs circulated among users 'neo4j' follows.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the predominant types of web content shared by those followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the leading link categories shared within the 'neo4j' network.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the favorite online resources of users followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the most popular websites linked by 'neo4j's followings.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the types of links most often shared by users 'neo4j' follows.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the primary sources of links shared among 'neo4j's followings.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the most shared link genres by 'neo4j's followed users.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the top URLs and domains frequently shared by users 'neo4j' follows.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the recurring types of links posted by those 'neo4j' follows.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the key themes of links shared by users in 'neo4j's social circle.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the most common link types distributed within the 'neo4j' following.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the preferred link content shared by the network of users 'neo4j' follows.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the favorite tweeting tools among 'neo4j's followers?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most popular tweeting tools used by 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top platforms and apps favored by followers of 'neo4j' for tweeting?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the preferred tweeting sources among 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the main tools 'neo4j's followers use to post their tweets.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the most frequently used tweeting platforms by 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the favorite tweeting applications and services among followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the top tweeting tools based on usage by 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the most common sources 'neo4j's followers tweet from.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the primary tools and platforms used for tweeting by followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the favorite tweeting tools and sources among 'neo4j's follower base.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the most popular tweeting platforms among 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the leading sources for tweets among those who follow 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the key platforms and tools used by 'neo4j's followers for tweeting.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the most used tweeting sources by 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the top tweeting applications favored by the followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the interests of users who mention 'neo4j' in their tweets?,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'}), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the top hashtags used by users who mention 'neo4j' in their tweets.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'}), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the most common interests of users mentioning 'neo4j', based on hashtags?","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'}), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the prevalent hashtags in tweets that mention 'neo4j'.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'}), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the primary hashtags associated with 'neo4j' mentions on Twitter.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'}), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the key interests of Twitter users mentioning 'neo4j' through hashtag usage.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'}), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the favorite topics of users who talk about 'neo4j' in their tweets.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'}), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the most frequently used hashtags by those who mention 'neo4j'.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'}), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the interests of 'neo4j' mentioners on Twitter via their hashtag preferences.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'}), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the top hashtags that appear in tweets mentioning 'neo4j'.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'}), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the common themes among tweets that mention 'neo4j'.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'}), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the most notable hashtags in tweets referencing 'neo4j'.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'}), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the recurring hashtags found in tweets mentioning 'neo4j'.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'}), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the main hashtags reflecting the interests of users mentioning 'neo4j'.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'}), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the most popular topics among users who tweet about 'neo4j'.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'}), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the key hashtags indicating the interests of 'neo4j' mentioners on Twitter.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'}), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the common hashtags among the followers of 'neo4j'?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most used hashtags by 'neo4j's followers in their tweets.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top hashtags among tweets from followers of 'neo4j'?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the most common hashtags shared by 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the prevalent hashtags found in tweets of 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the leading hashtags used by followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the favorite hashtags among 'neo4j's Twitter followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the frequently used hashtags by those following 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the popular hashtags within the community of 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the primary hashtags shared among followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the top hashtags in tweets by 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the hashtags most mentioned by followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the key hashtags circulating among 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the recurring hashtags used by 'neo4j's Twitter followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most prominent hashtags among 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the hashtags that dominate the tweets of 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What links are shared by users that 'neo4j' follows?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most shared links by users followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top URLs circulated among 'neo4j's followings?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the frequently shared links by those 'neo4j' follows on Twitter.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the most common links posted by users 'neo4j' follows.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the leading URLs that 'neo4j's followed users share.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the popular web links shared by 'neo4j's network.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the top external content shared by users followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the most circulated links among 'neo4j's followings.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the primary links that 'neo4j's followed users share.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the favorite web resources of 'neo4j's followings.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the most referenced URLs by users 'neo4j' follows.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the key web links shared within 'neo4j's Twitter circle.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the recurring links posted by those followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most popular links among 'neo4j's followed accounts.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the top shared URLs within 'neo4j's network on Twitter.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
RETURN l.url AS URL, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the favorite tweeting tools of 'neo4j's followers?
","MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most popular tweeting tools among 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top platforms 'neo4j's followers use to tweet?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the favorite Twitter clients used by followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the most frequently used tweeting sources by 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the primary tweeting tools of 'neo4j's follower base.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the main platforms for tweeting among followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the most common tweeting tools among 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the preferred tweeting sources for 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the top tweeting platforms used by followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the leading tweeting tool providers for 'neo4j's followers?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the most utilized tweeting sources by 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the most favored tweeting tools of 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the tweeting platforms most used by followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the primary tools used by 'neo4j's followers for tweeting.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the most adopted tweeting sources among 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS SourceName, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50

"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which followers of 'neo4j' interact the most through replies?,"MATCH (follower:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (replyUser:User)-[:POSTS]->(reply:Tweet)-[:REPLY_TO]->(originalTweet:Tweet),
      (originalPoster:User)-[:POSTS]->(originalTweet)
WHERE originalPoster = follower
RETURN replyUser.screen_name AS ReplyUserScreenName, originalPoster.screen_name AS OriginalPosterScreenName, COUNT(reply) AS NumberOfReplies
ORDER BY NumberOfReplies DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the followers of 'neo4j' who reply the most to tweets.,"MATCH (follower:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (replyUser:User)-[:POSTS]->(reply:Tweet)-[:REPLY_TO]->(originalTweet:Tweet),
      (originalPoster:User)-[:POSTS]->(originalTweet)
WHERE originalPoster = follower
RETURN replyUser.screen_name AS ReplyUserScreenName, originalPoster.screen_name AS OriginalPosterScreenName, COUNT(reply) AS NumberOfReplies
ORDER BY NumberOfReplies DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the top repliers among 'neo4j's followers on Twitter?,"MATCH (follower:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (replyUser:User)-[:POSTS]->(reply:Tweet)-[:REPLY_TO]->(originalTweet:Tweet),
      (originalPoster:User)-[:POSTS]->(originalTweet)
WHERE originalPoster = follower
RETURN replyUser.screen_name AS ReplyUserScreenName, originalPoster.screen_name AS OriginalPosterScreenName, COUNT(reply) AS NumberOfReplies
ORDER BY NumberOfReplies DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover which of 'neo4j's followers are most engaged in replying.,"MATCH (follower:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (replyUser:User)-[:POSTS]->(reply:Tweet)-[:REPLY_TO]->(originalTweet:Tweet),
      (originalPoster:User)-[:POSTS]->(originalTweet)
WHERE originalPoster = follower
RETURN replyUser.screen_name AS ReplyUserScreenName, originalPoster.screen_name AS OriginalPosterScreenName, COUNT(reply) AS NumberOfReplies
ORDER BY NumberOfReplies DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the followers of 'neo4j' with the highest number of replies.,"MATCH (follower:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (replyUser:User)-[:POSTS]->(reply:Tweet)-[:REPLY_TO]->(originalTweet:Tweet),
      (originalPoster:User)-[:POSTS]->(originalTweet)
WHERE originalPoster = follower
RETURN replyUser.screen_name AS ReplyUserScreenName, originalPoster.screen_name AS OriginalPosterScreenName, COUNT(reply) AS NumberOfReplies
ORDER BY NumberOfReplies DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the most active repliers among followers of 'neo4j'.,"MATCH (follower:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (replyUser:User)-[:POSTS]->(reply:Tweet)-[:REPLY_TO]->(originalTweet:Tweet),
      (originalPoster:User)-[:POSTS]->(originalTweet)
WHERE originalPoster = follower
RETURN replyUser.screen_name AS ReplyUserScreenName, originalPoster.screen_name AS OriginalPosterScreenName, COUNT(reply) AS NumberOfReplies
ORDER BY NumberOfReplies DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the 'neo4j' followers who frequently interact through replies.,"MATCH (follower:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (replyUser:User)-[:POSTS]->(reply:Tweet)-[:REPLY_TO]->(originalTweet:Tweet),
      (originalPoster:User)-[:POSTS]->(originalTweet)
WHERE originalPoster = follower
RETURN replyUser.screen_name AS ReplyUserScreenName, originalPoster.screen_name AS OriginalPosterScreenName, COUNT(reply) AS NumberOfReplies
ORDER BY NumberOfReplies DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the most engaged followers of 'neo4j' in Twitter conversations.,"MATCH (follower:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (replyUser:User)-[:POSTS]->(reply:Tweet)-[:REPLY_TO]->(originalTweet:Tweet),
      (originalPoster:User)-[:POSTS]->(originalTweet)
WHERE originalPoster = follower
RETURN replyUser.screen_name AS ReplyUserScreenName, originalPoster.screen_name AS OriginalPosterScreenName, COUNT(reply) AS NumberOfReplies
ORDER BY NumberOfReplies DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the followers of 'neo4j' who interact the most via replies.,"MATCH (follower:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (replyUser:User)-[:POSTS]->(reply:Tweet)-[:REPLY_TO]->(originalTweet:Tweet),
      (originalPoster:User)-[:POSTS]->(originalTweet)
WHERE originalPoster = follower
RETURN replyUser.screen_name AS ReplyUserScreenName, originalPoster.screen_name AS OriginalPosterScreenName, COUNT(reply) AS NumberOfReplies
ORDER BY NumberOfReplies DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the top interacting followers of 'neo4j' based on reply activity.,"MATCH (follower:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (replyUser:User)-[:POSTS]->(reply:Tweet)-[:REPLY_TO]->(originalTweet:Tweet),
      (originalPoster:User)-[:POSTS]->(originalTweet)
WHERE originalPoster = follower
RETURN replyUser.screen_name AS ReplyUserScreenName, originalPoster.screen_name AS OriginalPosterScreenName, COUNT(reply) AS NumberOfReplies
ORDER BY NumberOfReplies DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who leads in replying to 'neo4j's tweets among their followers?,"MATCH (follower:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (replyUser:User)-[:POSTS]->(reply:Tweet)-[:REPLY_TO]->(originalTweet:Tweet),
      (originalPoster:User)-[:POSTS]->(originalTweet)
WHERE originalPoster = follower
RETURN replyUser.screen_name AS ReplyUserScreenName, originalPoster.screen_name AS OriginalPosterScreenName, COUNT(reply) AS NumberOfReplies
ORDER BY NumberOfReplies DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the followers of 'neo4j' who are highly active in replying.,"MATCH (follower:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (replyUser:User)-[:POSTS]->(reply:Tweet)-[:REPLY_TO]->(originalTweet:Tweet),
      (originalPoster:User)-[:POSTS]->(originalTweet)
WHERE originalPoster = follower
RETURN replyUser.screen_name AS ReplyUserScreenName, originalPoster.screen_name AS OriginalPosterScreenName, COUNT(reply) AS NumberOfReplies
ORDER BY NumberOfReplies DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint 'neo4j's followers with the most replies to their tweets.,"MATCH (follower:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (replyUser:User)-[:POSTS]->(reply:Tweet)-[:REPLY_TO]->(originalTweet:Tweet),
      (originalPoster:User)-[:POSTS]->(originalTweet)
WHERE originalPoster = follower
RETURN replyUser.screen_name AS ReplyUserScreenName, originalPoster.screen_name AS OriginalPosterScreenName, COUNT(reply) AS NumberOfReplies
ORDER BY NumberOfReplies DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the most responsive followers of 'neo4j' on Twitter.,"MATCH (follower:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (replyUser:User)-[:POSTS]->(reply:Tweet)-[:REPLY_TO]->(originalTweet:Tweet),
      (originalPoster:User)-[:POSTS]->(originalTweet)
WHERE originalPoster = follower
RETURN replyUser.screen_name AS ReplyUserScreenName, originalPoster.screen_name AS OriginalPosterScreenName, COUNT(reply) AS NumberOfReplies
ORDER BY NumberOfReplies DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the 'neo4j' followers most involved in tweet replies.,"MATCH (follower:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (replyUser:User)-[:POSTS]->(reply:Tweet)-[:REPLY_TO]->(originalTweet:Tweet),
      (originalPoster:User)-[:POSTS]->(originalTweet)
WHERE originalPoster = follower
RETURN replyUser.screen_name AS ReplyUserScreenName, originalPoster.screen_name AS OriginalPosterScreenName, COUNT(reply) AS NumberOfReplies
ORDER BY NumberOfReplies DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the followers of 'neo4j' who predominantly engage through replies.,"MATCH (follower:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (replyUser:User)-[:POSTS]->(reply:Tweet)-[:REPLY_TO]->(originalTweet:Tweet),
      (originalPoster:User)-[:POSTS]->(originalTweet)
WHERE originalPoster = follower
RETURN replyUser.screen_name AS ReplyUserScreenName, originalPoster.screen_name AS OriginalPosterScreenName, COUNT(reply) AS NumberOfReplies
ORDER BY NumberOfReplies DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What content is shared by mutual follows of 'neo4j'?
","MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (me)-[:FOLLOWS]->(u), (u)-[:POSTS]->(t:Tweet)
RETURN t.text AS Tweet, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most shared tweets among mutual followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (me)-[:FOLLOWS]->(u), (u)-[:POSTS]->(t:Tweet)
RETURN t.text AS Tweet, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top tweets circulated by users who mutually follow 'neo4j'?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (me)-[:FOLLOWS]->(u), (u)-[:POSTS]->(t:Tweet)
RETURN t.text AS Tweet, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the common content shared by 'neo4j's mutual followers.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (me)-[:FOLLOWS]->(u), (u)-[:POSTS]->(t:Tweet)
RETURN t.text AS Tweet, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the tweets most frequently posted by mutual followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (me)-[:FOLLOWS]->(u), (u)-[:POSTS]->(t:Tweet)
RETURN t.text AS Tweet, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the prevalent themes in tweets from mutual followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (me)-[:FOLLOWS]->(u), (u)-[:POSTS]->(t:Tweet)
RETURN t.text AS Tweet, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the key messages shared among 'neo4j's mutual follows.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (me)-[:FOLLOWS]->(u), (u)-[:POSTS]->(t:Tweet)
RETURN t.text AS Tweet, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the most popular tweets among mutual followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (me)-[:FOLLOWS]->(u), (u)-[:POSTS]->(t:Tweet)
RETURN t.text AS Tweet, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the content that mutual followers of 'neo4j' share the most.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (me)-[:FOLLOWS]->(u), (u)-[:POSTS]->(t:Tweet)
RETURN t.text AS Tweet, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the dominant tweets within the mutual follower network of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (me)-[:FOLLOWS]->(u), (u)-[:POSTS]->(t:Tweet)
RETURN t.text AS Tweet, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the most circulated content among 'neo4j's mutual follows.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (me)-[:FOLLOWS]->(u), (u)-[:POSTS]->(t:Tweet)
RETURN t.text AS Tweet, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the shared interests of 'neo4j's mutual followers through their tweets.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (me)-[:FOLLOWS]->(u), (u)-[:POSTS]->(t:Tweet)
RETURN t.text AS Tweet, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the top content themes among mutual followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (me)-[:FOLLOWS]->(u), (u)-[:POSTS]->(t:Tweet)
RETURN t.text AS Tweet, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the recurring tweets shared by mutual follows of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (me)-[:FOLLOWS]->(u), (u)-[:POSTS]->(t:Tweet)
RETURN t.text AS Tweet, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the main topics discussed by mutual followers of 'neo4j' on Twitter.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (me)-[:FOLLOWS]->(u), (u)-[:POSTS]->(t:Tweet)
RETURN t.text AS Tweet, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the tweets that unite the mutual followers of 'neo4j' in shared content.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}), (me)-[:FOLLOWS]->(u), (u)-[:POSTS]->(t:Tweet)
RETURN t.text AS Tweet, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which users followed by 'neo4j' tweet about 'graph databases' the most?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
WHERE t.text CONTAINS 'graph databases'
RETURN u.screen_name AS ScreenName, COUNT(t) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the top users followed by 'neo4j' who frequently tweet about 'graph databases'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
WHERE t.text CONTAINS 'graph databases'
RETURN u.screen_name AS ScreenName, COUNT(t) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the most active users in discussing 'graph databases' among those followed by 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
WHERE t.text CONTAINS 'graph databases'
RETURN u.screen_name AS ScreenName, COUNT(t) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the users followed by 'neo4j' with the highest number of tweets about 'graph databases'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
WHERE t.text CONTAINS 'graph databases'
RETURN u.screen_name AS ScreenName, COUNT(t) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover which users followed by 'neo4j' are the leading tweeters on 'graph databases'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
WHERE t.text CONTAINS 'graph databases'
RETURN u.screen_name AS ScreenName, COUNT(t) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the key influencers on 'graph databases' within 'neo4j's network.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
WHERE t.text CONTAINS 'graph databases'
RETURN u.screen_name AS ScreenName, COUNT(t) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the most vocal users about 'graph databases' among those followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
WHERE t.text CONTAINS 'graph databases'
RETURN u.screen_name AS ScreenName, COUNT(t) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the users followed by 'neo4j' who are most engaged with the topic of 'graph databases'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
WHERE t.text CONTAINS 'graph databases'
RETURN u.screen_name AS ScreenName, COUNT(t) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the 'graph databases' conversation leaders followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
WHERE t.text CONTAINS 'graph databases'
RETURN u.screen_name AS ScreenName, COUNT(t) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the top contributors to the 'graph databases' discussion among 'neo4j's follows.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
WHERE t.text CONTAINS 'graph databases'
RETURN u.screen_name AS ScreenName, COUNT(t) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who talks about 'graph databases' the most among users followed by 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
WHERE t.text CONTAINS 'graph databases'
RETURN u.screen_name AS ScreenName, COUNT(t) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the most frequent posters on 'graph databases' within 'neo4j's following list.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
WHERE t.text CONTAINS 'graph databases'
RETURN u.screen_name AS ScreenName, COUNT(t) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the users followed by 'neo4j' with a keen interest in 'graph databases'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
WHERE t.text CONTAINS 'graph databases'
RETURN u.screen_name AS ScreenName, COUNT(t) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the foremost tweeters on 'graph databases' followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
WHERE t.text CONTAINS 'graph databases'
RETURN u.screen_name AS ScreenName, COUNT(t) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the leading voices on 'graph databases' among 'neo4j's followed users.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
WHERE t.text CONTAINS 'graph databases'
RETURN u.screen_name AS ScreenName, COUNT(t) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the top users followed by 'neo4j' who often mention 'graph databases' in their tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
WHERE t.text CONTAINS 'graph databases'
RETURN u.screen_name AS ScreenName, COUNT(t) AS TweetCount
ORDER BY TweetCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are common interests between mutual followers of 'neo4j'?
","MATCH (u1:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})<-[:FOLLOWS]-(u2:User),
      (u1)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the top hashtags shared among mutual followers of 'neo4j'.,"MATCH (u1:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})<-[:FOLLOWS]-(u2:User),
      (u1)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What hashtags are most popular among 'neo4j's mutual followers?,"MATCH (u1:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})<-[:FOLLOWS]-(u2:User),
      (u1)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the common interests of 'neo4j's mutual followers through hashtags.,"MATCH (u1:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})<-[:FOLLOWS]-(u2:User),
      (u1)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the most frequently used hashtags by mutual followers of 'neo4j'.,"MATCH (u1:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})<-[:FOLLOWS]-(u2:User),
      (u1)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the shared interests among 'neo4j's mutual followers via hashtags.,"MATCH (u1:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})<-[:FOLLOWS]-(u2:User),
      (u1)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the key topics mutual followers of 'neo4j' are interested in.,"MATCH (u1:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})<-[:FOLLOWS]-(u2:User),
      (u1)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the most common hashtags among 'neo4j's mutual followers.,"MATCH (u1:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})<-[:FOLLOWS]-(u2:User),
      (u1)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the prevalent interests of mutual followers of 'neo4j' based on hashtags.,"MATCH (u1:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})<-[:FOLLOWS]-(u2:User),
      (u1)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the dominant hashtags within the mutual follower network of 'neo4j'.,"MATCH (u1:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})<-[:FOLLOWS]-(u2:User),
      (u1)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the shared hashtags that define the mutual followers of 'neo4j'.,"MATCH (u1:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})<-[:FOLLOWS]-(u2:User),
      (u1)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the common hashtags used by 'neo4j's mutual followers.,"MATCH (u1:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})<-[:FOLLOWS]-(u2:User),
      (u1)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the top interests of mutual followers of 'neo4j' as shown by hashtags.,"MATCH (u1:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})<-[:FOLLOWS]-(u2:User),
      (u1)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the recurring hashtags among mutual followers of 'neo4j'.,"MATCH (u1:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})<-[:FOLLOWS]-(u2:User),
      (u1)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the main interests shared by 'neo4j's mutual followers through hashtags.,"MATCH (u1:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})<-[:FOLLOWS]-(u2:User),
      (u1)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the hashtags that unite the mutual followers of 'neo4j' in common interests.,"MATCH (u1:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'})<-[:FOLLOWS]-(u2:User),
      (u1)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who interacts the most with 'neo4j' through mentions?,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS User, COUNT(t) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the top users who mention 'neo4j' most frequently in their tweets.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS User, COUNT(t) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the most active users in mentioning 'neo4j' on Twitter?,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS User, COUNT(t) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the users with the highest number of mentions of 'neo4j'.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS User, COUNT(t) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover which Twitter users interact with 'neo4j' the most via mentions.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS User, COUNT(t) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the leading users by mention count involving 'neo4j'.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS User, COUNT(t) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the Twitter accounts that most often mention 'neo4j'.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS User, COUNT(t) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the top interactors with 'neo4j' through Twitter mentions.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS User, COUNT(t) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the most frequent mentioners of 'neo4j' on Twitter.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS User, COUNT(t) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the users who have mentioned 'neo4j' the most in their tweets.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS User, COUNT(t) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who leads the interaction with 'neo4j' through mentions on Twitter?,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS User, COUNT(t) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the most engaged users with 'neo4j' via tweet mentions.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS User, COUNT(t) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the Twitter users most involved with 'neo4j' through mentions.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS User, COUNT(t) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the top Twitter users based on their mentions of 'neo4j'.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS User, COUNT(t) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the Twitter users most active in mentioning 'neo4j'.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS User, COUNT(t) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate who are the top mentioners of 'neo4j' on Twitter.,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:MENTIONS]->(me:Me {screen_name: 'neo4j'})
RETURN u.screen_name AS User, COUNT(t) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which followers of 'neo4j' share links about 'Neo4j'?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (u)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WHERE l.url CONTAINS 'neo4j'
RETURN u.screen_name AS User, COUNT(l) AS LinkCount
ORDER BY LinkCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify followers of 'neo4j' who frequently share links related to 'Neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (u)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WHERE l.url CONTAINS 'neo4j'
RETURN u.screen_name AS User, COUNT(l) AS LinkCount
ORDER BY LinkCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the top followers of 'neo4j' sharing 'Neo4j'-related links in their tweets?,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (u)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WHERE l.url CONTAINS 'neo4j'
RETURN u.screen_name AS User, COUNT(l) AS LinkCount
ORDER BY LinkCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the followers of 'neo4j' most active in posting links about 'Neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (u)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WHERE l.url CONTAINS 'neo4j'
RETURN u.screen_name AS User, COUNT(l) AS LinkCount
ORDER BY LinkCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover which of 'neo4j's followers often tweet links containing 'Neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (u)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WHERE l.url CONTAINS 'neo4j'
RETURN u.screen_name AS User, COUNT(l) AS LinkCount
ORDER BY LinkCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the 'neo4j' followers with the highest number of 'Neo4j' link shares.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (u)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WHERE l.url CONTAINS 'neo4j'
RETURN u.screen_name AS User, COUNT(l) AS LinkCount
ORDER BY LinkCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight followers of 'neo4j' who are key sharers of 'Neo4j' content links.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (u)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WHERE l.url CONTAINS 'neo4j'
RETURN u.screen_name AS User, COUNT(l) AS LinkCount
ORDER BY LinkCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze 'neo4j' followers that predominantly share links to 'Neo4j' resources.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (u)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WHERE l.url CONTAINS 'neo4j'
RETURN u.screen_name AS User, COUNT(l) AS LinkCount
ORDER BY LinkCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find out who among 'neo4j's followers are the main disseminators of 'Neo4j' links.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (u)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WHERE l.url CONTAINS 'neo4j'
RETURN u.screen_name AS User, COUNT(l) AS LinkCount
ORDER BY LinkCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the followers of 'neo4j' leading in sharing content about 'Neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (u)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WHERE l.url CONTAINS 'neo4j'
RETURN u.screen_name AS User, COUNT(l) AS LinkCount
ORDER BY LinkCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint 'neo4j' followers that frequently distribute links mentioning 'Neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (u)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WHERE l.url CONTAINS 'neo4j'
RETURN u.screen_name AS User, COUNT(l) AS LinkCount
ORDER BY LinkCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the followers of 'neo4j' most engaged in circulating 'Neo4j'-specific links.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (u)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WHERE l.url CONTAINS 'neo4j'
RETURN u.screen_name AS User, COUNT(l) AS LinkCount
ORDER BY LinkCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine 'neo4j' followers who prominently feature 'Neo4j' links in their posts.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (u)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WHERE l.url CONTAINS 'neo4j'
RETURN u.screen_name AS User, COUNT(l) AS LinkCount
ORDER BY LinkCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Profile the top 'neo4j' followers by their activity of sharing 'Neo4j'-related links.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (u)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WHERE l.url CONTAINS 'neo4j'
RETURN u.screen_name AS User, COUNT(l) AS LinkCount
ORDER BY LinkCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the 'neo4j' followers most dedicated to spreading links about 'Neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (u)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WHERE l.url CONTAINS 'neo4j'
RETURN u.screen_name AS User, COUNT(l) AS LinkCount
ORDER BY LinkCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the followers of 'neo4j' with the highest counts of shared 'Neo4j' links.,"MATCH (u:User)-[:FOLLOWS]->(me:Me {screen_name: 'neo4j'}),
      (u)-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WHERE l.url CONTAINS 'neo4j'
RETURN u.screen_name AS User, COUNT(l) AS LinkCount
ORDER BY LinkCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the favorite tweeting sources of users followed by 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User),
      (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the top tweeting sources used by individuals followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User),
      (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most popular platforms for tweeting among users followed by 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User),
      (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the primary tweeting sources of 'neo4j's followed users.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User),
      (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the favorite social media tools and apps used by those followed by 'neo4j' for tweeting.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User),
      (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the most commonly used tweeting platforms among 'neo4j's social circle.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User),
      (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the preferred tweeting sources among users followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User),
      (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the main platforms from which 'neo4j's followed users tweet.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User),
      (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the top tweeting sources based on usage by individuals 'neo4j' follows.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User),
      (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the most frequented tweeting platforms by users in 'neo4j's network.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User),
      (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the preferred sources for tweeting among 'neo4j's followed accounts.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User),
      (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the leading tweeting platforms used by those followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User),
      (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the dominant tweeting sources within the 'neo4j' community.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User),
      (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Assess the most popular tweeting platforms among users followed by 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User),
      (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Examine the favorite sources for tweets by 'neo4j's followed users.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User),
      (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the key platforms and sources for tweeting among the social network of 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User),
      (u)-[:POSTS]->(t:Tweet)-[:USING]->(s:Source)
RETURN s.name AS Source, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What domains does 'neo4j' share in tweets?
","MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WITH l.url AS URL
WITH apoc.text.regexGroups(URL, 'https?://(www\\.)?([^/]+)/.*') AS groups
RETURN groups[0][2] AS Domain, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most shared domains in 'neo4j's tweets based on included links.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WITH l.url AS URL
WITH apoc.text.regexGroups(URL, 'https?://(www\\.)?([^/]+)/.*') AS groups
RETURN groups[0][2] AS Domain, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top website domains 'neo4j' shares in their tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WITH l.url AS URL
WITH apoc.text.regexGroups(URL, 'https?://(www\\.)?([^/]+)/.*') AS groups
RETURN groups[0][2] AS Domain, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the frequent web domains featured in 'neo4j's tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WITH l.url AS URL
WITH apoc.text.regexGroups(URL, 'https?://(www\\.)?([^/]+)/.*') AS groups
RETURN groups[0][2] AS Domain, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the primary domains 'neo4j' links to in their Twitter posts.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WITH l.url AS URL
WITH apoc.text.regexGroups(URL, 'https?://(www\\.)?([^/]+)/.*') AS groups
RETURN groups[0][2] AS Domain, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which web domains does 'neo4j' frequently share in tweets?,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WITH l.url AS URL
WITH apoc.text.regexGroups(URL, 'https?://(www\\.)?([^/]+)/.*') AS groups
RETURN groups[0][2] AS Domain, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the main domains linked in 'neo4j's tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WITH l.url AS URL
WITH apoc.text.regexGroups(URL, 'https?://(www\\.)?([^/]+)/.*') AS groups
RETURN groups[0][2] AS Domain, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the most common website domains 'neo4j' shares on Twitter.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WITH l.url AS URL
WITH apoc.text.regexGroups(URL, 'https?://(www\\.)?([^/]+)/.*') AS groups
RETURN groups[0][2] AS Domain, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the prevalent web domains 'neo4j' tweets about.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WITH l.url AS URL
WITH apoc.text.regexGroups(URL, 'https?://(www\\.)?([^/]+)/.*') AS groups
RETURN groups[0][2] AS Domain, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the key domains 'neo4j' often links to in their tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WITH l.url AS URL
WITH apoc.text.regexGroups(URL, 'https?://(www\\.)?([^/]+)/.*') AS groups
RETURN groups[0][2] AS Domain, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the top web domains shared by 'neo4j' on Twitter.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WITH l.url AS URL
WITH apoc.text.regexGroups(URL, 'https?://(www\\.)?([^/]+)/.*') AS groups
RETURN groups[0][2] AS Domain, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore significant domains 'neo4j' references in their tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WITH l.url AS URL
WITH apoc.text.regexGroups(URL, 'https?://(www\\.)?([^/]+)/.*') AS groups
RETURN groups[0][2] AS Domain, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the most notable web domains shared in 'neo4j's tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WITH l.url AS URL
WITH apoc.text.regexGroups(URL, 'https?://(www\\.)?([^/]+)/.*') AS groups
RETURN groups[0][2] AS Domain, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the recurring domains 'neo4j' mentions in their Twitter posts.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WITH l.url AS URL
WITH apoc.text.regexGroups(URL, 'https?://(www\\.)?([^/]+)/.*') AS groups
RETURN groups[0][2] AS Domain, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find out the primary web domains 'neo4j' shares through tweets.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WITH l.url AS URL
WITH apoc.text.regexGroups(URL, 'https?://(www\\.)?([^/]+)/.*') AS groups
RETURN groups[0][2] AS Domain, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the dominant domains in the content 'neo4j' shares on Twitter.,"MATCH (me:Me {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:CONTAINS]->(l:Link)
WITH l.url AS URL
WITH apoc.text.regexGroups(URL, 'https?://(www\\.)?([^/]+)/.*') AS groups
RETURN groups[0][2] AS Domain, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the top hashtags in tech, news, and science tweeted by those 'neo4j' follows?","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WHERE h.name IN ['tech', 'news', 'science']
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify the most frequently used tech, news, and science hashtags by users followed by 'neo4j'.","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WHERE h.name IN ['tech', 'news', 'science']
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Explore the common hashtags within tech, news, and science domains among 'neo4j's network.","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WHERE h.name IN ['tech', 'news', 'science']
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Discover the predominant hashtags in the fields of tech, news, and science by 'neo4j's followed users.","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WHERE h.name IN ['tech', 'news', 'science']
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Analyze the favorite hashtags related to tech, news, and science among the 'neo4j' community.","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WHERE h.name IN ['tech', 'news', 'science']
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Determine the leading tech, news, and science topics in hashtags by users 'neo4j' follows.","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WHERE h.name IN ['tech', 'news', 'science']
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Highlight the key hashtags in tech, news, and science used by individuals followed by 'neo4j'.","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WHERE h.name IN ['tech', 'news', 'science']
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Catalog the most notable hashtags from tech, news, and science among 'neo4j's follows.","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WHERE h.name IN ['tech', 'news', 'science']
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Uncover the top-ranked hashtags in tech, news, and science by 'neo4j's social circle.","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WHERE h.name IN ['tech', 'news', 'science']
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Investigate the most common tech, news, and science hashtags among users followed by 'neo4j'.","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WHERE h.name IN ['tech', 'news', 'science']
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Pinpoint the core hashtags around tech, news, and science in 'neo4j's followed list.","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WHERE h.name IN ['tech', 'news', 'science']
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Reveal the most mentioned tech, news, and science hashtags by 'neo4j's network.","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WHERE h.name IN ['tech', 'news', 'science']
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Assess the popular hashtags within tech, news, and science tweeted by 'neo4j's follows.","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WHERE h.name IN ['tech', 'news', 'science']
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","List the dominant hashtags in tech, news, and science among those followed by 'neo4j'.","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WHERE h.name IN ['tech', 'news', 'science']
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify the hashtags around tech, news, and science that captivate 'neo4j's followed users.","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WHERE h.name IN ['tech', 'news', 'science']
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Examine the most utilized hashtags in the realms of tech, news, and science by users 'neo4j' follows.","MATCH (me:Me {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WHERE h.name IN ['tech', 'news', 'science']
RETURN h.name AS Hashtag, COUNT(*) AS Count
ORDER BY Count DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Based on hashtags, what content domains are most discussed in mentions and replies involving 'neo4j'?","MATCH (me:Me {screen_name: 'neo4j'})<-[:MENTIONS]-(t:Tweet), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Domain, COUNT(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most discussed content domains in mentions and replies involving 'neo4j' based on hashtag usage.,"MATCH (me:Me {screen_name: 'neo4j'})<-[:MENTIONS]-(t:Tweet), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Domain, COUNT(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the top content areas in tweets mentioning 'neo4j', as indicated by hashtags?","MATCH (me:Me {screen_name: 'neo4j'})<-[:MENTIONS]-(t:Tweet), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Domain, COUNT(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","List the most frequently mentioned domains in tweets involving 'neo4j', focusing on hashtags.","MATCH (me:Me {screen_name: 'neo4j'})<-[:MENTIONS]-(t:Tweet), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Domain, COUNT(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the primary content domains in mentions and replies to 'neo4j' through hashtag analysis.,"MATCH (me:Me {screen_name: 'neo4j'})<-[:MENTIONS]-(t:Tweet), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Domain, COUNT(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which content domains dominate the conversation in mentions and replies related to 'neo4j'?,"MATCH (me:Me {screen_name: 'neo4j'})<-[:MENTIONS]-(t:Tweet), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Domain, COUNT(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Uncover the leading topics in the 'neo4j' discussion space, as revealed by hashtag trends.","MATCH (me:Me {screen_name: 'neo4j'})<-[:MENTIONS]-(t:Tweet), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Domain, COUNT(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the content domains most often tagged in conversations mentioning 'neo4j'.,"MATCH (me:Me {screen_name: 'neo4j'})<-[:MENTIONS]-(t:Tweet), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Domain, COUNT(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Analyze the prevalent content areas in tweets mentioning 'neo4j', determined by hashtags.","MATCH (me:Me {screen_name: 'neo4j'})<-[:MENTIONS]-(t:Tweet), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Domain, COUNT(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the key content domains associated with 'neo4j' in Twitter mentions and replies.,"MATCH (me:Me {screen_name: 'neo4j'})<-[:MENTIONS]-(t:Tweet), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Domain, COUNT(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the top hashtags indicating the most talked-about domains in the 'neo4j' community.,"MATCH (me:Me {screen_name: 'neo4j'})<-[:MENTIONS]-(t:Tweet), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Domain, COUNT(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Explore significant content themes in the 'neo4j' conversation landscape, using hashtags as indicators.","MATCH (me:Me {screen_name: 'neo4j'})<-[:MENTIONS]-(t:Tweet), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Domain, COUNT(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Pinpoint the most notable content domains discussed in association with 'neo4j', via hashtag tracking.","MATCH (me:Me {screen_name: 'neo4j'})<-[:MENTIONS]-(t:Tweet), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Domain, COUNT(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Catalog the recurring content areas in 'neo4j'-related mentions and replies, based on hashtags.","MATCH (me:Me {screen_name: 'neo4j'})<-[:MENTIONS]-(t:Tweet), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Domain, COUNT(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Find out the primary discussion domains in tweets involving 'neo4j', highlighted by hashtags.","MATCH (me:Me {screen_name: 'neo4j'})<-[:MENTIONS]-(t:Tweet), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Domain, COUNT(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Investigate the dominant content themes in the dialogue around 'neo4j', as signified by hashtag usage.","MATCH (me:Me {screen_name: 'neo4j'})<-[:MENTIONS]-(t:Tweet), (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Domain, COUNT(*) AS MentionCount
ORDER BY MentionCount DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What words does neo4j frequently use in their tweets?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via""
]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most frequently used words in 'neo4j's tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via""
]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the common words that 'neo4j' often uses in their Twitter posts?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via""
]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the top words found in 'neo4j's tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via""
]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the primary vocabulary 'neo4j' uses in their tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via""
]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which words recur in 'neo4j's Twitter communications?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via""
]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the main words 'neo4j' frequently tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via""
]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the most used words in tweets by 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via""
]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the prevalent vocabulary in 'neo4j's tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via""
]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the key words 'neo4j' prefers in their Twitter posts.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via""
]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the top words tweeted by 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via""
]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore significant words found in 'neo4j's tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via""
]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the most notable words 'neo4j' uses on Twitter.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via""
]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the recurring words in 'neo4j's Twitter feed.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via""
]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find out the primary words used by 'neo4j' in their tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via""
]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the dominant words mentioned by 'neo4j' on Twitter.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via""
]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What hashtags do followers of 'neo4j' commonly use in their tweets?,"MATCH (u:User)-[:FOLLOWS]->(me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the top hashtags used by followers of 'neo4j' in their tweets.,"MATCH (u:User)-[:FOLLOWS]->(me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most popular hashtags among 'neo4j' followers on Twitter?,"MATCH (u:User)-[:FOLLOWS]->(me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the frequently used hashtags in tweets by users following 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the primary hashtags tweeted by followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which hashtags are most common in the tweets of 'neo4j's followers?,"MATCH (u:User)-[:FOLLOWS]->(me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the main hashtags that followers of 'neo4j' use in their tweets.,"MATCH (u:User)-[:FOLLOWS]->(me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the most popular hashtags among tweets from 'neo4j' followers.,"MATCH (u:User)-[:FOLLOWS]->(me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the prevalent hashtags used by individuals following 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the key hashtags favored by 'neo4j's followers in their tweets.,"MATCH (u:User)-[:FOLLOWS]->(me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the top hashtags tweeted by users who follow 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore significant hashtags found in tweets from 'neo4j's followers.,"MATCH (u:User)-[:FOLLOWS]->(me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the most notable hashtags used by followers of 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the recurring hashtags in tweets by users following 'neo4j'.,"MATCH (u:User)-[:FOLLOWS]->(me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find out the primary hashtags used in the tweets of 'neo4j' followers.,"MATCH (u:User)-[:FOLLOWS]->(me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the dominant hashtags mentioned by 'neo4j's followers on Twitter.,"MATCH (u:User)-[:FOLLOWS]->(me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What topics are common in replies to 'neo4j's tweets?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most discussed topics in replies to 'neo4j's tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the frequent themes in responses to tweets by 'neo4j'?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the common subjects mentioned in tweets replying to 'neo4j'.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the primary topics in replies to 'neo4j's Twitter posts.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which topics recur in responses to tweets from 'neo4j'?,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the main themes in replies to 'neo4j's tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the most mentioned topics in tweets responding to 'neo4j'.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the prevalent topics in replies to 'neo4j's Twitter messages.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the key subjects discussed in responses to tweets by 'neo4j'.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the top topics in tweets replying to 'neo4j'.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore significant themes found in replies to 'neo4j's tweets.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the most notable topics discussed in responses to 'neo4j'.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the recurring subjects in tweets replying to 'neo4j'.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find out the primary discussion points in replies to tweets from 'neo4j'.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Investigate the dominant topics mentioned in replies to 'neo4j's Twitter activity.,"MATCH (me:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What words are used in replies to 'neo4j's' tweets?,"MATCH (r:Tweet)-[:REPLY_TO]->(t:Tweet)<-[:POSTS]-(u:User {screen_name: 'neo4j'})
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the vocabulary used in responses to 'neo4j's tweets.,"MATCH (r:Tweet)-[:REPLY_TO]->(t:Tweet)<-[:POSTS]-(u:User {screen_name: 'neo4j'})
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List common words found in replies to 'neo4j's Twitter posts.,"MATCH (r:Tweet)-[:REPLY_TO]->(t:Tweet)<-[:POSTS]-(u:User {screen_name: 'neo4j'})
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the frequent terms in tweets replying to 'neo4j'.,"MATCH (r:Tweet)-[:REPLY_TO]->(t:Tweet)<-[:POSTS]-(u:User {screen_name: 'neo4j'})
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the prevalent words in responses to tweets by 'neo4j'?,"MATCH (r:Tweet)-[:REPLY_TO]->(t:Tweet)<-[:POSTS]-(u:User {screen_name: 'neo4j'})
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the most used terms in replies to 'neo4j's tweets.,"MATCH (r:Tweet)-[:REPLY_TO]->(t:Tweet)<-[:POSTS]-(u:User {screen_name: 'neo4j'})
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the vocabulary in tweets replying to 'neo4j'.,"MATCH (r:Tweet)-[:REPLY_TO]->(t:Tweet)<-[:POSTS]-(u:User {screen_name: 'neo4j'})
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find out the key words used in responses to 'neo4j' on Twitter.,"MATCH (r:Tweet)-[:REPLY_TO]->(t:Tweet)<-[:POSTS]-(u:User {screen_name: 'neo4j'})
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the major terms in tweets that reply to 'neo4j'.,"MATCH (r:Tweet)-[:REPLY_TO]->(t:Tweet)<-[:POSTS]-(u:User {screen_name: 'neo4j'})
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the words commonly used in replies to 'neo4j's tweets.,"MATCH (r:Tweet)-[:REPLY_TO]->(t:Tweet)<-[:POSTS]-(u:User {screen_name: 'neo4j'})
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the most repeated words in tweets responding to 'neo4j'.,"MATCH (r:Tweet)-[:REPLY_TO]->(t:Tweet)<-[:POSTS]-(u:User {screen_name: 'neo4j'})
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the top words in tweets that reply to 'neo4j'.,"MATCH (r:Tweet)-[:REPLY_TO]->(t:Tweet)<-[:POSTS]-(u:User {screen_name: 'neo4j'})
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the frequent vocabulary in responses to 'neo4j's tweets.,"MATCH (r:Tweet)-[:REPLY_TO]->(t:Tweet)<-[:POSTS]-(u:User {screen_name: 'neo4j'})
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the leading words used in tweets replying to 'neo4j'.,"MATCH (r:Tweet)-[:REPLY_TO]->(t:Tweet)<-[:POSTS]-(u:User {screen_name: 'neo4j'})
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the core terms found in replies to tweets by 'neo4j'.,"MATCH (r:Tweet)-[:REPLY_TO]->(t:Tweet)<-[:POSTS]-(u:User {screen_name: 'neo4j'})
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What terms frequently appear in tweets replying to 'neo4j'?,"MATCH (r:Tweet)-[:REPLY_TO]->(t:Tweet)<-[:POSTS]-(u:User {screen_name: 'neo4j'})
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most common hashtags in neo4j's tweets?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the top hashtags used by 'neo4j' in their tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the most frequent hashtags in tweets posted by 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the predominant hashtags in 'neo4j's Twitter posts?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the most popular hashtags used by 'neo4j' on Twitter.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the hashtags most commonly used in 'neo4j's tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the top hashtags found in 'neo4j's Twitter activity.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the most used hashtags by 'neo4j' in their Twitter feed.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the leading hashtags in tweets from 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the key hashtags 'neo4j' frequently uses in their tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find out which hashtags are most popular in 'neo4j's tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the top 50 hashtags used by 'neo4j' on Twitter.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the hashtags that 'neo4j' often includes in tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What hashtags does 'neo4j' frequently tag in their Twitter posts?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the most mentioned hashtags by 'neo4j' in their tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the hashtags that appear most in 'neo4j's Twitter communications.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most common words in replies to 'neo4j's tweets?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the key words used in tweets replying to 'neo4j'?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most repeated words in replies to tweets by 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the top vocabulary in responses to 'neo4j's tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Discover the primary words used in tweets that reply to 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What vocabulary features prominently in replies to 'neo4j' on Twitter?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Uncover the most common terms in tweets replying to 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Highlight the frequently mentioned words in responses to 'neo4j's tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Analyze the predominant words used in replies to tweets from 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What terms are often repeated in replies to 'neo4j's Twitter posts?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Reveal the most used words in tweets responding to 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine the leading words in replies to 'neo4j' on Twitter.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore the significant terms used in responses to 'neo4j's tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Pinpoint the most notable words in tweets replying to 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find the key expressions within tweets replying to 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Catalog the most frequently used vocabulary in tweets that respond to 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO]-(r:Tweet)
UNWIND split(r.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What topics are frequently mentioned in tweets by users that 'neo4j' follows?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify the top topics discussed in tweets by users followed by 'neo4j', excluding common English stopwords.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the most frequently mentioned topics in tweets from users 'neo4j' follows, minus typical stopwords?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","List the dominant topics found in the tweets of users followed by 'neo4j', ignoring standard English fillers.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Determine the key topics in tweets by those 'neo4j' follows, sidelining basic conversational words.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Discover the primary subjects mentioned in tweets by users 'neo4j' follows, excluding ordinary vocabulary.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Uncover the most talked-about topics in tweets from users followed by 'neo4j', avoiding regular language terms.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Highlight the major themes in tweets by individuals 'neo4j' follows, not including widespread stopwords.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Analyze the prevalent topics in tweets from users 'neo4j' follows, excluding common English words.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What topics stand out in tweets by users followed by 'neo4j', after filtering out standard stopwords?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Reveal the most common themes in tweets by those 'neo4j' follows, ignoring the usual linguistic fillers.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Catalog the leading topics from tweets by users 'neo4j' follows, setting aside generic words.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify standout topics in tweets from individuals 'neo4j' follows, excluding common English stopwords.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Explore significant subjects mentioned in tweets by users 'neo4j' follows, omitting ordinary words.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Pinpoint the most notable topics in tweets from those 'neo4j' follows, avoiding universally common words.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Find the key discussions within tweets by users followed by 'neo4j', avoiding a list of typical English stopwords.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(u:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What keywords are used in tweets mentioning 'neo4j'?,"MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'neo4j'})
UNWIND split(t.text, ' ') AS keyword
WITH keyword, COUNT(*) AS frequency
WHERE NOT toLower(keyword) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN keyword, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify the most commonly used keywords in tweets that mention 'neo4j', excluding typical stopwords.","MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'neo4j'})
UNWIND split(t.text, ' ') AS keyword
WITH keyword, COUNT(*) AS frequency
WHERE NOT toLower(keyword) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN keyword, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the predominant keywords in tweets tagging 'neo4j', ignoring common English words?","MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'neo4j'})
UNWIND split(t.text, ' ') AS keyword
WITH keyword, COUNT(*) AS frequency
WHERE NOT toLower(keyword) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN keyword, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","List the top keywords found in tweets mentioning 'neo4j', minus the usual English stopwords.","MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'neo4j'})
UNWIND split(t.text, ' ') AS keyword
WITH keyword, COUNT(*) AS frequency
WHERE NOT toLower(keyword) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN keyword, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Determine the frequently used keywords in tweets that mention 'neo4j', excluding standard filler words.","MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'neo4j'})
UNWIND split(t.text, ' ') AS keyword
WITH keyword, COUNT(*) AS frequency
WHERE NOT toLower(keyword) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN keyword, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Discover the primary keywords in tweets tagging 'neo4j', sidelining common conversational words.","MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'neo4j'})
UNWIND split(t.text, ' ') AS keyword
WITH keyword, COUNT(*) AS frequency
WHERE NOT toLower(keyword) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN keyword, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Uncover the most repeated keywords in tweets mentioning 'neo4j', avoiding basic English vocabulary.","MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'neo4j'})
UNWIND split(t.text, ' ') AS keyword
WITH keyword, COUNT(*) AS frequency
WHERE NOT toLower(keyword) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN keyword, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Highlight the key terms used in tweets that mention 'neo4j', not including widespread stopwords.","MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'neo4j'})
UNWIND split(t.text, ' ') AS keyword
WITH keyword, COUNT(*) AS frequency
WHERE NOT toLower(keyword) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN keyword, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Analyze the popular keywords in tweets tagging 'neo4j', excluding routine language terms.","MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'neo4j'})
UNWIND split(t.text, ' ') AS keyword
WITH keyword, COUNT(*) AS frequency
WHERE NOT toLower(keyword) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN keyword, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What keywords stand out in tweets mentioning 'neo4j', after filtering out common English words?","MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'neo4j'})
UNWIND split(t.text, ' ') AS keyword
WITH keyword, COUNT(*) AS frequency
WHERE NOT toLower(keyword) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN keyword, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Reveal the frequently mentioned keywords in tweets about 'neo4j', ignoring the usual linguistic fillers.","MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'neo4j'})
UNWIND split(t.text, ' ') AS keyword
WITH keyword, COUNT(*) AS frequency
WHERE NOT toLower(keyword) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN keyword, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Catalog the leading keywords from tweets mentioning 'neo4j', setting aside generic words.","MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'neo4j'})
UNWIND split(t.text, ' ') AS keyword
WITH keyword, COUNT(*) AS frequency
WHERE NOT toLower(keyword) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN keyword, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify standout keywords in tweets that reference 'neo4j', excluding common stopwords.","MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'neo4j'})
UNWIND split(t.text, ' ') AS keyword
WITH keyword, COUNT(*) AS frequency
WHERE NOT toLower(keyword) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN keyword, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Explore the significant keywords used in discussions mentioning 'neo4j', omitting ordinary English words.","MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'neo4j'})
UNWIND split(t.text, ' ') AS keyword
WITH keyword, COUNT(*) AS frequency
WHERE NOT toLower(keyword) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN keyword, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Pinpoint the most notable keywords in tweets tagging 'neo4j', excluding universally common words.","MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'neo4j'})
UNWIND split(t.text, ' ') AS keyword
WITH keyword, COUNT(*) AS frequency
WHERE NOT toLower(keyword) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN keyword, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Find the key expressions within tweets mentioning 'neo4j', avoiding the list of typical English stopwords.","MATCH (t:Tweet)-[:MENTIONS]->(u:User {screen_name: 'neo4j'})
UNWIND split(t.text, ' ') AS keyword
WITH keyword, COUNT(*) AS frequency
WHERE NOT toLower(keyword) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN keyword, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the popular words used by users in their tweets who mention 'graphdb'?,"MATCH (u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag {name: 'graphdb'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify the most commonly used words in tweets tagging 'graphdb', excluding general English stopwords.","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag {name: 'graphdb'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What keywords do users frequently use in tweets that include the hashtag 'graphdb', aside from common words?","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag {name: 'graphdb'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Discover the top words in tweets mentioning 'graphdb', removing typical conversational fillers.","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag {name: 'graphdb'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","List the primary words tweeted by users who tag 'graphdb', excluding ordinary English language words.","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag {name: 'graphdb'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which words are most used by Twitter users in posts tagging 'graphdb', not counting standard stopwords?","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag {name: 'graphdb'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Analyze popular vocabulary in tweets with the 'graphdb' hashtag, excluding generic language terms.","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag {name: 'graphdb'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Determine the key terms employed in tweets that mention 'graphdb', aside from widespread English words.","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag {name: 'graphdb'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Reveal the frequently used words in tweets tagging 'graphdb', discounting usual English vocabulary.","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag {name: 'graphdb'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Uncover the common words in tweets with 'graphdb' hashtag, not including regular conversational words.","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag {name: 'graphdb'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Find out the most repeated expressions in tweets mentioning 'graphdb', avoiding common English phrases.","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag {name: 'graphdb'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Highlight the main words used in tweets that tag 'graphdb', not accounting for common English stopwords.","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag {name: 'graphdb'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Catalog the frequently used vocabulary in tweets mentioning 'graphdb', sidelining the regular English lexicon.","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag {name: 'graphdb'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What vocabulary is prominently used in tweets with 'graphdb', excluding typical stop words?","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag {name: 'graphdb'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify prevalent words in tweets that include 'graphdb', ignoring everyday English words.","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag {name: 'graphdb'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Examine the top expressions used by users in 'graphdb' tagged tweets, excluding ordinary language terms.","MATCH (u:User)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag {name: 'graphdb'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What common words does 'neo4j' use in tweets posted from 'Twitter Web App'?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source {name: 'Twitter Web App'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify the most common words used by 'neo4j' in tweets from the 'Twitter Web App', excluding typical English stopwords.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source {name: 'Twitter Web App'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the frequent words in 'neo4j's tweets via 'Twitter Web App', ignoring common language words?","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source {name: 'Twitter Web App'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","List the top words 'neo4j' uses on Twitter Web App, minus the usual English fillers.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source {name: 'Twitter Web App'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Discover the primary words in tweets by 'neo4j' from the 'Twitter Web App', excluding basic conversational words.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source {name: 'Twitter Web App'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which words does 'neo4j' frequently use in their 'Twitter Web App' tweets, not counting standard stopwords?","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source {name: 'Twitter Web App'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Analyze 'neo4j's Twitter Web App tweets for commonly used words, removing generic language terms.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source {name: 'Twitter Web App'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What vocabulary is most used by 'neo4j' in tweets sent using 'Twitter Web App', aside from ordinary English words?","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source {name: 'Twitter Web App'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Determine the key terms 'neo4j' employs in 'Twitter Web App' tweets, excluding widespread English words.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source {name: 'Twitter Web App'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Reveal the most repeated words by 'neo4j' in tweets via 'Twitter Web App', discounting the usual English vocabulary.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source {name: 'Twitter Web App'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Find out the top expressions 'neo4j' uses on 'Twitter Web App', avoiding common English phrases.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source {name: 'Twitter Web App'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify frequent terms in 'neo4j's 'Twitter Web App' tweets, not including typical stop words.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source {name: 'Twitter Web App'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the often-repeated words in 'neo4j's 'Twitter Web App' tweets, ignoring everyday English words?","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source {name: 'Twitter Web App'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Uncover the common words 'neo4j' tweets with 'Twitter Web App', excluding routine language words.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source {name: 'Twitter Web App'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Highlight the main words used by 'neo4j' from 'Twitter Web App', not accounting for common English stopwords.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source {name: 'Twitter Web App'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Catalog the frequently used words in 'neo4j's 'Twitter Web App' tweets, sidelining the regular English lexicon.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:USING]->(s:Source {name: 'Twitter Web App'})
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most frequent words in tweets where 'neo4j' mentions another user?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(other:User)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify the most frequent specific words in 'neo4j's tweets that mention another user, ignoring common English stopwords.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(other:User)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the top words 'neo4j' uses when mentioning others in tweets, excluding typical English language fillers?","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(other:User)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","List the primary words in tweets by 'neo4j' that mention another user, removing common stopwords from consideration.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(other:User)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Determine the most commonly used words in 'neo4j's mentions of other users, excluding universally common words.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(other:User)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Discover the frequent specific terms 'neo4j' uses in tweets mentioning others, ignoring routine English vocabulary.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(other:User)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What specific vocabulary does 'neo4j' frequently use in tweets that mention another user, aside from standard stopwords?","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(other:User)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Analyze 'neo4j's tweets for commonly used words in mentions of other users, filtering out general English stopwords.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(other:User)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Reveal the predominant words in 'neo4j's user-mentioning tweets, excluding basic English language words.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(other:User)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify frequent terms in 'neo4j's tweets where another user is mentioned, omitting commonly used English words.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(other:User)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the characteristic words 'neo4j' uses in tweets mentioning other users, disregarding common language words?","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(other:User)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Uncover the most used specific words by 'neo4j' in mentioning tweets, avoiding standard English stopwords.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(other:User)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","List the primary terms 'neo4j' employs in tweets that mention another user, excluding commonly used stopwords.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(other:User)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Determine the key words from 'neo4j's tweets mentioning other users, excluding typical stopwords from the analysis.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(other:User)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Discover which words are most frequently used by 'neo4j' in tweets mentioning other users, excluding standard English stopwords.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(other:User)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What distinct words does 'neo4j' use when mentioning other users in tweets, ignoring universally common vocabulary?","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(other:User)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What topics does 'neo4j' most frequently discuss in replies to 'graphguru'?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:REPLY_TO]->(replyTo:Tweet)<-[:POSTS]-(guru:User {screen_name: 'graphguru'})
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the main topics discussed by 'neo4j' when replying to 'graphguru', excluding common words and phrases?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:REPLY_TO]->(replyTo:Tweet)<-[:POSTS]-(guru:User {screen_name: 'graphguru'})
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify the frequently used words in 'neo4j's replies to 'graphguru', removing usual stopwords from the count.","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:REPLY_TO]->(replyTo:Tweet)<-[:POSTS]-(guru:User {screen_name: 'graphguru'})
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","List the top topics 'neo4j' talks about in their responses to 'graphguru', ignoring the most common English words.","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:REPLY_TO]->(replyTo:Tweet)<-[:POSTS]-(guru:User {screen_name: 'graphguru'})
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you determine the most common subjects addressed by 'neo4j' in tweets replying to 'graphguru', excluding basic vocabulary?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:REPLY_TO]->(replyTo:Tweet)<-[:POSTS]-(guru:User {screen_name: 'graphguru'})
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Show the keywords 'neo4j' uses most often in replies to 'graphguru', without considering standard filler words.","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:REPLY_TO]->(replyTo:Tweet)<-[:POSTS]-(guru:User {screen_name: 'graphguru'})
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What specific topics does 'neo4j' focus on when replying to 'graphguru', after filtering out the usual language filler?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:REPLY_TO]->(replyTo:Tweet)<-[:POSTS]-(guru:User {screen_name: 'graphguru'})
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Reveal the predominant themes in 'neo4j's replies to 'graphguru', leaving out the most common conversational words.","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:REPLY_TO]->(replyTo:Tweet)<-[:POSTS]-(guru:User {screen_name: 'graphguru'})
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Analyze 'neo4j's replies to 'graphguru' to find the top subjects discussed, excluding a list of typical English stopwords.","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:REPLY_TO]->(replyTo:Tweet)<-[:POSTS]-(guru:User {screen_name: 'graphguru'})
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are 'neo4j's most mentioned topics in replies to 'graphguru', excluding words that are commonly used in everyday language?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:REPLY_TO]->(replyTo:Tweet)<-[:POSTS]-(guru:User {screen_name: 'graphguru'})
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify the primary topics of conversation between 'neo4j' and 'graphguru' in Twitter replies, removing all generic words from the analysis.","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:REPLY_TO]->(replyTo:Tweet)<-[:POSTS]-(guru:User {screen_name: 'graphguru'})
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","List the most frequent topics 'neo4j' discusses in replies to 'graphguru', ignoring words that do not contribute to specific subjects.","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:REPLY_TO]->(replyTo:Tweet)<-[:POSTS]-(guru:User {screen_name: 'graphguru'})
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Determine the key focus areas of 'neo4j' in their replies to 'graphguru', excluding prepositions, conjunctions, and common adverbs.","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:REPLY_TO]->(replyTo:Tweet)<-[:POSTS]-(guru:User {screen_name: 'graphguru'})
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What subjects does 'neo4j' frequently mention in their replies to 'graphguru', after filtering out nonspecific language terms?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:REPLY_TO]->(replyTo:Tweet)<-[:POSTS]-(guru:User {screen_name: 'graphguru'})
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Analyze the content of 'neo4j's replies to 'graphguru' for common themes, discounting the use of everyday nonspecific words.","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:REPLY_TO]->(replyTo:Tweet)<-[:POSTS]-(guru:User {screen_name: 'graphguru'})
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Discover the primary discussion points of 'neo4j' in tweets replying to 'graphguru', omitting words with high usage in general conversation.","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:REPLY_TO]->(replyTo:Tweet)<-[:POSTS]-(guru:User {screen_name: 'graphguru'})
UNWIND split(t.text, ' ') AS topic
WITH topic, COUNT(*) AS frequency
WHERE NOT toLower(topic) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the most common topics in tweets retweeted by 'neo4j', based on hashtags?","MATCH (u:User {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS topic, COUNT(*) AS frequency
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show me the fifty most discussed topics in 'neo4j's retweets?,"MATCH (u:User {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS topic, COUNT(*) AS frequency
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the top 50 recurrent topics in the retweets of 'neo4j', based on hashtags?","MATCH (u:User {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS topic, COUNT(*) AS frequency
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Show me the most popular topics in tweets retweeted by 'neo4j', based on the frequency of hashtags.","MATCH (u:User {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS topic, COUNT(*) AS frequency
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the fifty most commonly tagged topics in the tweets that 'neo4j' retweets?,"MATCH (u:User {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS topic, COUNT(*) AS frequency
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I'd like to see the major topics in tweets that 'neo4j' retweets, determined by hashtag usage.","MATCH (u:User {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS topic, COUNT(*) AS frequency
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Provide the 50 most frequent topics in 'neo4j's retweeted posts, indicated by hashtags.","MATCH (u:User {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS topic, COUNT(*) AS frequency
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which topics are most frequently mentioned in the tweets that 'neo4j' retweets?,"MATCH (u:User {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS topic, COUNT(*) AS frequency
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the common topics handled in the tweets retweeted by 'neo4j', based on hashtags?","MATCH (u:User {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS topic, COUNT(*) AS frequency
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you identify the top fifty subjects in tweets retweeted by 'neo4j', considering the hashtags?","MATCH (u:User {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS topic, COUNT(*) AS frequency
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display the most common themes in the tweets that 'neo4j' retweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS topic, COUNT(*) AS frequency
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Please list the top 50 most discussed topics in 'neo4j's retweets, based on hashtags.","MATCH (u:User {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS topic, COUNT(*) AS frequency
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show the frequently tagged topics in the retweets of 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS topic, COUNT(*) AS frequency
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the fifty most frequent hashtags in 'neo4j's retweets indicating popular topics?,"MATCH (u:User {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS topic, COUNT(*) AS frequency
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show the most common topics of 'neo4j's retweeted posts based on hashtag frequency?,"MATCH (u:User {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS topic, COUNT(*) AS frequency
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Please identify the fifty most frequent themes in the tweets that 'neo4j' retweets, according to hashtags.","MATCH (u:User {screen_name: 'neo4j'})-[:RETWEETS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
WITH h.name AS topic, COUNT(*) AS frequency
RETURN topic, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What hashtags are commonly used in conversations between 'neo4j' and 'graphguru'?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(guru:User {screen_name: 'graphguru'}),
      (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top 50 hashtags used in conversations between Neo4j and GraphGuru?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(guru:User {screen_name: 'graphguru'}),
      (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the most common hashtags used in the interactions between Neo4j and GraphGuru.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(guru:User {screen_name: 'graphguru'}),
      (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you list the frequently used hashtags when Neo4j and GraphGuru communicate?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(guru:User {screen_name: 'graphguru'}),
      (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like to see the top 50 most popular hashtags in conversations between Neo4j and GraphGuru.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(guru:User {screen_name: 'graphguru'}),
      (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Please provide the commonly used hashtags in discussions between Neo4j and GraphGuru.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(guru:User {screen_name: 'graphguru'}),
      (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which hashtags are frequently mentioned in the interaction between Neo4j and GraphGuru?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(guru:User {screen_name: 'graphguru'}),
      (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show me the 50 most frequently used hashtags in the tweets between Neo4j and GraphGuru?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(guru:User {screen_name: 'graphguru'}),
      (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the common hashtags used by Neo4j and GraphGuru in their conversations.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(guru:User {screen_name: 'graphguru'}),
      (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What hashtags do Neo4j and GraphGuru use most frequently in their discussions?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(guru:User {screen_name: 'graphguru'}),
      (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display the 50 most common hashtags appearing in the tweets between Neo4j and GraphGuru.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(guru:User {screen_name: 'graphguru'}),
      (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the hashtags frequently used in the conversation between Neo4j and GraphGuru?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(guru:User {screen_name: 'graphguru'}),
      (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide the most used hashtags in conversations between the users Neo4j and GraphGuru.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(guru:User {screen_name: 'graphguru'}),
      (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What hashtags appear most often in the dialogues between Neo4j and GraphGuru?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(guru:User {screen_name: 'graphguru'}),
      (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most common hashtags in the tweets between Neo4j and GraphGuru?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(guru:User {screen_name: 'graphguru'}),
      (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like to know what hashtags are prevalently used when Neo4j and GraphGuru communicate.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(guru:User {screen_name: 'graphguru'}),
      (t)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the most liked words in 'neo4j's tweets, based on tweet favorites?","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 100
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]

RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the 50 most common words in 'neo4j' tweets that have received over 100 favorites.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 100
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]

RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you list the top 50 words in 'neo4j's favorite-heavy tweets, excluding common words?","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 100
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]

RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most frequently used words in 'neo4j's tweets that have more than 100 favorites?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 100
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]

RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide the 50 most popular words in 'neo4j's highly favorited tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 100
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]

RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which words are most frequently used in 'neo4j's tweets that have received more than 100 favorites?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 100
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]

RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show the most common words in 'neo4j's tweets that have over 100 favorites?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 100
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]

RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display the most used words in 'neo4j's tweets with more than 100 favorites.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 100
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]

RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I want to see the top 50 common words in 'neo4j's tweets that have more than 100 likes.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 100
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]

RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which words appear most often in 'neo4j's tweets that have over 100 favorites?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 100
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]

RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Show the 50 most common words, excluding basic English words, in favored 'neo4j' tweets.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 100
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]

RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you give me the top 50 most frequent words in 'neo4j's tweets that have over a hundred favorites?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 100
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]

RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide the top 50 commonly used words in heavily favorited 'neo4j' tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 100
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]

RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the fifty most frequently used words in 'neo4j's tweets with more than 100 favorites?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 100
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]

RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most commonly used words in 'neo4j's favorite-rich tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 100
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]

RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Please list the frequent words in 'neo4j's tweets that have garnered more than 100 favorites.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
WHERE t.favorites > 100
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN  ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]

RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find the most frequently used words in tweets posted by the user 'neo4j' and in replies to those tweets.,"MATCH path=(u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO*]-(reply:Tweet)
UNWIND [tweet IN nodes(path) | tweet.text] AS text
UNWIND split(text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you list the top 50 commonly used words in 'neo4j's tweets and their replies?,"MATCH path=(u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO*]-(reply:Tweet)
UNWIND [tweet IN nodes(path) | tweet.text] AS text
UNWIND split(text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most frequently used words in 'neo4j's tweets and replies to those tweets?,"MATCH path=(u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO*]-(reply:Tweet)
UNWIND [tweet IN nodes(path) | tweet.text] AS text
UNWIND split(text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the 50 most common words in the tweets posted by the user 'neo4j' and in the replies to those posts.,"MATCH path=(u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO*]-(reply:Tweet)
UNWIND [tweet IN nodes(path) | tweet.text] AS text
UNWIND split(text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What's the word usage frequency in 'neo4j's tweets and their replies, excluding common words?","MATCH path=(u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO*]-(reply:Tweet)
UNWIND [tweet IN nodes(path) | tweet.text] AS text
UNWIND split(text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide the list of most frequently used words in 'neo4j's tweets and corresponding replies.,"MATCH path=(u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO*]-(reply:Tweet)
UNWIND [tweet IN nodes(path) | tweet.text] AS text
UNWIND split(text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I'd like to see the most common words, excluding common English words, in tweets and replies by 'neo4j'.","MATCH path=(u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO*]-(reply:Tweet)
UNWIND [tweet IN nodes(path) | tweet.text] AS text
UNWIND split(text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you display the most commonly used non-stopwords in 'neo4j's tweets and replies?,"MATCH path=(u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO*]-(reply:Tweet)
UNWIND [tweet IN nodes(path) | tweet.text] AS text
UNWIND split(text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the fifty most frequent words in 'neo4j's tweets and the replies they receive?,"MATCH path=(u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO*]-(reply:Tweet)
UNWIND [tweet IN nodes(path) | tweet.text] AS text
UNWIND split(text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the fifty most common words used in posts and replies by 'neo4j'.,"MATCH path=(u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO*]-(reply:Tweet)
UNWIND [tweet IN nodes(path) | tweet.text] AS text
UNWIND split(text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I'm interested in the frequencies of words used in tweets and replies from 'neo4j', excluding stopwords.","MATCH path=(u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO*]-(reply:Tweet)
UNWIND [tweet IN nodes(path) | tweet.text] AS text
UNWIND split(text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the most used words, excluding common English words, in 'neo4j's tweets and their replies?","MATCH path=(u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO*]-(reply:Tweet)
UNWIND [tweet IN nodes(path) | tweet.text] AS text
UNWIND split(text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you list the most frequent words used by 'neo4j' and its respondents, excluding common stopwords?","MATCH path=(u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO*]-(reply:Tweet)
UNWIND [tweet IN nodes(path) | tweet.text] AS text
UNWIND split(text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Display the top 50 words used often in 'neo4j's tweets and replies, apart from common ones.","MATCH path=(u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO*]-(reply:Tweet)
UNWIND [tweet IN nodes(path) | tweet.text] AS text
UNWIND split(text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the top fifty frequently used words in neo4j's tweets and answers to those tweets, excluding common words?","MATCH path=(u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO*]-(reply:Tweet)
UNWIND [tweet IN nodes(path) | tweet.text] AS text
UNWIND split(text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify the common words from 'neo4j's tweets and replies, not counting typical English conjunctions, prepositions, etc.","MATCH path=(u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)<-[:REPLY_TO*]-(reply:Tweet)
UNWIND [tweet IN nodes(path) | tweet.text] AS text
UNWIND split(text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the shared interests between 'neo4j' and the users they follow, based on common hashtags?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag),
      (followed:User)-[:FOLLOWS]->(neo),
      (followed)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, COUNT(DISTINCT t) + COUNT(DISTINCT ft) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show the top 50 common hashtags between 'neo4j' and the users it follows?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag),
      (followed:User)-[:FOLLOWS]->(neo),
      (followed)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, COUNT(DISTINCT t) + COUNT(DISTINCT ft) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the shared areas of interest between 'neo4j' and the users they follow, based on hashtag use?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag),
      (followed:User)-[:FOLLOWS]->(neo),
      (followed)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, COUNT(DISTINCT t) + COUNT(DISTINCT ft) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like to know the most common hashtags between 'neo4j' and the users they follow.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag),
      (followed:User)-[:FOLLOWS]->(neo),
      (followed)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, COUNT(DISTINCT t) + COUNT(DISTINCT ft) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Show me the common interests between 'neo4j' and the users they follow, indicated by hashtags.","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag),
      (followed:User)-[:FOLLOWS]->(neo),
      (followed)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, COUNT(DISTINCT t) + COUNT(DISTINCT ft) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you list the top 50 shared hashtags between 'neo4j' and the users they follow?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag),
      (followed:User)-[:FOLLOWS]->(neo),
      (followed)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, COUNT(DISTINCT t) + COUNT(DISTINCT ft) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the shared hashtags between 'neo4j' and the users it follows?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag),
      (followed:User)-[:FOLLOWS]->(neo),
      (followed)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, COUNT(DISTINCT t) + COUNT(DISTINCT ft) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide the 50 most commonly shared hashtags between 'neo4j' and its followings.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag),
      (followed:User)-[:FOLLOWS]->(neo),
      (followed)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, COUNT(DISTINCT t) + COUNT(DISTINCT ft) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I would like to see the most common interests of 'neo4j' and the users they follow, based on commonly used hashtags.","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag),
      (followed:User)-[:FOLLOWS]->(neo),
      (followed)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, COUNT(DISTINCT t) + COUNT(DISTINCT ft) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Show me the top 50 similar interests between 'neo4j' and the ones they follow, in terms of hashtag use.","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag),
      (followed:User)-[:FOLLOWS]->(neo),
      (followed)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, COUNT(DISTINCT t) + COUNT(DISTINCT ft) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the common hashtags utilised by 'neo4j' and the ones it follows?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag),
      (followed:User)-[:FOLLOWS]->(neo),
      (followed)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, COUNT(DISTINCT t) + COUNT(DISTINCT ft) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Please display the shared hashtags between 'neo4j' and the users it follows.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag),
      (followed:User)-[:FOLLOWS]->(neo),
      (followed)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, COUNT(DISTINCT t) + COUNT(DISTINCT ft) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide the top 50 common hashtags between 'neo4j' and the users they follow.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag),
      (followed:User)-[:FOLLOWS]->(neo),
      (followed)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, COUNT(DISTINCT t) + COUNT(DISTINCT ft) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the overlapping interests, based on hashtags, between 'neo4j' and its followings?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag),
      (followed:User)-[:FOLLOWS]->(neo),
      (followed)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, COUNT(DISTINCT t) + COUNT(DISTINCT ft) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display the top 50 commonly used hashtags between 'neo4j' and the users it follows.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag),
      (followed:User)-[:FOLLOWS]->(neo),
      (followed)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, COUNT(DISTINCT t) + COUNT(DISTINCT ft) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Show the shared hashtags between 'neo4j' and the users it follows, ranked by frequency.","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag),
      (followed:User)-[:FOLLOWS]->(neo),
      (followed)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h)
RETURN h.name AS SharedHashtag, COUNT(DISTINCT t) + COUNT(DISTINCT ft) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the most popular topics among users who follow 'neo4j', indicated by hashtag frequency?","MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top 50 most frequently used hashtags amongst the users who follow 'neo4j'?,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you show the most popular topics among 'neo4j' followers, determined by hashtag usage?","MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like to see the fifty most common hashtags used by followers of 'neo4j'.,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most popular hashtags among the users following 'neo4j'?,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the 50 most used hashtags by users who follow 'neo4j'.,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you identify the trending topics among 'neo4j' followers, based on their hashtag use?","MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Please list the 50 most commonly used hashtags among 'neo4j' followers.,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide the top fifty hashtags used by those who follow 'neo4j'.,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the fifty most favored topics, indicated by hashtags, among 'neo4j's followers?","MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display the fifty most frequently used hashtags by users following 'neo4j'.,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you show the favored topics, based on hashtag frequency, among 'neo4j's followers?","MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most common hashtags among users who follow 'neo4j'?,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify the most popular topics among 'neo4j' followers, indicated by the frequency of hashtags.","MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top 50 most commonly used hashtags among users that follow 'neo4j'?,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show the fifty most frequent hashtags used by 'neo4j' followers.,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, COUNT(*) AS Frequency
ORDER BY Frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who does 'neo4j' most frequently interact with through mentions, and what does this reveal about their network?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS UserMentioned, COUNT(*) AS TimesMentioned
ORDER BY TimesMentioned DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the top 50 users 'neo4j' interacts with frequently through mentions?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS UserMentioned, COUNT(*) AS TimesMentioned
ORDER BY TimesMentioned DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the 50 most frequently mentioned users by 'neo4j' in its tweets.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS UserMentioned, COUNT(*) AS TimesMentioned
ORDER BY TimesMentioned DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the names of the fifty most mentioned users by 'neo4j'?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS UserMentioned, COUNT(*) AS TimesMentioned
ORDER BY TimesMentioned DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the top fifty users whom 'neo4j' mentions most frequently in their tweets?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS UserMentioned, COUNT(*) AS TimesMentioned
ORDER BY TimesMentioned DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the most mentioned users by 'neo4j' in their posts?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS UserMentioned, COUNT(*) AS TimesMentioned
ORDER BY TimesMentioned DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the fifty users most commonly mentioned in 'neo4j's tweets.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS UserMentioned, COUNT(*) AS TimesMentioned
ORDER BY TimesMentioned DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you display the 50 most frequently mentioned users by 'neo4j'?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS UserMentioned, COUNT(*) AS TimesMentioned
ORDER BY TimesMentioned DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Please reveal the fifty users that 'neo4j' mentions the most in its tweets.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS UserMentioned, COUNT(*) AS TimesMentioned
ORDER BY TimesMentioned DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who does 'neo4j' mention the most often in their tweets?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS UserMentioned, COUNT(*) AS TimesMentioned
ORDER BY TimesMentioned DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like to see the 50 users most frequently mentioned by 'neo4j'.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS UserMentioned, COUNT(*) AS TimesMentioned
ORDER BY TimesMentioned DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the top 50 users often mentioned by 'neo4j' in its tweets?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS UserMentioned, COUNT(*) AS TimesMentioned
ORDER BY TimesMentioned DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide the list of the top 50 users frequently mentioned in 'neo4j's tweets.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS UserMentioned, COUNT(*) AS TimesMentioned
ORDER BY TimesMentioned DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display the fifty users most cited in 'neo4j' tweets.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS UserMentioned, COUNT(*) AS TimesMentioned
ORDER BY TimesMentioned DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show the fifty users who are most often mentioned in 'neo4j' posts?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS UserMentioned, COUNT(*) AS TimesMentioned
ORDER BY TimesMentioned DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Name the users who 'neo4j' mentions most frequently in its tweets.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)-[:MENTIONS]->(mentioned:User)
RETURN mentioned.screen_name AS UserMentioned, COUNT(*) AS TimesMentioned
ORDER BY TimesMentioned DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What common words are used in the tweets of users followed by 'neo4j'?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you show me the most commonly used words in the tweets of users followed by 'neo4j', excluding stopwords?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the 50 most commonly used words in the tweets of users that 'neo4j' follows, excluding common words?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I'd like to see the most frequently used words, excluding common words, in the tweets of users followed by 'neo4j'.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Show the top 50 words used by users followed by 'neo4j', excluding general English words.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the common terms in the tweets of users whom 'neo4j' follows, excluding common English words?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the frequent non-stopwords used in the tweets of users followed by 'neo4j'?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Show me the most common words used by 'neo4j' followed accounts in their tweets, excluding common words.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the most used words in the tweets of people 'neo4j' follows, excluding basic English words?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","List the frequently used words in the tweets of users that 'neo4j' follows, excluding commonly used English words.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the common non-stopwords used in the tweets of people followed by 'neo4j'?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What words are most frequently used in tweets by users that 'neo4j' follows, excluding common English words?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Provide a list of the top 50 most used words, excluding common words, in tweets by people 'neo4j' follows.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Show me the most frequent words used in the tweets of users 'neo4j' follows, excluding common words.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you display a list of the top 50 words used frequently in the tweets made by users 'neo4j' follows, whilst omitting common stopwords?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify the most common words, excluding general English words, used in tweets by people 'neo4j' follows.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
UNWIND split(t.text, ' ') AS word
WITH word, COUNT(*) AS frequency
WHERE NOT toLower(word) IN ['the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as', 
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like', 
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', """",
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_',  'how', 'the', 'in', ""–"", ""via"", ""?"", ""I"" ]
RETURN word, frequency
ORDER BY frequency DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the overlapping interests between 'neo4j' and their followers, as well as the users they follow, based on commonly used hashtags?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
RETURN h.name AS CommonHashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalUses
ORDER BY TotalUses DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What hashtags do 'neo4j', its followers, and the users they follow commonly use?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
RETURN h.name AS CommonHashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalUses
ORDER BY TotalUses DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the top 50 hashtags shared by 'neo4j' and the users it interacts with.,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
RETURN h.name AS CommonHashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalUses
ORDER BY TotalUses DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you identify the overlapping hashtags used by 'neo4j', its followers, and the people it follows?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
RETURN h.name AS CommonHashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalUses
ORDER BY TotalUses DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I'd like to see the 50 most frequently used common hashtags between 'neo4j', its followers, and users it follows.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
RETURN h.name AS CommonHashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalUses
ORDER BY TotalUses DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the common areas of interest between 'neo4j', its followers, and the ones it is following, based on used hashtags?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
RETURN h.name AS CommonHashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalUses
ORDER BY TotalUses DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which hashtags are most commonly used by 'neo4j', the users it follows, and its followers?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
RETURN h.name AS CommonHashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalUses
ORDER BY TotalUses DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Show me the top 50 common hashtags among 'neo4j', people it follows, and its followers.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
RETURN h.name AS CommonHashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalUses
ORDER BY TotalUses DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you provide the most popular hashtags used by 'neo4j', its followers, and users it follows?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
RETURN h.name AS CommonHashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalUses
ORDER BY TotalUses DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Display the intersecting interests between 'neo4j', their followers, and people they follow based on hashtags.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
RETURN h.name AS CommonHashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalUses
ORDER BY TotalUses DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the most commonly used hashtags among 'neo4j', their followers, and the users they follow?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
RETURN h.name AS CommonHashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalUses
ORDER BY TotalUses DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Reveal the prevailing hashtags among 'neo4j', its followers and the ones it follows.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
RETURN h.name AS CommonHashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalUses
ORDER BY TotalUses DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the common hashtags among 'neo4j', its followers, and followees?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
RETURN h.name AS CommonHashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalUses
ORDER BY TotalUses DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify the top 50 hashtags preferred by 'neo4j', its followers, and the ones it follows.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
RETURN h.name AS CommonHashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalUses
ORDER BY TotalUses DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Show the overlapping hashtags used by 'neo4j', the users they follow, and their followers.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
RETURN h.name AS CommonHashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalUses
ORDER BY TotalUses DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Could you show the intersecting interests of 'neo4j', their followers, and who they follow in terms of used hashtags?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
RETURN h.name AS CommonHashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalUses
ORDER BY TotalUses DESC
LIMIT 50
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who are 'neo4j's most frequent collaborators in conversations, based on mutual mentions?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:MENTIONS]->(u:User),
      (u)-[:POSTS]->(t2:Tweet)-[:MENTIONS]->(neo)
RETURN u.screen_name AS Collaborator, COUNT(DISTINCT t1) + COUNT(DISTINCT t2) AS MutualMentions
ORDER BY MutualMentions DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the top 10 most frequent collaborators with 'neo4j' based on mutual mentions?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:MENTIONS]->(u:User),
      (u)-[:POSTS]->(t2:Tweet)-[:MENTIONS]->(neo)
RETURN u.screen_name AS Collaborator, COUNT(DISTINCT t1) + COUNT(DISTINCT t2) AS MutualMentions
ORDER BY MutualMentions DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you display a list of users who interact with 'neo4j' the most through mutual mentions?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:MENTIONS]->(u:User),
      (u)-[:POSTS]->(t2:Tweet)-[:MENTIONS]->(neo)
RETURN u.screen_name AS Collaborator, COUNT(DISTINCT t1) + COUNT(DISTINCT t2) AS MutualMentions
ORDER BY MutualMentions DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which users converse with 'neo4j' most often based on the number of mutual mentions?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:MENTIONS]->(u:User),
      (u)-[:POSTS]->(t2:Tweet)-[:MENTIONS]->(neo)
RETURN u.screen_name AS Collaborator, COUNT(DISTINCT t1) + COUNT(DISTINCT t2) AS MutualMentions
ORDER BY MutualMentions DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like to see 'neo4j's top ten collaborators based on how often they mention each other.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:MENTIONS]->(u:User),
      (u)-[:POSTS]->(t2:Tweet)-[:MENTIONS]->(neo)
RETURN u.screen_name AS Collaborator, COUNT(DISTINCT t1) + COUNT(DISTINCT t2) AS MutualMentions
ORDER BY MutualMentions DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Show me the top 10 users that 'neo4j' collaborates with in conversations, based on mutual mentions.","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:MENTIONS]->(u:User),
      (u)-[:POSTS]->(t2:Tweet)-[:MENTIONS]->(neo)
RETURN u.screen_name AS Collaborator, COUNT(DISTINCT t1) + COUNT(DISTINCT t2) AS MutualMentions
ORDER BY MutualMentions DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the top ten users who mention and get mentioned by 'neo4j' the most?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:MENTIONS]->(u:User),
      (u)-[:POSTS]->(t2:Tweet)-[:MENTIONS]->(neo)
RETURN u.screen_name AS Collaborator, COUNT(DISTINCT t1) + COUNT(DISTINCT t2) AS MutualMentions
ORDER BY MutualMentions DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you list 'neo4j's most common conversationalists, sorted by mutual mentions?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:MENTIONS]->(u:User),
      (u)-[:POSTS]->(t2:Tweet)-[:MENTIONS]->(neo)
RETURN u.screen_name AS Collaborator, COUNT(DISTINCT t1) + COUNT(DISTINCT t2) AS MutualMentions
ORDER BY MutualMentions DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide a list of 'neo4j's top conversational partners based on the number of mutual mentions.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:MENTIONS]->(u:User),
      (u)-[:POSTS]->(t2:Tweet)-[:MENTIONS]->(neo)
RETURN u.screen_name AS Collaborator, COUNT(DISTINCT t1) + COUNT(DISTINCT t2) AS MutualMentions
ORDER BY MutualMentions DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which users frequently engage in conversations with 'neo4j', calculated by mutual mentions?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:MENTIONS]->(u:User),
      (u)-[:POSTS]->(t2:Tweet)-[:MENTIONS]->(neo)
RETURN u.screen_name AS Collaborator, COUNT(DISTINCT t1) + COUNT(DISTINCT t2) AS MutualMentions
ORDER BY MutualMentions DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who are the most frequent collaborators in 'neo4j's conversations, as determined by mutual mentions?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:MENTIONS]->(u:User),
      (u)-[:POSTS]->(t2:Tweet)-[:MENTIONS]->(neo)
RETURN u.screen_name AS Collaborator, COUNT(DISTINCT t1) + COUNT(DISTINCT t2) AS MutualMentions
ORDER BY MutualMentions DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like a list of users who mention and are mentioned by 'neo4j' most often.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:MENTIONS]->(u:User),
      (u)-[:POSTS]->(t2:Tweet)-[:MENTIONS]->(neo)
RETURN u.screen_name AS Collaborator, COUNT(DISTINCT t1) + COUNT(DISTINCT t2) AS MutualMentions
ORDER BY MutualMentions DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are 'neo4j's most frequent conversational collaborators based on the frequency of mutual mentions?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:MENTIONS]->(u:User),
      (u)-[:POSTS]->(t2:Tweet)-[:MENTIONS]->(neo)
RETURN u.screen_name AS Collaborator, COUNT(DISTINCT t1) + COUNT(DISTINCT t2) AS MutualMentions
ORDER BY MutualMentions DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show the top ten users who have the most mutual mentions with 'neo4j'.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:MENTIONS]->(u:User),
      (u)-[:POSTS]->(t2:Tweet)-[:MENTIONS]->(neo)
RETURN u.screen_name AS Collaborator, COUNT(DISTINCT t1) + COUNT(DISTINCT t2) AS MutualMentions
ORDER BY MutualMentions DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Where can I find the ten most frequent conversationalists involved with 'neo4j', based on mutual mentions?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:MENTIONS]->(u:User),
      (u)-[:POSTS]->(t2:Tweet)-[:MENTIONS]->(neo)
RETURN u.screen_name AS Collaborator, COUNT(DISTINCT t1) + COUNT(DISTINCT t2) AS MutualMentions
ORDER BY MutualMentions DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify the top ten users most frequently involved in conversations with 'neo4j', according to mutual mentions.","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(t1:Tweet)-[:MENTIONS]->(u:User),
      (u)-[:POSTS]->(t2:Tweet)-[:MENTIONS]->(neo)
RETURN u.screen_name AS Collaborator, COUNT(DISTINCT t1) + COUNT(DISTINCT t2) AS MutualMentions
ORDER BY MutualMentions DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What topics generate the most favorites in the tweets of users followed by 'neo4j', indicating interest areas?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
WHERE t.favorites > 50
RETURN t.text AS PopularTweet, t.favorites AS Favorites
ORDER BY Favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you show me the top ten tweets with over 50 favorites, posted by accounts followed by 'neo4j'?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
WHERE t.favorites > 50
RETURN t.text AS PopularTweet, t.favorites AS Favorites
ORDER BY Favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like to see the top ten popular tweets from the users 'neo4j' follows.,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
WHERE t.favorites > 50
RETURN t.text AS PopularTweet, t.favorites AS Favorites
ORDER BY Favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the favorite-heavy topics from the tweets posted by users that 'neo4j' follows?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
WHERE t.favorites > 50
RETURN t.text AS PopularTweet, t.favorites AS Favorites
ORDER BY Favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you display the tweets with more than 50 favorites from those followed by 'neo4j'?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
WHERE t.favorites > 50
RETURN t.text AS PopularTweet, t.favorites AS Favorites
ORDER BY Favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the top ten tweets with the most favorites posted by users that 'neo4j' follows.,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
WHERE t.favorites > 50
RETURN t.text AS PopularTweet, t.favorites AS Favorites
ORDER BY Favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the top ten tweets with more than 50 favorites, posted by those followed by 'neo4j'?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
WHERE t.favorites > 50
RETURN t.text AS PopularTweet, t.favorites AS Favorites
ORDER BY Favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which tweets, having more than 50 favorites, from those followed by 'neo4j' are most popular?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
WHERE t.favorites > 50
RETURN t.text AS PopularTweet, t.favorites AS Favorites
ORDER BY Favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the top ten tweets having more than 50 favorites from 'neo4j's followed users.,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
WHERE t.favorites > 50
RETURN t.text AS PopularTweet, t.favorites AS Favorites
ORDER BY Favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top ten favorited tweets coming from the users followed by 'neo4j'?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
WHERE t.favorites > 50
RETURN t.text AS PopularTweet, t.favorites AS Favorites
ORDER BY Favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Provide the high-favored tweets from people that 'neo4j' follows, more than 50 favorites specifically.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
WHERE t.favorites > 50
RETURN t.text AS PopularTweet, t.favorites AS Favorites
ORDER BY Favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Show me the tweets with over 50 favorites, from users followed by 'neo4j'.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
WHERE t.favorites > 50
RETURN t.text AS PopularTweet, t.favorites AS Favorites
ORDER BY Favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Furnish the most favorite-laden tweets, with at least 50 likes, from users that 'neo4j' follows.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
WHERE t.favorites > 50
RETURN t.text AS PopularTweet, t.favorites AS Favorites
ORDER BY Favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the tweets with more than 50 favorites from users that 'neo4j' is following?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
WHERE t.favorites > 50
RETURN t.text AS PopularTweet, t.favorites AS Favorites
ORDER BY Favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which are the most liked tweets (over 50 favorites) from accounts 'neo4j' follows?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
WHERE t.favorites > 50
RETURN t.text AS PopularTweet, t.favorites AS Favorites
ORDER BY Favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show me the ten most favorited tweets from users followed by 'neo4j'?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(t:Tweet)
WHERE t.favorites > 50
RETURN t.text AS PopularTweet, t.favorites AS Favorites
ORDER BY Favorites DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which hashtags are trending within 'neo4j's network, encompassing followers and followees?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
WITH h.name AS Hashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 10
RETURN Hashtag, TotalMentions
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show me the top 10 trending hashtags within 'neo4j's network including followers and those being followed?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
WITH h.name AS Hashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 10
RETURN Hashtag, TotalMentions
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the top ten hashtags in 'neo4j's network, including both follows and followers?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
WITH h.name AS Hashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 10
RETURN Hashtag, TotalMentions
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like to see the most popular hashtags in 'neo4j's network.,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
WITH h.name AS Hashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 10
RETURN Hashtag, TotalMentions
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the top 10 most used hashtags within 'neo4j's followings and followers.,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
WITH h.name AS Hashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 10
RETURN Hashtag, TotalMentions
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Show me the most trending hashtags within 'neo4j's connections, both following and followers.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
WITH h.name AS Hashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 10
RETURN Hashtag, TotalMentions
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Please display the top 10 most commonly used hashtags within 'neo4j's network.,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
WITH h.name AS Hashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 10
RETURN Hashtag, TotalMentions
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which hashtags are the most popular in 'neo4j's following and followers network?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
WITH h.name AS Hashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 10
RETURN Hashtag, TotalMentions
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you identify the trending hashtags within the network of 'neo4j', including users it follows and its followers?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
WITH h.name AS Hashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 10
RETURN Hashtag, TotalMentions
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide the list of top 10 hashtags trending within 'neo4j's followers and followees.,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
WITH h.name AS Hashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 10
RETURN Hashtag, TotalMentions
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I want to know the most common hashtags within 'neo4j's network, encompassing both who 'neo4j' follows and who follows 'neo4j'.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
WITH h.name AS Hashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 10
RETURN Hashtag, TotalMentions
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the major hashtags within 'neo4j's network of both followed users and followers.,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
WITH h.name AS Hashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 10
RETURN Hashtag, TotalMentions
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which are the top 10 hashtags used by people who follow 'neo4j' and people 'neo4j' follows?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
WITH h.name AS Hashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 10
RETURN Hashtag, TotalMentions
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most used hashtags among 'neo4j's followers and the ones being followed by 'neo4j'?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
WITH h.name AS Hashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 10
RETURN Hashtag, TotalMentions
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Display the top ten hashtags circulating within 'neo4j's network, covering both follows and followers.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
WITH h.name AS Hashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 10
RETURN Hashtag, TotalMentions
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I need to see the most mentioned hashtags within 'neo4j's network, inclusive of followers and followees.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed:User)-[:POSTS]->(ft:Tweet)-[:TAGS]->(h:Hashtag),
      (follower:User)-[:FOLLOWS]->(neo)-[:POSTS]->(t:Tweet)-[:TAGS]->(h)
WITH h.name AS Hashtag, COUNT(DISTINCT ft) + COUNT(DISTINCT t) AS TotalMentions
ORDER BY TotalMentions DESC
LIMIT 10
RETURN Hashtag, TotalMentions
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most favorited tweets?,"MATCH (t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you list the top ten most favorited tweets?,"MATCH (t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the ten most liked tweets?,"MATCH (t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the tweets with the most favorites.,"MATCH (t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I would like to see the ten most popular tweets determined by favorites.,"MATCH (t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you display the top ten tweets with the most favorites?,"MATCH (t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which tweets have accumulated the highest favorites?,"MATCH (t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top ten most favorited tweets of all time?,"MATCH (t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Give me the ten tweets that have been favorited the most.,"MATCH (t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display the ten most favorited tweets from the database.,"MATCH (t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide me with the ten most liked tweets based on the number of favorites.,"MATCH (t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the top ten tweets with the highest number of favorites?,"MATCH (t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the top ten tweets based on favorites.,"MATCH (t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like the list of the ten most favored tweets.,"MATCH (t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide the list of top ten tweets with most favorites.,"MATCH (t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the ten tweets with the most favorites?,"MATCH (t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most favorited tweets posted by neo4j?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show me the top ten most favorited tweets posted by 'neo4j'?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like to see the ten most liked tweets posted by the user 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most popular tweets posted by 'neo4j' in terms of favorites?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the ten most favorited tweets from the user 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top ten tweets by 'neo4j' with the most favorites?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which tweets from 'neo4j' have received the most favorites?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Please list the top ten tweets by 'neo4j' which have received the most favorites.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the top ten most liked tweets from 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me 'neo4j's' top ten tweets with the highest favorites.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you display the ten most favorited tweets by the user 'neo4j'?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the favorite-heavy tweets from 'neo4j'?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide the top ten most favorited tweets posted by 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Give me 'neo4j's' ten most favorited tweets.,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which tweets have received the most favorites from the user 'neo4j'?,"MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Provide the most favorited tweets by 'neo4j', limited to the top ten.","MATCH (u:User {screen_name: 'neo4j'})-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which users' tweets have accumulated the most favorites?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u, SUM(t.favorites) as totalFavorites
ORDER BY totalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show me the top 10 users whose tweets have the most favorites in total?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u, SUM(t.favorites) as totalFavorites
ORDER BY totalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which users have the highest total favorites for their tweets?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u, SUM(t.favorites) as totalFavorites
ORDER BY totalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Give me the ten users who have received the most favorites on their tweets.,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u, SUM(t.favorites) as totalFavorites
ORDER BY totalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I'd like to see the users with the most favorited tweets, in descending order.","MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u, SUM(t.favorites) as totalFavorites
ORDER BY totalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Display the top 10 users who have gathered the highest favorites for their tweets.,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u, SUM(t.favorites) as totalFavorites
ORDER BY totalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the ten users with the highest sum of favorites on their tweets?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u, SUM(t.favorites) as totalFavorites
ORDER BY totalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which ten users' tweets have the most likes in total?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u, SUM(t.favorites) as totalFavorites
ORDER BY totalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you list the ten users whose tweets cumulatively own the most favorites?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u, SUM(t.favorites) as totalFavorites
ORDER BY totalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the top 10 users with the most total favorites on their tweets.,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u, SUM(t.favorites) as totalFavorites
ORDER BY totalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the ten users whose tweets have garnered the most favorites?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u, SUM(t.favorites) as totalFavorites
ORDER BY totalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the top ten users based on the sum of favorites for their tweets?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u, SUM(t.favorites) as totalFavorites
ORDER BY totalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the users with the highest total of favorites for their tweets?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u, SUM(t.favorites) as totalFavorites
ORDER BY totalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I want to know the users whose tweets have been favorited the most, ordered by total count.","MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u, SUM(t.favorites) as totalFavorites
ORDER BY totalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show the top ten users whose tweets have collected the most favorites cumulatively.,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u, SUM(t.favorites) as totalFavorites
ORDER BY totalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the top 10 users with the most collective favorites on their tweets?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u, SUM(t.favorites) as totalFavorites
ORDER BY totalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What tweets have favorites but no replies or mentions?,"MATCH (t:Tweet)
WHERE t.favorites > 0 AND NOT (t)-[:REPLY_TO]->() AND NOT (t)-[:MENTIONS]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the tweets that have received favorites but not any replies or mentions.,"MATCH (t:Tweet)
WHERE t.favorites > 0 AND NOT (t)-[:REPLY_TO]->() AND NOT (t)-[:MENTIONS]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I want to see tweets which are favorited but have neither replies nor mentions.,"MATCH (t:Tweet)
WHERE t.favorites > 0 AND NOT (t)-[:REPLY_TO]->() AND NOT (t)-[:MENTIONS]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you display the tweets with favorites and no replies or mentions?,"MATCH (t:Tweet)
WHERE t.favorites > 0 AND NOT (t)-[:REPLY_TO]->() AND NOT (t)-[:MENTIONS]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the tweets that have been favorited but not replied to or mentioned?,"MATCH (t:Tweet)
WHERE t.favorites > 0 AND NOT (t)-[:REPLY_TO]->() AND NOT (t)-[:MENTIONS]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","I'm interested in seeing tweets which have favorites, but no responses or mentions.","MATCH (t:Tweet)
WHERE t.favorites > 0 AND NOT (t)-[:REPLY_TO]->() AND NOT (t)-[:MENTIONS]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide the tweets that have gained likes but have not been replied to or mentioned by anyone.,"MATCH (t:Tweet)
WHERE t.favorites > 0 AND NOT (t)-[:REPLY_TO]->() AND NOT (t)-[:MENTIONS]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the favorited tweets that lack replies or mentions?,"MATCH (t:Tweet)
WHERE t.favorites > 0 AND NOT (t)-[:REPLY_TO]->() AND NOT (t)-[:MENTIONS]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the favorited tweets that don't involve any replies or mentions.,"MATCH (t:Tweet)
WHERE t.favorites > 0 AND NOT (t)-[:REPLY_TO]->() AND NOT (t)-[:MENTIONS]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Give me the tweets which have been marked as favorites but haven't received any replies or mentions.,"MATCH (t:Tweet)
WHERE t.favorites > 0 AND NOT (t)-[:REPLY_TO]->() AND NOT (t)-[:MENTIONS]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Let's see the tweets having favorites without any replies or mentions.,"MATCH (t:Tweet)
WHERE t.favorites > 0 AND NOT (t)-[:REPLY_TO]->() AND NOT (t)-[:MENTIONS]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I want to know the tweets having likes without any associated replies or mentions.,"MATCH (t:Tweet)
WHERE t.favorites > 0 AND NOT (t)-[:REPLY_TO]->() AND NOT (t)-[:MENTIONS]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you display the liked tweets that received neither replies nor mentions?,"MATCH (t:Tweet)
WHERE t.favorites > 0 AND NOT (t)-[:REPLY_TO]->() AND NOT (t)-[:MENTIONS]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which tweets have favorites but aren't subjected to any replies or mentions?,"MATCH (t:Tweet)
WHERE t.favorites > 0 AND NOT (t)-[:REPLY_TO]->() AND NOT (t)-[:MENTIONS]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I need to see tweets with likes but haven’t been replied to or mentioned.,"MATCH (t:Tweet)
WHERE t.favorites > 0 AND NOT (t)-[:REPLY_TO]->() AND NOT (t)-[:MENTIONS]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show tweets with favorites that don't have any replies or mentions.,"MATCH (t:Tweet)
WHERE t.favorites > 0 AND NOT (t)-[:REPLY_TO]->() AND NOT (t)-[:MENTIONS]->()
RETURN t
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most favorited tweets from users followed by neo4j?,"MATCH (u:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed)-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which are the top ten tweets with the most favorites, posted by the users followed by 'neo4j'?","MATCH (u:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed)-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the most liked tweets from the users Neo4j follows.,"MATCH (u:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed)-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the ten most favorited tweets from users that Neo4j follows?,"MATCH (u:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed)-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the most favored tweets from those who 'neo4j' is following?,"MATCH (u:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed)-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I would like to see the top 10 most popular tweets from the users followed by 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed)-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Name the top 10 favorited tweets from individuals that 'neo4j' follows.,"MATCH (u:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed)-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most liked posts from users which 'neo4j' follows.,"MATCH (u:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed)-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Please list the most favorited tweets from those whom 'neo4j' follows.,"MATCH (u:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed)-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which tweets from the users 'neo4j' follows have received the most favorites?,"MATCH (u:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed)-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the most popular tweets from the users that 'neo4j' is following.,"MATCH (u:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed)-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you provide the most favorited tweets from people followed by 'neo4j'?,"MATCH (u:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed)-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Give me the most favorited tweets of the users being followed by 'neo4j'.,"MATCH (u:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed)-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top ten most favorite tweets from users who are followed by 'neo4j'?,"MATCH (u:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed)-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like to see the most favorited tweets posted by users that 'neo4j' follows.,"MATCH (u:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed)-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you list down the top 10 tweets by popularity from those 'neo4j' follows?,"MATCH (u:User {screen_name: 'neo4j'})-[:FOLLOWS]->(followed)-[:POSTS]->(t:Tweet)
RETURN t ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who has posted the most favorited tweets?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.favorites AS Favorites
ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",List the top 10 users who have the most favorited tweets.,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.favorites AS Favorites
ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I need the screen names of the users who posted the ten most favored tweets.,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.favorites AS Favorites
ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which users' tweets have received the most favorites?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.favorites AS Favorites
ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show me the ten users with the highest favorited tweets?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.favorites AS Favorites
ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the top 10 tweets with the most favorites and their respective users.,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.favorites AS Favorites
ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the ten users with the most favorited posts on Twitter?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.favorites AS Favorites
ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Show me the ten most popular tweets and the users who posted them.,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.favorites AS Favorites
ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who posted the ten most liked tweets?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.favorites AS Favorites
ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","List the top ten tweets in terms of favorites, alongside the users who posted them.","MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.favorites AS Favorites
ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the users who have posted the ten most favorited tweets?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.favorites AS Favorites
ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the users with the ten highest favorited tweets?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.favorites AS Favorites
ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Provide the usernames of the top 10 users with the most favored tweets.,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.favorites AS Favorites
ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show the most favorited tweets and their authors?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.favorites AS Favorites
ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",I'd like to see the top 10 tweets with the most favorites and the user who posted them.,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.favorites AS Favorites
ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who are the authors of the ten most loved tweets?,"MATCH (u:User)-[:POSTS]->(t:Tweet)
RETURN u.screen_name AS ScreenName, t.favorites AS Favorites
ORDER BY t.favorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How do the number of favorites on tweets change over time?,"MATCH (t:Tweet)
WITH date(t.created_at) AS day, t.favorites AS favorites
RETURN day AS Time, AVG(favorites) AS AvgFavorites
ORDER BY Time
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How does the average number of favorites on tweets change over time, represented by daily intervals?","MATCH (t:Tweet)
WITH date(t.created_at) AS day, t.favorites AS favorites
RETURN day AS Time, AVG(favorites) AS AvgFavorites
ORDER BY Time
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can we observe any trends in the average number of favorites on tweets over time?,"MATCH (t:Tweet)
WITH date(t.created_at) AS day, t.favorites AS favorites
RETURN day AS Time, AVG(favorites) AS AvgFavorites
ORDER BY Time
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What is the average change in the number of favorites on tweets over different time periods?,"MATCH (t:Tweet)
WITH date(t.created_at) AS day, t.favorites AS favorites
RETURN day AS Time, AVG(favorites) AS AvgFavorites
ORDER BY Time
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How does the average number of favorites per tweet fluctuate over time, on a daily basis?","MATCH (t:Tweet)
WITH date(t.created_at) AS day, t.favorites AS favorites
RETURN day AS Time, AVG(favorites) AS AvgFavorites
ORDER BY Time
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can we analyze the variation in the average number of favorites on tweets across different dates?,"MATCH (t:Tweet)
WITH date(t.created_at) AS day, t.favorites AS favorites
RETURN day AS Time, AVG(favorites) AS AvgFavorites
ORDER BY Time
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What patterns emerge when examining the average number of favorites on tweets over time?,"MATCH (t:Tweet)
WITH date(t.created_at) AS day, t.favorites AS favorites
RETURN day AS Time, AVG(favorites) AS AvgFavorites
ORDER BY Time
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How does the average number of favorites per tweet evolve over time, and are there any notable fluctuations?","MATCH (t:Tweet)
WITH date(t.created_at) AS day, t.favorites AS favorites
RETURN day AS Time, AVG(favorites) AS AvgFavorites
ORDER BY Time
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can we discern any temporal trends in the average number of favorites received by tweets?,"MATCH (t:Tweet)
WITH date(t.created_at) AS day, t.favorites AS favorites
RETURN day AS Time, AVG(favorites) AS AvgFavorites
ORDER BY Time
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What insights can be gained by examining the average number of favorites on tweets over various time periods?,"MATCH (t:Tweet)
WITH date(t.created_at) AS day, t.favorites AS favorites
RETURN day AS Time, AVG(favorites) AS AvgFavorites
ORDER BY Time
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How does the average number of favorites on tweets change over time, and what does this reveal about user engagement dynamics?","MATCH (t:Tweet)
WITH date(t.created_at) AS day, t.favorites AS favorites
RETURN day AS Time, AVG(favorites) AS AvgFavorites
ORDER BY Time
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which topics receive the most favourites?,"MATCH (t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, SUM(t.favorites) AS TotalFavorites
ORDER BY TotalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the top ten topics receiving the most favorites on Twitter, based on hashtags associated with tweets?","MATCH (t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, SUM(t.favorites) AS TotalFavorites
ORDER BY TotalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the most favorited topics on Twitter by analyzing hashtags used in tweets?,"MATCH (t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, SUM(t.favorites) AS TotalFavorites
ORDER BY TotalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which hashtags correspond to the topics that garner the highest number of favorites on Twitter?,"MATCH (t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, SUM(t.favorites) AS TotalFavorites
ORDER BY TotalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the most popular topics among Twitter users, as indicated by the total number of favorites received?","MATCH (t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, SUM(t.favorites) AS TotalFavorites
ORDER BY TotalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How can we determine the most favorited topics on Twitter, considering hashtags associated with tweets?","MATCH (t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, SUM(t.favorites) AS TotalFavorites
ORDER BY TotalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What hashtags represent the topics that receive the most favorites on Twitter, and what are their respective counts?","MATCH (t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, SUM(t.favorites) AS TotalFavorites
ORDER BY TotalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you list the hashtags representing the most favorited topics on Twitter, along with the total number of favorites they've received?","MATCH (t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, SUM(t.favorites) AS TotalFavorites
ORDER BY TotalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which topics are most loved by Twitter users, based on the total number of favorites associated with their hashtags?","MATCH (t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, SUM(t.favorites) AS TotalFavorites
ORDER BY TotalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the most favorited topics discussed on Twitter, and how many favorites have they accumulated?","MATCH (t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, SUM(t.favorites) AS TotalFavorites
ORDER BY TotalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","In terms of favorites, which topics stand out the most on Twitter, as indicated by associated hashtags?","MATCH (t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, SUM(t.favorites) AS TotalFavorites
ORDER BY TotalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What topics tend to receive the highest number of favorites on Twitter, and how are they represented by hashtags?","MATCH (t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, SUM(t.favorites) AS TotalFavorites
ORDER BY TotalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can we identify the topics that Twitter users most frequently favorite, based on associated hashtags?","MATCH (t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, SUM(t.favorites) AS TotalFavorites
ORDER BY TotalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How do we determine the topics that resonate the most with Twitter users, considering the number of favorites associated with their hashtags?","MATCH (t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, SUM(t.favorites) AS TotalFavorites
ORDER BY TotalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the top ten topics that receive the most favorites on Twitter, based on the hashtags used in tweets?","MATCH (t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, SUM(t.favorites) AS TotalFavorites
ORDER BY TotalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which hashtags represent the topics most favored by Twitter users, and what is the total count of favorites for each topic?","MATCH (t:Tweet)-[:TAGS]->(h:Hashtag)
RETURN h.name AS Hashtag, SUM(t.favorites) AS TotalFavorites
ORDER BY TotalFavorites DESC LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the common retweet patterns among 'neo4j's followers, highlighting shared interests?
","MATCH (follower:User)-[:FOLLOWS]->(:User {screen_name: 'neo4j'}),
      (follower)-[:RETWEETS]->(retweetedTweet:Tweet)
WITH retweetedTweet, COUNT(*) AS RetweetCount
RETURN retweetedTweet.text AS RetweetedText, RetweetCount
ORDER BY RetweetCount DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which tweets are most commonly retweeted by 'neo4j's followers, indicating their collective interests?","MATCH (follower:User)-[:FOLLOWS]->(:User {screen_name: 'neo4j'}),
      (follower)-[:RETWEETS]->(retweetedTweet:Tweet)
WITH retweetedTweet, COUNT(*) AS RetweetCount
RETURN retweetedTweet.text AS RetweetedText, RetweetCount
ORDER BY RetweetCount DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you identify the top ten tweets that 'neo4j's followers frequently retweet, highlighting shared topics or themes?","MATCH (follower:User)-[:FOLLOWS]->(:User {screen_name: 'neo4j'}),
      (follower)-[:RETWEETS]->(retweetedTweet:Tweet)
WITH retweetedTweet, COUNT(*) AS RetweetCount
RETURN retweetedTweet.text AS RetweetedText, RetweetCount
ORDER BY RetweetCount DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the prevalent retweet trends among 'neo4j's followers, revealing their common points of interest?","MATCH (follower:User)-[:FOLLOWS]->(:User {screen_name: 'neo4j'}),
      (follower)-[:RETWEETS]->(retweetedTweet:Tweet)
WITH retweetedTweet, COUNT(*) AS RetweetCount
RETURN retweetedTweet.text AS RetweetedText, RetweetCount
ORDER BY RetweetCount DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which retweeted messages stand out among 'neo4j's followers, and what does this suggest about their shared preferences?","MATCH (follower:User)-[:FOLLOWS]->(:User {screen_name: 'neo4j'}),
      (follower)-[:RETWEETS]->(retweetedTweet:Tweet)
WITH retweetedTweet, COUNT(*) AS RetweetCount
RETURN retweetedTweet.text AS RetweetedText, RetweetCount
ORDER BY RetweetCount DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How can we determine the tweets that resonate the most with 'neo4j's followers, based on retweet patterns?","MATCH (follower:User)-[:FOLLOWS]->(:User {screen_name: 'neo4j'}),
      (follower)-[:RETWEETS]->(retweetedTweet:Tweet)
WITH retweetedTweet, COUNT(*) AS RetweetCount
RETURN retweetedTweet.text AS RetweetedText, RetweetCount
ORDER BY RetweetCount DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What tweets are repeatedly shared by 'neo4j's followers, indicating the shared interests within the network?","MATCH (follower:User)-[:FOLLOWS]->(:User {screen_name: 'neo4j'}),
      (follower)-[:RETWEETS]->(retweetedTweet:Tweet)
WITH retweetedTweet, COUNT(*) AS RetweetCount
RETURN retweetedTweet.text AS RetweetedText, RetweetCount
ORDER BY RetweetCount DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can the most frequently retweeted tweets by 'neo4j's followers shed light on the collective interests of the community?,"MATCH (follower:User)-[:FOLLOWS]->(:User {screen_name: 'neo4j'}),
      (follower)-[:RETWEETS]->(retweetedTweet:Tweet)
WITH retweetedTweet, COUNT(*) AS RetweetCount
RETURN retweetedTweet.text AS RetweetedText, RetweetCount
ORDER BY RetweetCount DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which messages find widespread appeal among 'neo4j's followers, as shown by retweet counts, and what topics do they cover?","MATCH (follower:User)-[:FOLLOWS]->(:User {screen_name: 'neo4j'}),
      (follower)-[:RETWEETS]->(retweetedTweet:Tweet)
WITH retweetedTweet, COUNT(*) AS RetweetCount
RETURN retweetedTweet.text AS RetweetedText, RetweetCount
ORDER BY RetweetCount DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the top ten retweeted tweets among 'neo4j's followers, and how do they reflect shared network interests?","MATCH (follower:User)-[:FOLLOWS]->(:User {screen_name: 'neo4j'}),
      (follower)-[:RETWEETS]->(retweetedTweet:Tweet)
WITH retweetedTweet, COUNT(*) AS RetweetCount
RETURN retweetedTweet.text AS RetweetedText, RetweetCount
ORDER BY RetweetCount DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How do retweet patterns among 'neo4j's followers help identify common interests, and which tweets are most emblematic of these interests?","MATCH (follower:User)-[:FOLLOWS]->(:User {screen_name: 'neo4j'}),
      (follower)-[:RETWEETS]->(retweetedTweet:Tweet)
WITH retweetedTweet, COUNT(*) AS RetweetCount
RETURN retweetedTweet.text AS RetweetedText, RetweetCount
ORDER BY RetweetCount DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Find the most frequently used non-stop words in tweets replying to 'neo4j'.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the top ten non-stop words found in tweets replying to 'neo4j', indicating key topics of discussion?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you identify the most common keywords, excluding common English stop words, in replies to 'neo4j's tweets?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What keywords frequently appear in responses to 'neo4j', once stop words are removed, showcasing the main points of interest?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which ten words, not including standard stop words, are most often used in replies to tweets by 'neo4j'?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How can we determine the most used non-stop words in tweets replying to 'neo4j', highlighting popular discussion themes?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the primary keywords, excluding stop words, that appear in tweets replying to 'neo4j'?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","In the analysis of replies to 'neo4j', which ten non-stop words are most frequently mentioned, and what might this indicate about the conversation's focus?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which non-stop words are recurrent in replies to 'neo4j', pointing to the core subjects or interests of the respondents?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you list the top ten words that frequently occur in replies to 'neo4j', excluding common stop words, to understand focal points in discussions?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What significant keywords, aside from typical stop words, recur in tweets replying to 'neo4j', revealing the main topics of engagement?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How do we find the most mentioned keywords, apart from stop words, in responses to 'neo4j's tweets, to see what captures people's interest?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the foremost non-stop words used in replies to 'neo4j', showing what topics are most engaging to the audience?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can the most common keywords in replies to 'neo4j', excluding stop words, indicate the primary interests or concerns of the repliers?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What keywords, not counting standard stop words, stand out in replies to 'neo4j', and how do they reflect the conversation's nature?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","In tweets replying to 'neo4j', which ten keywords, excluding stop words, are repeated most often, and what does this suggest about the discussion?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How can we highlight the main keywords, ignoring stop words, in replies to 'neo4j's tweets, to identify the central themes?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the key non-stop words in responses to 'neo4j', indicating the primary topics of conversation among the respondents?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you find the most recurring non-stop words in replies to 'neo4j', to uncover what subjects or themes dominate the dialogue?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What significant non-stop words frequently appear in tweets replying to 'neo4j', and what might this reveal about the audience's interests?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which non-stop words are most commonly found in replies to 'neo4j', shedding light on the focus points of the discussions?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
UNWIND split(reply.text, ' ') AS keyword
WITH toLower(keyword) AS lowerKeyword, COUNT(*) AS frequency
WHERE NOT lowerKeyword IN [
  'the', 'and', 'a', 'of', 'to', 'in', 'is', 'you', 'that', 'it', 'with', 'for', 'on', 'by', 'this', 'from',
  'be', 'are', 'was', 'were', 'have', 'has', 'had', 'do', 'does', 'did', 'but', 'at', 'which', 'if', 'or', 'as',
  'your', 'my', 'all', 'any', 'about', 'not', 'no', 'can', 'we', 'us', 'our', 'out', 'up', 'who', 'get', 'like',
  'just', 'so', 'an', 'will', 'what', 'go', 'they', 'their', 'them', 'its', 'his', 'her', 'he', 'she', 'one', '',
  'there', 'use', 'used', 'using', 'because', 'than', 'then', 'also', 'into', 'other', 'more', 'most', '_', 'how', 'the', 'in', '–', 'via', '?', 'i'
]
RETURN lowerKeyword AS keyword, frequency
ORDER BY frequency DESC
LIMIT 10
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Find the top five influencers who follow 'neo4j' and are also followed by users that 'neo4j' follows, highlighting a reciprocal influence within the network.","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who are the top five influencers that both follow 'neo4j' and are followed by 'neo4j's own following, demonstrating significant reciprocal influence?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you identify the influencers within 'neo4j's network who maintain a mutual following relationship, highlighting their central role?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the names of the top five influencers who follow 'neo4j' and are also followed back, indicating strong network ties?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How can we find the influencers who are closely connected to 'neo4j' through mutual followings, and who are the top five?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which influencers have the strongest reciprocal connections with 'neo4j', as evidenced by mutual followers within the network?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","In 'neo4j's Twitter network, who are the five leading influencers based on the number of mutual followers with 'neo4j'?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How do we determine the influencers who not only follow 'neo4j' but are also followed by those 'neo4j' follows, and who stands out?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What influencers within 'neo4j's network exhibit the highest level of reciprocal influence based on mutual followings?,"MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you list the top influencers who maintain a bidirectional following relationship with 'neo4j', reflecting their influence?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who stands out as the top influencers within 'neo4j's network, particularly those with a mutual following relationship?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which five influencers demonstrate the strongest reciprocal relationships with 'neo4j' through mutual follower connections?,"MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How can we identify the key influencers in 'neo4j's network, especially those who follow and are followed by 'neo4j's follows?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What influencers are central to 'neo4j's network, as shown by their mutual followings with 'neo4j' and its followers?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","In terms of reciprocal influence, who are the five most prominent influencers connected to 'neo4j'?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can the mutual followings within 'neo4j's network reveal the top influencers who share a close relationship with 'neo4j'?,"MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How do the mutual follower counts define the top influencers within 'neo4j's Twitter network, and who are they?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who are the influencers that not only follow 'neo4j' but also command a following among those 'neo4j' follows, and what are their rankings?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which influencers are most integral to 'neo4j's network, based on mutual followers, and how are they ranked?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can we pinpoint the influencers who have a reciprocal following relationship with 'neo4j', highlighting their network significance?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who tops the list of influencers within 'neo4j's network by having the most mutual followers, indicating a two-way influence?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(influencer:User)
MATCH (neo)-[:FOLLOWS]->(follower:User)<-[:FOLLOWS]-(influencer)
WHERE neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify top influencers within 'neo4j's network based on the number of mutual followers.,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who are the top influencers within 'neo4j's network, based on the number of followers they share with 'neo4j'?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the individuals 'neo4j' follows who have the highest number of mutual followers with 'neo4j'?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How can we determine the most influential users in 'neo4j’s network by counting mutual followers?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which users followed by 'neo4j' also have a significant following among 'neo4j’s own followers, indicating influence?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the names of the top influencers in 'neo4j's circle, ranked by their shared followers with 'neo4j'?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can we find out which influencers 'neo4j' is connected to through the most mutual followers?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who stands out as the most influential within 'neo4j’s network, considering mutual followers as the metric?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How do we identify key influencers in 'neo4j's network by analyzing the overlap in followers?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which influencers share the most followers with 'neo4j', indicating their prominence within 'neo4j’s network?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","In 'neo4j's network, who are the top five users with the most mutual followers, signifying influence?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How can mutual followers be used to pinpoint the top influencers in 'neo4j’s network?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who are the individuals that not only 'neo4j' follows but also have a large mutual following with 'neo4j', signaling their influence?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can the number of mutual followers reveal the most influential people within 'neo4j's network?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What method can we use to discover the influencers within 'neo4j's network based on mutual followers?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Who among 'neo4j's followed users are recognized as top influencers by virtue of shared followers?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How are influencers within 'neo4j’s network identified through the lens of shared followers?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which accounts followed by 'neo4j' are also widely followed by 'neo4j’s followers, making them key influencers?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can we assess who the leading influencers are within 'neo4j’s network by counting the mutual followers?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who ranks as the top influencers in 'neo4j's social circle, determined by the count of mutual followers?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How do we determine the central figures within 'neo4j's network through the concept of mutual followers?,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(influencer:User)
MATCH (follower:User)-[:FOLLOWS]->(influencer)
WHERE (follower)-[:FOLLOWS]->(neo) AND neo <> influencer
WITH influencer, COUNT(DISTINCT follower) AS mutualFollowers
RETURN influencer.screen_name AS Influencer, mutualFollowers
ORDER BY mutualFollowers DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Find common interests among 'neo4j's followers based on hashtags used in their tweets.
","MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What hashtags are most commonly used among 'neo4j's followers, indicating shared interests?","MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the top five interests of 'neo4j's followers based on hashtag usage in their tweets?,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How can we discover the common topics that 'neo4j's followers are interested in through hashtags?,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which hashtags do 'neo4j's followers use the most, and what does that say about their shared interests?","MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the prevailing hashtags among 'neo4j's followers, showing their collective interests?","MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How do we find out what 'neo4j's followers are commonly interested in by analyzing hashtags in their tweets?,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can we determine the mutual interests of 'neo4j's followers through the hashtags they frequently post?,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What shared interests do 'neo4j's followers have, as evidenced by the hashtags they use in their tweets?","MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which hashtags are repeatedly used by 'neo4j's followers, indicating a common interest among them?","MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","In terms of hashtags, what common themes exist among 'neo4j's followers on Twitter?","MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How can hashtags help us understand the shared interests of followers of 'neo4j'?,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can the analysis of hashtags in tweets by 'neo4j's followers reveal their collective interests?,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What topics, represented by hashtags, are most popular among 'neo4j's followers?","MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How do the hashtags used by 'neo4j's followers indicate their shared topics of interest?,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the most frequently used hashtags by 'neo4j's followers, suggesting their areas of shared interest?","MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can we identify the common interests among 'neo4j's followers by examining the hashtags they use?,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What hashtags unify 'neo4j's followers, reflecting their shared preferences and interests?","MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Through hashtags, can we find out what interests 'neo4j's followers share?","MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the top five hashtags that signify shared interests among 'neo4j's followers?,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How can we pinpoint the shared interests of 'neo4j's followers by looking at the hashtags in their tweets?,"MATCH (follower:User)-[:FOLLOWS]->(neo:User {screen_name: 'neo4j'}),
      (follower)-[:POSTS]->(tweet:Tweet)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag, COUNT(DISTINCT follower) AS followersCount
RETURN hashtag.name AS CommonInterest, followersCount
ORDER BY followersCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Discover layers of interaction within 'neo4j's network based on replies to their tweets, up to two levels deep.","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply1:Tweet)<-[:REPLY_TO]-(reply2:Tweet)
WITH tweet, reply1, reply2, 
     COUNT(DISTINCT reply1) AS firstLevelReplies,
     COUNT(DISTINCT reply2) AS secondLevelReplies
RETURN tweet.id AS TweetID, firstLevelReplies, secondLevelReplies
ORDER BY firstLevelReplies DESC, secondLevelReplies DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How can we identify the tweets by 'neo4j' that have generated the most replies, considering two layers of interaction?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply1:Tweet)<-[:REPLY_TO]-(reply2:Tweet)
WITH tweet, reply1, reply2, 
     COUNT(DISTINCT reply1) AS firstLevelReplies,
     COUNT(DISTINCT reply2) AS secondLevelReplies
RETURN tweet.id AS TweetID, firstLevelReplies, secondLevelReplies
ORDER BY firstLevelReplies DESC, secondLevelReplies DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you show the top five 'neo4j' tweets that have the highest number of first and second-level replies?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply1:Tweet)<-[:REPLY_TO]-(reply2:Tweet)
WITH tweet, reply1, reply2, 
     COUNT(DISTINCT reply1) AS firstLevelReplies,
     COUNT(DISTINCT reply2) AS secondLevelReplies
RETURN tweet.id AS TweetID, firstLevelReplies, secondLevelReplies
ORDER BY firstLevelReplies DESC, secondLevelReplies DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the 'neo4j' tweets with the most extensive interaction chains, up to two replies deep?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply1:Tweet)<-[:REPLY_TO]-(reply2:Tweet)
WITH tweet, reply1, reply2, 
     COUNT(DISTINCT reply1) AS firstLevelReplies,
     COUNT(DISTINCT reply2) AS secondLevelReplies
RETURN tweet.id AS TweetID, firstLevelReplies, secondLevelReplies
ORDER BY firstLevelReplies DESC, secondLevelReplies DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How do we analyze 'neo4j's tweets for their reach in terms of reply depth, focusing on the first two levels of replies?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply1:Tweet)<-[:REPLY_TO]-(reply2:Tweet)
WITH tweet, reply1, reply2, 
     COUNT(DISTINCT reply1) AS firstLevelReplies,
     COUNT(DISTINCT reply2) AS secondLevelReplies
RETURN tweet.id AS TweetID, firstLevelReplies, secondLevelReplies
ORDER BY firstLevelReplies DESC, secondLevelReplies DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which tweets from 'neo4j' sparked the most engaging conversations, as measured by replies up to two levels deep?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply1:Tweet)<-[:REPLY_TO]-(reply2:Tweet)
WITH tweet, reply1, reply2, 
     COUNT(DISTINCT reply1) AS firstLevelReplies,
     COUNT(DISTINCT reply2) AS secondLevelReplies
RETURN tweet.id AS TweetID, firstLevelReplies, secondLevelReplies
ORDER BY firstLevelReplies DESC, secondLevelReplies DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","In terms of interaction depth, which of 'neo4j's tweets have received the most first and second-level replies?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply1:Tweet)<-[:REPLY_TO]-(reply2:Tweet)
WITH tweet, reply1, reply2, 
     COUNT(DISTINCT reply1) AS firstLevelReplies,
     COUNT(DISTINCT reply2) AS secondLevelReplies
RETURN tweet.id AS TweetID, firstLevelReplies, secondLevelReplies
ORDER BY firstLevelReplies DESC, secondLevelReplies DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How can we uncover the structure of conversations starting from 'neo4j's tweets, specifically looking at replies two levels deep?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply1:Tweet)<-[:REPLY_TO]-(reply2:Tweet)
WITH tweet, reply1, reply2, 
     COUNT(DISTINCT reply1) AS firstLevelReplies,
     COUNT(DISTINCT reply2) AS secondLevelReplies
RETURN tweet.id AS TweetID, firstLevelReplies, secondLevelReplies
ORDER BY firstLevelReplies DESC, secondLevelReplies DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What analysis can reveal the 'neo4j' tweets that have not just been replied to but have spurred further replies, up to two levels?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply1:Tweet)<-[:REPLY_TO]-(reply2:Tweet)
WITH tweet, reply1, reply2, 
     COUNT(DISTINCT reply1) AS firstLevelReplies,
     COUNT(DISTINCT reply2) AS secondLevelReplies
RETURN tweet.id AS TweetID, firstLevelReplies, secondLevelReplies
ORDER BY firstLevelReplies DESC, secondLevelReplies DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can we determine the top five tweets by 'neo4j' that led to the most layered conversations, with replies and replies to those replies?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply1:Tweet)<-[:REPLY_TO]-(reply2:Tweet)
WITH tweet, reply1, reply2, 
     COUNT(DISTINCT reply1) AS firstLevelReplies,
     COUNT(DISTINCT reply2) AS secondLevelReplies
RETURN tweet.id AS TweetID, firstLevelReplies, secondLevelReplies
ORDER BY firstLevelReplies DESC, secondLevelReplies DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How do we map out the conversation layers stemming from 'neo4j's tweets, focusing on the first two levels of replies?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply1:Tweet)<-[:REPLY_TO]-(reply2:Tweet)
WITH tweet, reply1, reply2, 
     COUNT(DISTINCT reply1) AS firstLevelReplies,
     COUNT(DISTINCT reply2) AS secondLevelReplies
RETURN tweet.id AS TweetID, firstLevelReplies, secondLevelReplies
ORDER BY firstLevelReplies DESC, secondLevelReplies DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What method can be used to discover the 'neo4j' tweets that serve as the basis for the most complex chains of replies, up to two levels deep?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply1:Tweet)<-[:REPLY_TO]-(reply2:Tweet)
WITH tweet, reply1, reply2, 
     COUNT(DISTINCT reply1) AS firstLevelReplies,
     COUNT(DISTINCT reply2) AS secondLevelReplies
RETURN tweet.id AS TweetID, firstLevelReplies, secondLevelReplies
ORDER BY firstLevelReplies DESC, secondLevelReplies DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which of 'neo4j's tweets have fostered the most layered interactions, including original replies and subsequent replies to those?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply1:Tweet)<-[:REPLY_TO]-(reply2:Tweet)
WITH tweet, reply1, reply2, 
     COUNT(DISTINCT reply1) AS firstLevelReplies,
     COUNT(DISTINCT reply2) AS secondLevelReplies
RETURN tweet.id AS TweetID, firstLevelReplies, secondLevelReplies
ORDER BY firstLevelReplies DESC, secondLevelReplies DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How can the depth of interaction within 'neo4j's network be measured, particularly looking at replies two steps removed from the original tweet?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply1:Tweet)<-[:REPLY_TO]-(reply2:Tweet)
WITH tweet, reply1, reply2, 
     COUNT(DISTINCT reply1) AS firstLevelReplies,
     COUNT(DISTINCT reply2) AS secondLevelReplies
RETURN tweet.id AS TweetID, firstLevelReplies, secondLevelReplies
ORDER BY firstLevelReplies DESC, secondLevelReplies DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you find out which tweets by 'neo4j' have ignited conversations that extend beyond direct replies, reaching two levels of engagement?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply1:Tweet)<-[:REPLY_TO]-(reply2:Tweet)
WITH tweet, reply1, reply2, 
     COUNT(DISTINCT reply1) AS firstLevelReplies,
     COUNT(DISTINCT reply2) AS secondLevelReplies
RETURN tweet.id AS TweetID, firstLevelReplies, secondLevelReplies
ORDER BY firstLevelReplies DESC, secondLevelReplies DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","In exploring 'neo4j's Twitter interactions, how do we pinpoint the tweets that have triggered replies followed by further replies, up to two levels deep?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply1:Tweet)<-[:REPLY_TO]-(reply2:Tweet)
WITH tweet, reply1, reply2, 
     COUNT(DISTINCT reply1) AS firstLevelReplies,
     COUNT(DISTINCT reply2) AS secondLevelReplies
RETURN tweet.id AS TweetID, firstLevelReplies, secondLevelReplies
ORDER BY firstLevelReplies DESC, secondLevelReplies DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the shared interests between 'neo4j' and their most engaged followers, based on common hashtags in interactions?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which hashtags reveal common interests between 'neo4j' and its most engaged followers?,"MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How can we identify the shared interests of 'neo4j' and their followers through the analysis of hashtags used in their interactions?,"MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the top hashtags that both 'neo4j' and its highly engaged followers frequently use, indicating shared topics of interest?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you list the common hashtags between 'neo4j' and its followers that suggest a mutual interest, based on their Twitter activity?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What topics, represented by hashtags, do 'neo4j' and its most active followers both engage with on Twitter?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","In terms of hashtags, what common grounds do 'neo4j' and its most responsive followers share on Twitter?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How do we determine the shared hashtags between 'neo4j' and their followers, signifying mutual interests in their tweets and interactions?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which hashtags are most commonly shared between 'neo4j' and its followers, pointing to areas of shared interest?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",What are the principal hashtags that signify shared interests between 'neo4j' and its most involved followers?,"MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can we find the hashtags that both 'neo4j' and its engaged followers frequently post about, indicating shared subjects of interest?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How do hashtags used in interactions between 'neo4j' and its followers highlight their shared interests?,"MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Which shared hashtags between 'neo4j' and its followers reveal the most about their mutual interests?,"MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What hashtags are commonly used by both 'neo4j' and its most engaged followers, suggesting topics of mutual interest?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How can we uncover the shared interests of 'neo4j' and its followers by examining the hashtags in their tweets and retweets?,"MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the most popular hashtags among 'neo4j' and its most active followers, showcasing shared topics or interests?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can the use of certain hashtags in interactions between 'neo4j' and its followers indicate shared areas of interest or topics?,"MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which hashtags do 'neo4j' and its followers both prominently use, reflecting common interests in their Twitter interactions?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",How do we analyze the shared hashtags to find common interests between 'neo4j' and its most engaged followers on Twitter?,"MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What common hashtags are found in the interactions between 'neo4j' and its followers, and what do they reveal about shared interests?","MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can we identify mutual interests between 'neo4j' and its followers by analyzing the hashtags they both use in their Twitter activities?,"MATCH (neo:User {screen_name: 'neo4j'})<-[:FOLLOWS]-(follower:User),
      (follower)-[:POSTS|RETWEETS|REPLY_TO]->(content:Tweet)-[:TAGS]->(hashtag:Hashtag),
      (neo)-[:POSTS|RETWEETS|REPLY_TO]->(neoContent:Tweet)-[:TAGS]->(hashtag)
WITH follower, hashtag, COUNT(DISTINCT content) + COUNT(DISTINCT neoContent) AS SharedInterestCount
RETURN follower.screen_name AS Follower, hashtag.name AS SharedHashtag, SharedInterestCount
ORDER BY SharedInterestCount DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Determine 'neo4j's network influence by analyzing the spread of their tweets through retweets by others,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:RETWEETS*]-(retweet:Tweet)
WITH tweet, COUNT(DISTINCT retweet) AS RetweetSpread
RETURN tweet.id AS TweetID, RetweetSpread
ORDER BY RetweetSpread DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How can we identify the top five tweets by 'neo4j' with the widest spread, as measured by the count of unique retweets?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:RETWEETS*]-(retweet:Tweet)
WITH tweet, COUNT(DISTINCT retweet) AS RetweetSpread
RETURN tweet.id AS TweetID, RetweetSpread
ORDER BY RetweetSpread DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the most retweeted tweets of 'neo4j', indicating their network influence through the spread of their messages?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:RETWEETS*]-(retweet:Tweet)
WITH tweet, COUNT(DISTINCT retweet) AS RetweetSpread
RETURN tweet.id AS TweetID, RetweetSpread
ORDER BY RetweetSpread DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you list the five 'neo4j' tweets that achieved the greatest distribution, shown by the number of distinct retweets they received?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:RETWEETS*]-(retweet:Tweet)
WITH tweet, COUNT(DISTINCT retweet) AS RetweetSpread
RETURN tweet.id AS TweetID, RetweetSpread
ORDER BY RetweetSpread DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which tweets from 'neo4j' have been retweeted the most, demonstrating their impact across their network?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:RETWEETS*]-(retweet:Tweet)
WITH tweet, COUNT(DISTINCT retweet) AS RetweetSpread
RETURN tweet.id AS TweetID, RetweetSpread
ORDER BY RetweetSpread DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How do we determine the tweets by 'neo4j' that have been most effectively spread through retweets by others, focusing on the top five?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:RETWEETS*]-(retweet:Tweet)
WITH tweet, COUNT(DISTINCT retweet) AS RetweetSpread
RETURN tweet.id AS TweetID, RetweetSpread
ORDER BY RetweetSpread DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the top five tweets by 'neo4j' that have seen the largest spread in their network, as indicated by retweet counts?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:RETWEETS*]-(retweet:Tweet)
WITH tweet, COUNT(DISTINCT retweet) AS RetweetSpread
RETURN tweet.id AS TweetID, RetweetSpread
ORDER BY RetweetSpread DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can we identify 'neo4j's tweets that have been most widely shared, using the volume of unique retweets as a measure?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:RETWEETS*]-(retweet:Tweet)
WITH tweet, COUNT(DISTINCT retweet) AS RetweetSpread
RETURN tweet.id AS TweetID, RetweetSpread
ORDER BY RetweetSpread DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which of 'neo4j's tweets have the highest retweet spread, showcasing their significant influence within their network?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:RETWEETS*]-(retweet:Tweet)
WITH tweet, COUNT(DISTINCT retweet) AS RetweetSpread
RETURN tweet.id AS TweetID, RetweetSpread
ORDER BY RetweetSpread DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How do we calculate the spread of 'neo4j's tweets within their network by analyzing the retweet patterns, focusing on the five most spread tweets?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:RETWEETS*]-(retweet:Tweet)
WITH tweet, COUNT(DISTINCT retweet) AS RetweetSpread
RETURN tweet.id AS TweetID, RetweetSpread
ORDER BY RetweetSpread DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","In assessing 'neo4j’s influence on their network, which tweets have been retweeted the most, suggesting a broad engagement?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:RETWEETS*]-(retweet:Tweet)
WITH tweet, COUNT(DISTINCT retweet) AS RetweetSpread
RETURN tweet.id AS TweetID, RetweetSpread
ORDER BY RetweetSpread DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Measure the depth of conversation chains for each of 'neo4j's tweets, identifying the longest reply chain.","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)
OPTIONAL MATCH path=(originalTweet)<-[:REPLY_TO*]-(reply:Tweet)
WITH originalTweet, LENGTH(path) AS Depth
ORDER BY Depth DESC
WITH originalTweet.id AS TweetID, COLLECT(Depth) AS Depths
RETURN TweetID, REDUCE(maxDepth = 0, d IN Depths | CASE WHEN d > maxDepth THEN d ELSE maxDepth END) AS MaxDepth
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the tweet IDs of 'neo4j's tweets with the longest chains of replies, and what is the depth of those chains?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)
OPTIONAL MATCH path=(originalTweet)<-[:REPLY_TO*]-(reply:Tweet)
WITH originalTweet, LENGTH(path) AS Depth
ORDER BY Depth DESC
WITH originalTweet.id AS TweetID, COLLECT(Depth) AS Depths
RETURN TweetID, REDUCE(maxDepth = 0, d IN Depths | CASE WHEN d > maxDepth THEN d ELSE maxDepth END) AS MaxDepth
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you identify the top five 'neo4j' tweets that have the deepest conversation chains, including the length of each chain?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)
OPTIONAL MATCH path=(originalTweet)<-[:REPLY_TO*]-(reply:Tweet)
WITH originalTweet, LENGTH(path) AS Depth
ORDER BY Depth DESC
WITH originalTweet.id AS TweetID, COLLECT(Depth) AS Depths
RETURN TweetID, REDUCE(maxDepth = 0, d IN Depths | CASE WHEN d > maxDepth THEN d ELSE maxDepth END) AS MaxDepth
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which tweets posted by 'neo4j' generated the most extended reply threads, and how long are those threads?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)
OPTIONAL MATCH path=(originalTweet)<-[:REPLY_TO*]-(reply:Tweet)
WITH originalTweet, LENGTH(path) AS Depth
ORDER BY Depth DESC
WITH originalTweet.id AS TweetID, COLLECT(Depth) AS Depths
RETURN TweetID, REDUCE(maxDepth = 0, d IN Depths | CASE WHEN d > maxDepth THEN d ELSE maxDepth END) AS MaxDepth
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","For 'neo4j', which tweets have sparked the longest chains of replies, and what are the lengths of these chains?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)
OPTIONAL MATCH path=(originalTweet)<-[:REPLY_TO*]-(reply:Tweet)
WITH originalTweet, LENGTH(path) AS Depth
ORDER BY Depth DESC
WITH originalTweet.id AS TweetID, COLLECT(Depth) AS Depths
RETURN TweetID, REDUCE(maxDepth = 0, d IN Depths | CASE WHEN d > maxDepth THEN d ELSE maxDepth END) AS MaxDepth
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How can we find out the lengths of the longest reply chains for each of 'neo4j's tweets, and which tweets have the deepest conversations?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)
OPTIONAL MATCH path=(originalTweet)<-[:REPLY_TO*]-(reply:Tweet)
WITH originalTweet, LENGTH(path) AS Depth
ORDER BY Depth DESC
WITH originalTweet.id AS TweetID, COLLECT(Depth) AS Depths
RETURN TweetID, REDUCE(maxDepth = 0, d IN Depths | CASE WHEN d > maxDepth THEN d ELSE maxDepth END) AS MaxDepth
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Among 'neo4j’s tweets, which ones led to the most extended sequences of replies, and what are the maximum depths of these sequences?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)
OPTIONAL MATCH path=(originalTweet)<-[:REPLY_TO*]-(reply:Tweet)
WITH originalTweet, LENGTH(path) AS Depth
ORDER BY Depth DESC
WITH originalTweet.id AS TweetID, COLLECT(Depth) AS Depths
RETURN TweetID, REDUCE(maxDepth = 0, d IN Depths | CASE WHEN d > maxDepth THEN d ELSE maxDepth END) AS MaxDepth
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you determine the five 'neo4j' tweets that have attracted the longest threads of replies and specify the depth of those threads?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)
OPTIONAL MATCH path=(originalTweet)<-[:REPLY_TO*]-(reply:Tweet)
WITH originalTweet, LENGTH(path) AS Depth
ORDER BY Depth DESC
WITH originalTweet.id AS TweetID, COLLECT(Depth) AS Depths
RETURN TweetID, REDUCE(maxDepth = 0, d IN Depths | CASE WHEN d > maxDepth THEN d ELSE maxDepth END) AS MaxDepth
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the deepest reply chains to 'neo4j's tweets, and how can we identify the specific tweets with the highest number of nested replies?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)
OPTIONAL MATCH path=(originalTweet)<-[:REPLY_TO*]-(reply:Tweet)
WITH originalTweet, LENGTH(path) AS Depth
ORDER BY Depth DESC
WITH originalTweet.id AS TweetID, COLLECT(Depth) AS Depths
RETURN TweetID, REDUCE(maxDepth = 0, d IN Depths | CASE WHEN d > maxDepth THEN d ELSE maxDepth END) AS MaxDepth
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","For tweets posted by 'neo4j', which have the longest follow-up conversation chains, and how many replies deep do those chains go?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)
OPTIONAL MATCH path=(originalTweet)<-[:REPLY_TO*]-(reply:Tweet)
WITH originalTweet, LENGTH(path) AS Depth
ORDER BY Depth DESC
WITH originalTweet.id AS TweetID, COLLECT(Depth) AS Depths
RETURN TweetID, REDUCE(maxDepth = 0, d IN Depths | CASE WHEN d > maxDepth THEN d ELSE maxDepth END) AS MaxDepth
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How can we find the 'neo4j' tweets that initiated the longest chains of replies, and what are those lengths?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)
OPTIONAL MATCH path=(originalTweet)<-[:REPLY_TO*]-(reply:Tweet)
WITH originalTweet, LENGTH(path) AS Depth
ORDER BY Depth DESC
WITH originalTweet.id AS TweetID, COLLECT(Depth) AS Depths
RETURN TweetID, REDUCE(maxDepth = 0, d IN Depths | CASE WHEN d > maxDepth THEN d ELSE maxDepth END) AS MaxDepth
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the top five tweets by 'neo4j' that sparked the deepest conversation threads?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)
OPTIONAL MATCH path=(originalTweet)<-[:REPLY_TO*]-(reply:Tweet)
WITH originalTweet, LENGTH(path) AS Depth
ORDER BY Depth DESC
WITH originalTweet.id AS TweetID, COLLECT(Depth) AS Depths
RETURN TweetID, REDUCE(maxDepth = 0, d IN Depths | CASE WHEN d > maxDepth THEN d ELSE maxDepth END) AS MaxDepth
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the longest reply chains to 'neo4j’s tweets, and which tweets started these conversations?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)
OPTIONAL MATCH path=(originalTweet)<-[:REPLY_TO*]-(reply:Tweet)
WITH originalTweet, LENGTH(path) AS Depth
ORDER BY Depth DESC
WITH originalTweet.id AS TweetID, COLLECT(Depth) AS Depths
RETURN TweetID, REDUCE(maxDepth = 0, d IN Depths | CASE WHEN d > maxDepth THEN d ELSE maxDepth END) AS MaxDepth
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","For 'neo4j', how do we measure the lengths of reply chains for each tweet, focusing on identifying the ones with the greatest depth?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)
OPTIONAL MATCH path=(originalTweet)<-[:REPLY_TO*]-(reply:Tweet)
WITH originalTweet, LENGTH(path) AS Depth
ORDER BY Depth DESC
WITH originalTweet.id AS TweetID, COLLECT(Depth) AS Depths
RETURN TweetID, REDUCE(maxDepth = 0, d IN Depths | CASE WHEN d > maxDepth THEN d ELSE maxDepth END) AS MaxDepth
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","In terms of reply depth, which of 'neo4j's tweets led to the most extended conversations, and how long are those threads?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(originalTweet:Tweet)
OPTIONAL MATCH path=(originalTweet)<-[:REPLY_TO*]-(reply:Tweet)
WITH originalTweet, LENGTH(path) AS Depth
ORDER BY Depth DESC
WITH originalTweet.id AS TweetID, COLLECT(Depth) AS Depths
RETURN TweetID, REDUCE(maxDepth = 0, d IN Depths | CASE WHEN d > maxDepth THEN d ELSE maxDepth END) AS MaxDepth
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Identify the most engaged users that 'neo4j' follows on Twitter.,"MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(user:User)
OPTIONAL MATCH (user)-[:POSTS]->(tweet:Tweet)
WITH neo, user, COUNT(tweet) AS TweetsPosted
OPTIONAL MATCH (user)<-[:RETWEETS]-(retweet:Tweet)
WITH user, TweetsPosted, COUNT(retweet) AS RetweetsReceived
OPTIONAL MATCH (user)<-[:REPLY_TO]-(reply:Tweet)
WITH user, TweetsPosted, RetweetsReceived, COUNT(reply) AS RepliesReceived
OPTIONAL MATCH (user)<-[:MENTIONS]-(mention:Tweet)
WITH user, TweetsPosted, RetweetsReceived, RepliesReceived, COUNT(mention) AS MentionsReceived
RETURN user.screen_name AS Distributor, TweetsPosted, RetweetsReceived, RepliesReceived, MentionsReceived
ORDER BY RetweetsReceived DESC, RepliesReceived DESC, MentionsReceived DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who are the top five most engaged users that 'neo4j' follows, based on their Twitter activity?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(user:User)
OPTIONAL MATCH (user)-[:POSTS]->(tweet:Tweet)
WITH neo, user, COUNT(tweet) AS TweetsPosted
OPTIONAL MATCH (user)<-[:RETWEETS]-(retweet:Tweet)
WITH user, TweetsPosted, COUNT(retweet) AS RetweetsReceived
OPTIONAL MATCH (user)<-[:REPLY_TO]-(reply:Tweet)
WITH user, TweetsPosted, RetweetsReceived, COUNT(reply) AS RepliesReceived
OPTIONAL MATCH (user)<-[:MENTIONS]-(mention:Tweet)
WITH user, TweetsPosted, RetweetsReceived, RepliesReceived, COUNT(mention) AS MentionsReceived
RETURN user.screen_name AS Distributor, TweetsPosted, RetweetsReceived, RepliesReceived, MentionsReceived
ORDER BY RetweetsReceived DESC, RepliesReceived DESC, MentionsReceived DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you list the five users followed by 'neo4j' with the highest engagement, including tweets, retweets, replies, and mentions?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(user:User)
OPTIONAL MATCH (user)-[:POSTS]->(tweet:Tweet)
WITH neo, user, COUNT(tweet) AS TweetsPosted
OPTIONAL MATCH (user)<-[:RETWEETS]-(retweet:Tweet)
WITH user, TweetsPosted, COUNT(retweet) AS RetweetsReceived
OPTIONAL MATCH (user)<-[:REPLY_TO]-(reply:Tweet)
WITH user, TweetsPosted, RetweetsReceived, COUNT(reply) AS RepliesReceived
OPTIONAL MATCH (user)<-[:MENTIONS]-(mention:Tweet)
WITH user, TweetsPosted, RetweetsReceived, RepliesReceived, COUNT(mention) AS MentionsReceived
RETURN user.screen_name AS Distributor, TweetsPosted, RetweetsReceived, RepliesReceived, MentionsReceived
ORDER BY RetweetsReceived DESC, RepliesReceived DESC, MentionsReceived DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which users followed by 'neo4j' receive the most retweets, replies, and mentions on Twitter?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(user:User)
OPTIONAL MATCH (user)-[:POSTS]->(tweet:Tweet)
WITH neo, user, COUNT(tweet) AS TweetsPosted
OPTIONAL MATCH (user)<-[:RETWEETS]-(retweet:Tweet)
WITH user, TweetsPosted, COUNT(retweet) AS RetweetsReceived
OPTIONAL MATCH (user)<-[:REPLY_TO]-(reply:Tweet)
WITH user, TweetsPosted, RetweetsReceived, COUNT(reply) AS RepliesReceived
OPTIONAL MATCH (user)<-[:MENTIONS]-(mention:Tweet)
WITH user, TweetsPosted, RetweetsReceived, RepliesReceived, COUNT(mention) AS MentionsReceived
RETURN user.screen_name AS Distributor, TweetsPosted, RetweetsReceived, RepliesReceived, MentionsReceived
ORDER BY RetweetsReceived DESC, RepliesReceived DESC, MentionsReceived DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Identify the five most active users on Twitter that 'neo4j' follows, measured by their posts and engagement.","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(user:User)
OPTIONAL MATCH (user)-[:POSTS]->(tweet:Tweet)
WITH neo, user, COUNT(tweet) AS TweetsPosted
OPTIONAL MATCH (user)<-[:RETWEETS]-(retweet:Tweet)
WITH user, TweetsPosted, COUNT(retweet) AS RetweetsReceived
OPTIONAL MATCH (user)<-[:REPLY_TO]-(reply:Tweet)
WITH user, TweetsPosted, RetweetsReceived, COUNT(reply) AS RepliesReceived
OPTIONAL MATCH (user)<-[:MENTIONS]-(mention:Tweet)
WITH user, TweetsPosted, RetweetsReceived, RepliesReceived, COUNT(mention) AS MentionsReceived
RETURN user.screen_name AS Distributor, TweetsPosted, RetweetsReceived, RepliesReceived, MentionsReceived
ORDER BY RetweetsReceived DESC, RepliesReceived DESC, MentionsReceived DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who are the top five Twitter users followed by 'neo4j' that have the greatest overall engagement, including tweets posted and received interactions?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(user:User)
OPTIONAL MATCH (user)-[:POSTS]->(tweet:Tweet)
WITH neo, user, COUNT(tweet) AS TweetsPosted
OPTIONAL MATCH (user)<-[:RETWEETS]-(retweet:Tweet)
WITH user, TweetsPosted, COUNT(retweet) AS RetweetsReceived
OPTIONAL MATCH (user)<-[:REPLY_TO]-(reply:Tweet)
WITH user, TweetsPosted, RetweetsReceived, COUNT(reply) AS RepliesReceived
OPTIONAL MATCH (user)<-[:MENTIONS]-(mention:Tweet)
WITH user, TweetsPosted, RetweetsReceived, RepliesReceived, COUNT(mention) AS MentionsReceived
RETURN user.screen_name AS Distributor, TweetsPosted, RetweetsReceived, RepliesReceived, MentionsReceived
ORDER BY RetweetsReceived DESC, RepliesReceived DESC, MentionsReceived DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Among the users that 'neo4j' follows, which ones are the most engaged based on their Twitter interactions?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(user:User)
OPTIONAL MATCH (user)-[:POSTS]->(tweet:Tweet)
WITH neo, user, COUNT(tweet) AS TweetsPosted
OPTIONAL MATCH (user)<-[:RETWEETS]-(retweet:Tweet)
WITH user, TweetsPosted, COUNT(retweet) AS RetweetsReceived
OPTIONAL MATCH (user)<-[:REPLY_TO]-(reply:Tweet)
WITH user, TweetsPosted, RetweetsReceived, COUNT(reply) AS RepliesReceived
OPTIONAL MATCH (user)<-[:MENTIONS]-(mention:Tweet)
WITH user, TweetsPosted, RetweetsReceived, RepliesReceived, COUNT(mention) AS MentionsReceived
RETURN user.screen_name AS Distributor, TweetsPosted, RetweetsReceived, RepliesReceived, MentionsReceived
ORDER BY RetweetsReceived DESC, RepliesReceived DESC, MentionsReceived DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the names of the top five users followed by 'neo4j' who have the highest number of tweets, retweets, replies, and mentions?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(user:User)
OPTIONAL MATCH (user)-[:POSTS]->(tweet:Tweet)
WITH neo, user, COUNT(tweet) AS TweetsPosted
OPTIONAL MATCH (user)<-[:RETWEETS]-(retweet:Tweet)
WITH user, TweetsPosted, COUNT(retweet) AS RetweetsReceived
OPTIONAL MATCH (user)<-[:REPLY_TO]-(reply:Tweet)
WITH user, TweetsPosted, RetweetsReceived, COUNT(reply) AS RepliesReceived
OPTIONAL MATCH (user)<-[:MENTIONS]-(mention:Tweet)
WITH user, TweetsPosted, RetweetsReceived, RepliesReceived, COUNT(mention) AS MentionsReceived
RETURN user.screen_name AS Distributor, TweetsPosted, RetweetsReceived, RepliesReceived, MentionsReceived
ORDER BY RetweetsReceived DESC, RepliesReceived DESC, MentionsReceived DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you determine the five most interacted-with users that 'neo4j' follows, factoring in their tweets, retweets, replies, and mentions?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(user:User)
OPTIONAL MATCH (user)-[:POSTS]->(tweet:Tweet)
WITH neo, user, COUNT(tweet) AS TweetsPosted
OPTIONAL MATCH (user)<-[:RETWEETS]-(retweet:Tweet)
WITH user, TweetsPosted, COUNT(retweet) AS RetweetsReceived
OPTIONAL MATCH (user)<-[:REPLY_TO]-(reply:Tweet)
WITH user, TweetsPosted, RetweetsReceived, COUNT(reply) AS RepliesReceived
OPTIONAL MATCH (user)<-[:MENTIONS]-(mention:Tweet)
WITH user, TweetsPosted, RetweetsReceived, RepliesReceived, COUNT(mention) AS MentionsReceived
RETURN user.screen_name AS Distributor, TweetsPosted, RetweetsReceived, RepliesReceived, MentionsReceived
ORDER BY RetweetsReceived DESC, RepliesReceived DESC, MentionsReceived DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who stands out as the five most engaged users in 'neo4j’s network, considering their Twitter activities and interactions received?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(user:User)
OPTIONAL MATCH (user)-[:POSTS]->(tweet:Tweet)
WITH neo, user, COUNT(tweet) AS TweetsPosted
OPTIONAL MATCH (user)<-[:RETWEETS]-(retweet:Tweet)
WITH user, TweetsPosted, COUNT(retweet) AS RetweetsReceived
OPTIONAL MATCH (user)<-[:REPLY_TO]-(reply:Tweet)
WITH user, TweetsPosted, RetweetsReceived, COUNT(reply) AS RepliesReceived
OPTIONAL MATCH (user)<-[:MENTIONS]-(mention:Tweet)
WITH user, TweetsPosted, RetweetsReceived, RepliesReceived, COUNT(mention) AS MentionsReceived
RETURN user.screen_name AS Distributor, TweetsPosted, RetweetsReceived, RepliesReceived, MentionsReceived
ORDER BY RetweetsReceived DESC, RepliesReceived DESC, MentionsReceived DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which five users followed by 'neo4j' are the most prominent on Twitter, based on a combination of their tweeting frequency and the engagement they receive?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(user:User)
OPTIONAL MATCH (user)-[:POSTS]->(tweet:Tweet)
WITH neo, user, COUNT(tweet) AS TweetsPosted
OPTIONAL MATCH (user)<-[:RETWEETS]-(retweet:Tweet)
WITH user, TweetsPosted, COUNT(retweet) AS RetweetsReceived
OPTIONAL MATCH (user)<-[:REPLY_TO]-(reply:Tweet)
WITH user, TweetsPosted, RetweetsReceived, COUNT(reply) AS RepliesReceived
OPTIONAL MATCH (user)<-[:MENTIONS]-(mention:Tweet)
WITH user, TweetsPosted, RetweetsReceived, RepliesReceived, COUNT(mention) AS MentionsReceived
RETURN user.screen_name AS Distributor, TweetsPosted, RetweetsReceived, RepliesReceived, MentionsReceived
ORDER BY RetweetsReceived DESC, RepliesReceived DESC, MentionsReceived DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","In 'neo4j's follow list, who are the five users with the highest engagement levels, including their contributions and interactions on Twitter?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(user:User)
OPTIONAL MATCH (user)-[:POSTS]->(tweet:Tweet)
WITH neo, user, COUNT(tweet) AS TweetsPosted
OPTIONAL MATCH (user)<-[:RETWEETS]-(retweet:Tweet)
WITH user, TweetsPosted, COUNT(retweet) AS RetweetsReceived
OPTIONAL MATCH (user)<-[:REPLY_TO]-(reply:Tweet)
WITH user, TweetsPosted, RetweetsReceived, COUNT(reply) AS RepliesReceived
OPTIONAL MATCH (user)<-[:MENTIONS]-(mention:Tweet)
WITH user, TweetsPosted, RetweetsReceived, RepliesReceived, COUNT(mention) AS MentionsReceived
RETURN user.screen_name AS Distributor, TweetsPosted, RetweetsReceived, RepliesReceived, MentionsReceived
ORDER BY RetweetsReceived DESC, RepliesReceived DESC, MentionsReceived DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Who are the top five most interacted with individuals that 'neo4j' follows, based on tweets, retweets, replies, and mentions received?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(user:User)
OPTIONAL MATCH (user)-[:POSTS]->(tweet:Tweet)
WITH neo, user, COUNT(tweet) AS TweetsPosted
OPTIONAL MATCH (user)<-[:RETWEETS]-(retweet:Tweet)
WITH user, TweetsPosted, COUNT(retweet) AS RetweetsReceived
OPTIONAL MATCH (user)<-[:REPLY_TO]-(reply:Tweet)
WITH user, TweetsPosted, RetweetsReceived, COUNT(reply) AS RepliesReceived
OPTIONAL MATCH (user)<-[:MENTIONS]-(mention:Tweet)
WITH user, TweetsPosted, RetweetsReceived, RepliesReceived, COUNT(mention) AS MentionsReceived
RETURN user.screen_name AS Distributor, TweetsPosted, RetweetsReceived, RepliesReceived, MentionsReceived
ORDER BY RetweetsReceived DESC, RepliesReceived DESC, MentionsReceived DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which of the users followed by 'neo4j' are the most influential on Twitter, measured by their activity and the engagement they attract?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(user:User)
OPTIONAL MATCH (user)-[:POSTS]->(tweet:Tweet)
WITH neo, user, COUNT(tweet) AS TweetsPosted
OPTIONAL MATCH (user)<-[:RETWEETS]-(retweet:Tweet)
WITH user, TweetsPosted, COUNT(retweet) AS RetweetsReceived
OPTIONAL MATCH (user)<-[:REPLY_TO]-(reply:Tweet)
WITH user, TweetsPosted, RetweetsReceived, COUNT(reply) AS RepliesReceived
OPTIONAL MATCH (user)<-[:MENTIONS]-(mention:Tweet)
WITH user, TweetsPosted, RetweetsReceived, RepliesReceived, COUNT(mention) AS MentionsReceived
RETURN user.screen_name AS Distributor, TweetsPosted, RetweetsReceived, RepliesReceived, MentionsReceived
ORDER BY RetweetsReceived DESC, RepliesReceived DESC, MentionsReceived DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Can you identify the five users that 'neo4j' follows with the most significant Twitter presence, through an analysis of tweets, retweets, replies, and mentions?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(user:User)
OPTIONAL MATCH (user)-[:POSTS]->(tweet:Tweet)
WITH neo, user, COUNT(tweet) AS TweetsPosted
OPTIONAL MATCH (user)<-[:RETWEETS]-(retweet:Tweet)
WITH user, TweetsPosted, COUNT(retweet) AS RetweetsReceived
OPTIONAL MATCH (user)<-[:REPLY_TO]-(reply:Tweet)
WITH user, TweetsPosted, RetweetsReceived, COUNT(reply) AS RepliesReceived
OPTIONAL MATCH (user)<-[:MENTIONS]-(mention:Tweet)
WITH user, TweetsPosted, RetweetsReceived, RepliesReceived, COUNT(mention) AS MentionsReceived
RETURN user.screen_name AS Distributor, TweetsPosted, RetweetsReceived, RepliesReceived, MentionsReceived
ORDER BY RetweetsReceived DESC, RepliesReceived DESC, MentionsReceived DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Among 'neo4j’s follows, who ranks in the top five for engagement, considering all forms of Twitter interactions?","MATCH (neo:User {screen_name: 'neo4j'})-[:FOLLOWS]->(user:User)
OPTIONAL MATCH (user)-[:POSTS]->(tweet:Tweet)
WITH neo, user, COUNT(tweet) AS TweetsPosted
OPTIONAL MATCH (user)<-[:RETWEETS]-(retweet:Tweet)
WITH user, TweetsPosted, COUNT(retweet) AS RetweetsReceived
OPTIONAL MATCH (user)<-[:REPLY_TO]-(reply:Tweet)
WITH user, TweetsPosted, RetweetsReceived, COUNT(reply) AS RepliesReceived
OPTIONAL MATCH (user)<-[:MENTIONS]-(mention:Tweet)
WITH user, TweetsPosted, RetweetsReceived, RepliesReceived, COUNT(mention) AS MentionsReceived
RETURN user.screen_name AS Distributor, TweetsPosted, RetweetsReceived, RepliesReceived, MentionsReceived
ORDER BY RetweetsReceived DESC, RepliesReceived DESC, MentionsReceived DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Explore how themes based on hashtags are echoed back in replies to 'neo4j's tweets.,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
OPTIONAL MATCH (reply)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag.name AS EchoedTheme, COUNT(reply) AS RepliesWithHashtags
WHERE EchoedTheme IS NOT NULL
RETURN EchoedTheme, RepliesWithHashtags
ORDER BY RepliesWithHashtags DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","What are the top five themes, represented by hashtags, that are commonly found in tweets replying to 'neo4j'?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
OPTIONAL MATCH (reply)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag.name AS EchoedTheme, COUNT(reply) AS RepliesWithHashtags
WHERE EchoedTheme IS NOT NULL
RETURN EchoedTheme, RepliesWithHashtags
ORDER BY RepliesWithHashtags DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]",Can you identify the five most prevalent hashtags in replies to tweets posted by the user 'neo4j'?,"MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
OPTIONAL MATCH (reply)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag.name AS EchoedTheme, COUNT(reply) AS RepliesWithHashtags
WHERE EchoedTheme IS NOT NULL
RETURN EchoedTheme, RepliesWithHashtags
ORDER BY RepliesWithHashtags DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","In responses to 'neo4j's tweets, which hashtags are echoed back most frequently?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
OPTIONAL MATCH (reply)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag.name AS EchoedTheme, COUNT(reply) AS RepliesWithHashtags
WHERE EchoedTheme IS NOT NULL
RETURN EchoedTheme, RepliesWithHashtags
ORDER BY RepliesWithHashtags DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","Which hashtags appear most often in tweets that reply to 'neo4j', and how many times do they occur?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
OPTIONAL MATCH (reply)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag.name AS EchoedTheme, COUNT(reply) AS RepliesWithHashtags
WHERE EchoedTheme IS NOT NULL
RETURN EchoedTheme, RepliesWithHashtags
ORDER BY RepliesWithHashtags DESC
LIMIT 5
"
"Given this schema, write a Cypher query that returns the data I am looking for.  Schema: [{'nodes': [{'name': 'Hashtag', 'count': 344}, {'name': 'Link', 'count': 1561}, {'name': 'Me', 'count': 1}, {'name': 'Source', 'count': 27}, {'name': 'Tweet', 'count': 2407}, {'name': 'User', 'count': 38986}], 'relationships': [({'name': 'Tweet', 'count': 2407}, 'TAGS', {'name': 'Hashtag', 'count': 344}), ({'name': 'User', 'count': 38986}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'MENTIONS', {'name': 'Me', 'count': 1}), ({'name': 'Me', 'count': 1}, 'POSTS', {'name': 'Tweet', 'count': 2407}), ({'name': 'Me', 'count': 1}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'User', 'count': 38986}), ({'name': 'Tweet', 'count': 2407}, 'RETWEETS', {'name': 'Tweet', 'count': 2407}), ({'name': 'User', 'count': 38986}, 'FOLLOWS', {'name': 'Me', 'count': 1}), ({'name': 'Tweet', 'count': 2407}, 'CONTAINS', {'name': 'Link', 'count': 1561}), ({'name': 'Tweet', 'count': 2407}, 'REPLY_TO', {'name': 'Tweet', 'count': 2407}), ({'name': 'Tweet', 'count': 2407}, 'USING', {'name': 'Source', 'count': 27})]}]","How can we determine the most repeated hashtags in replies to 'neo4j's tweets, and what is their count?","MATCH (neo:User {screen_name: 'neo4j'})-[:POSTS]->(tweet:Tweet)<-[:REPLY_TO]-(reply:Tweet)
OPTIONAL MATCH (reply)-[:TAGS]->(hashtag:Hashtag)
WITH hashtag.name AS EchoedTheme, COUNT(reply) AS RepliesWithHashtags
WHERE EchoedTheme IS NOT NULL
RETURN EchoedTheme, RepliesWithHashtags
ORDER BY RepliesWithHashtags DESC
LIMIT 5
"